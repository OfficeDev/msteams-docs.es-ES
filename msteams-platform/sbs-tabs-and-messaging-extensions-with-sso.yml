### YamlMime:Tutorial
title: AAD SSO para pestañas y extensión de mensajería
metadata:
  title: AAD SSO para pestañas y extensión de mensajería
  description: En este tutorial, aprenderás a configurar AAD SSO para pestañas.
  audience: Developer
  level: Beginner
  ms.date: 12/07/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: tabs/how-to/authentication/auth-aad-sso.md
  nextTutorialTitle: Obtenga más información sobre la autenticación de SSO para pestañas.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: ca795beaab73af0cd3ddf68a1adc583da2730ac4
  ms.sourcegitcommit: 3dc9b539c6f7fbfb844c47a78e3b4d2200dabdad
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/31/2022
  ms.locfileid: "64571267"
items:
- durationInMinutes: 1
  content: "El Azure Active Directory inicio de sesión único (AAD SSO) ayuda a autenticar usuarios en Teams. \n\n**Aspectos clave de la guía paso a paso de AAD SSO para pestañas y extensiones de mensajería**\n\n * Después del primer inicio de sesión, AAD SSO permite al usuario iniciar sesión automáticamente.\n * Permite al usuario iniciar sesión en otros dispositivos sin volver a escribir las credenciales de inicio de sesión.\n * Obtiene un token para el usuario que ha iniciado sesión.   \n\nEsta guía paso a paso le ayuda a crear pestañas y extensiones de mensajería que permiten AAD autenticación de SSO. Verá el resultado siguiente:\n\n  ![Imagen de enhorabuena](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)   \n"
- title: Requisitos previos
  durationInMinutes: 1
  content: "Asegúrese de instalar las siguientes herramientas y configurar el entorno de desarrollo:  \n\n* [Microsoft Teams](https://teams.microsoft.com/) con una cuenta válida\n* [SDK de .NET Core](https://dotnet.microsoft.com/download) versión 3.1\n* [Versión más reciente de Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* [versión más reciente de ngrok](https://ngrok.com/download) (solo para pruebas de devbox) o cualquier solución de túnel equivalente\n* [Microsoft 365 cuenta de desarrollador](https://docs.microsoft.com/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) o acceso Teams cuenta con los permisos adecuados para instalar una aplicación\n\n  > [!NOTE]\n  > Después de descargar ngrok, regístrate e instala [authtoken](https://ngrok.com/download).\n"
- title: Configurar entorno local
  durationInMinutes: 1
  content: "Clone `Microsoft-Teams-Samples` el repositorio en el repositorio local GitHub:  \n\n 1. Abra [Microsoft Teams ejemplos](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Seleccione **Código**.\n 1. En el menú desplegable, selecciona **Abrir con GitHub escritorio**.\n\n    ![Repositorio de clones](~/assets/images/meeting-token-generator/meeting-token-generator-clonerepository.png)\n\n 1. Seleccione **Clonar**. \n"
- title: Crear y registrar el bot en Azure AD portal
  durationInMinutes: 5
  content: "Los siguientes pasos le guiarán a:\n\n* Cree el recurso Bot de Azure para registrar el bot con Azure Bot Service.\n* Cree un secreto de cliente que permita la autenticación sso del bot.\n* Agregue Microsoft Teams para implementar el bot en un canal Teams.\n* Use ngrok para crear un túnel a los puntos de conexión del servidor web.\n* Agregue el punto de conexión de mensajería al túnel ngrok que creó.\n\n**Para crear un recurso bot de Azure**\n\n1. Vaya al [portal de Microsoft Azure web](https://portal.azure.com/).\n1. Elija **Crear un recurso**.\n1. En el cuadro de búsqueda, escriba **Bot de Azure**.\n1. Seleccione **Entrar**.\n1. Seleccione **Bot de Azure**.\n\n     ![Crear tarjeta de bot de Azure](~/assets/images/bots/createazurebot.png)\n\n1. Seleccione **Crear**.\n1. Escriba el nombre del controlador del bot necesario en **el controlador bot**.\n1. Selecciona tu **suscripción** en la lista desplegable.\n1. En la **lista desplegable Grupo de** recursos, seleccione el grupo de recursos existente. También puede crear un nuevo grupo de recursos (seleccione Crear **nuevo** > nombre de recurso > seleccione **Aceptar**).\n\n    ![Registrar bot](~/assets/images/Tab-ME-SSO/register-bot.png)\n\n1. En la **sección Id. de aplicación de Microsoft** , está seleccionada de forma predeterminada **Crear nuevo identificador de aplicación de Microsoft** . \n\n   Selecciona **Usar el registro de la aplicación existente** y escribe **Id. de aplicación existente** y **Contraseña de aplicación existente** para una aplicación existente. Seleccione **Crear nuevo identificador de aplicación de Microsoft** para una nueva aplicación.\n\n   > [!NOTE]\n   > No puedes crear más de un bot con el mismo **identificador de aplicación de Microsoft**.\n\n1. Seleccionar **tipo de aplicación** como `Multi Tenant`\n1. Seleccione **Revisar y crear**.\n\n   ![Registrar bot](~/assets/images/Tab-ME-SSO/register-bot-2.png)\n\n1. Si la validación pasa, seleccione **Crear**.\n\n    El servicio de bots tarda unos minutos en aprovisionarse.\n\n1. Seleccione **Ir a recursos**. \n\n    ![Implementar aplicación](~/assets/images/Tab-ME-SSO/go-to-resource.png)\n\n    Se crea el bot de Azure.\n\n    ![Implementar aplicación](~/assets/images/Tab-ME-SSO/app-overview.png)\n\n**Para crear un secreto de cliente**\n\n  Realice los pasos siguientes si ha creado un nuevo **identificador de aplicación de Microsoft**:\n\n1. En el panel izquierdo, seleccione **Configuración**. \n\n   > [!TIP]\n   > Guarde el **id. de la aplicación de Microsoft** **o el id. de cliente** para referencia futura.\n\n1. Junto a **Id. de aplicación de Microsoft**, selecciona **Administrar**.\n\n    ![Id. de aplicación de Microsoft](~/assets/images/Tab-ME-SSO/manage.png)\n\n1. En la **sección Secretos de** cliente, seleccione **Nuevo secreto de cliente**. \n\n    ![Nuevo secreto de cliente](~/assets/images/meeting-token-generator/meeting-token-generator-newclientsecret.png)\n\n   Aparecerá **la ventana Agregar un secreto de** cliente.  \n\n1. Escriba **Descripción**.\n\n1. Seleccione **Agregar**.\n\n    ![Agregar secreto de cliente a la aplicación](~/assets/images/Tab-ME-SSO/add-client-id.png)\n\n1. En la **columna** Valor, seleccione **Copiar en el Portapapeles**.\n\n     ![Valor del secreto de cliente](~/assets/images/Tab-ME-SSO/client-ids.png)\n   \n   > [!TIP]\n   > Guarde el **valor secretos de** cliente o la contraseña de la aplicación para su referencia futura.\n\n**Para agregar el Microsoft Teams canal**\n\n1. Seleccione **Inicio**.\n\n    ![Página principal](~/assets/images/Tab-ME-SSO/home.png)\n\n1. Seleccione el bot en **Recursos recientes**.\n\n1. Seleccione **Canales** en el panel izquierdo. \n\n1. Seleccione **Microsoft Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.\n\n1. Active la casilla para aceptar los **Términos de servicio**.\n\n1. Seleccione **Aceptar**.\n\n      ![Términos de servicio](~/assets/images/meeting-token-generator/meeting-token-generator-terms.png)\n\n1. Haga clic en **Guardar**.\n\n      ![Seleccione Teams](~/assets/images/meeting-token-generator/meeting-token-generator-config-teams.png)   \n\n**Para crear un túnel para el servidor web local**\n\nUse ngrok para crear un túnel para los puntos de conexión HTTPS del servidor web que se ejecuta localmente. Ejecute el siguiente comando en ngrok:\n\n ```bash\n ngrok http -host-header=localhost 3978\n ```\n\n**Para agregar punto de conexión de mensajería**\n\n1. Desde ngrok, copie la dirección URL HTTPS (https a io).\n\n    ![ngrok DIRECCIÓN URL HTTPS](~/assets/images/Tab-ME-SSO/ngrok-image.png)\n\n    > [!NOTE]\n    > La dirección URL HTTPS de su ngrok es su nombre de dominio completo.\n    > Se `WebAppDomain` trata de un nombre de dominio completo que no incluye `https://` en él.\n\n1. En **Configuración** para el bot de Azure que creó, seleccione **Configuración**.\n\n1. En **el extremo de** mensajería, use la dirección URL HTTPS disponible desde ngrok y al final de la dirección URL agregue **/api/messages**.\n\n    ![Extremo de mensajería](~/assets/images/Tab-ME-SSO/messaging-endpoint.png)\n\n1. Seleccione **Aplicar**.\n\n    Ha configurado correctamente un bot en Azure Bot Service.\n"
- title: Configurar SSO para la pestaña
  durationInMinutes: 1
  content: "1. Vaya a [Azure Portal](https://portal.azure.com/).\n\n1. Seleccione **Azure Active Directory**.\n\n1. Forme el panel izquierdo y seleccione **Registros de aplicaciones**.\n\n1. Seleccione el bot.\n\n1. Seleccione **Exponer una API**.\n\n1. Seleccione **Establecer**.\n\n   ![Exponer una API](~/assets/images/Tab-ME-SSO/application-id-set.png)\n\n1. Establezca el **URI de id.** de aplicación en forma de `api://your ngrok/botid-{your AppID}`.\n\n   ![Establecer vínculo](~/assets/images/Tab-ME-SSO/appid-uri1.png)\n    \n1. Seleccione **Agregar un ámbito**. \n\n1. En el panel que aparece, escriba `access_as_user` como nombre **de ámbito**.\n\n1. Establezca **Quién puede dar su consentimiento?** en `Admins and users`.\n\n1. Para configurar los mensajes de consentimiento de administrador y usuario con los `access_as_user` valores adecuados para el ámbito, proporcione la siguiente información en los campos:</br>\n\n   * Escriba `Teams can access the user’s profile` como **Nombre para mostrar del consentimiento de administrador**.\n\n   * Escriba `Allows Teams to call the app’s web APIs as the current user` como **Descripción del consentimiento de administrador**.\n\n   * Escriba `Teams can access the user profile and make requests on the user’s behalf` como **Nombre para mostrar del consentimiento de usuario**.\n\n   * Escriba `Enable Teams to call this app’s APIs with the same rights as the user` como **Descripción del consentimiento del usuario**.\n\n1. Asegúrese de que **Estado** se establece en **Habilitado**.\n\n1. Seleccione **Agregar ámbito para** guardar.\n\n   ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope.png)\n\n    > [!NOTE]\n    > El **nombre del ámbito** debe coincidir con el URI **del identificador de** aplicación con `/access_as_user` anexado al final.</br>\n       `api://your ngrok/botid-00000000-0000-0000-0000-000000000000/access_as_user`\n\n      ![Scopes](~/assets/images/Tab-ME-SSO/add-a-scope-final1.png) \n\n1. En la sección **Aplicaciones cliente autorizadas**, identifique las aplicaciones que quiere autorizar en la aplicación web de la aplicación. \n\n1. Seleccione **Agregar una aplicación cliente**. \n\n1. Escriba cada uno de los siguientes IDs de cliente y seleccione el ámbito autorizado:</br>\n\n     * `1fec8e78-bce4-4aaf-ab1b-5451cc387264`(Teams móvil o de escritorio)\n\n       ![Agregar aplicación cliente](~/assets/images/Tab-ME-SSO/add-client-application.png) \n\n     * `5e3ce6c0-2b1f-4285-8d4b-75ee78787346`(Teams web)\n\n       ![Agregar aplicación cliente](~/assets/images/Tab-ME-SSO/add-client-application21.png) \n    \n\n   En la siguiente imagen se muestra **el identificador de cliente**:\n\n     ![Aplicaciones cliente](~/assets/images/Tab-ME-SSO/client-id-2.png) \n\n1. En el panel izquierdo, seleccione **Permisos de API**. \n\n   > [!NOTE]\n   > Los usuarios solo deben dar su consentimiento a estos permisos si la aplicación Azure AD está registrada en un inquilino diferente.\n\n1. Seleccione **Agregar un permiso**\n\n1. Seleccione **Microsoft Graph**.\n\n   ![Microsoft Graph](~/assets/images/Tab-ME-SSO/microsoft-graph.png)\n\n1. Seleccione **Permisos delegados**\n\n1. Agregue los permisos siguientes:</br>\n    * **email**\n    * **offline_access**\n    * **OpenId**\n    * **profile**\n    * **User.Read**\n\n1. Seleccione **Agregar permisos**.\n\n1. En el panel izquierdo, seleccione **Autenticación** para establecer un URI de redireccionamiento. \n\n   > [!NOTE]\n   > Si a una aplicación no se le concede el consentimiento de administrador de TI, los usuarios deben proporcionar su consentimiento la primera vez que usen una aplicación.\n           \n     1. Seleccione **Agregar una plataforma**.\n     1. Seleccione **Web**.\n\n        ![Web](~/assets/images/Tab-ME-SSO/configure-platform1.png)\n\n     1. Escriba **Uri de redireccionamiento** como `https://token.botframework.com/.auth/web/redirect`.\n\n     1. Habilite **la concesión implícita y los flujos** híbridos seleccionando las siguientes casillas:\n         * **Tokens de id.**\n         * **Tokens de acceso**\n\n     1. Seleccione **Configurar**.\n\n        ![Configurar web](~/assets/images/Tab-ME-SSO/configure-web.png)\n\n**Para actualizar el manifiesto**\n\n1. Seleccione **Manifiesto** en el panel izquierdo.\n\n1. Asegúrese de que el elemento de configuración está **establecido en \"accessTokenAcceptedVersion\": 2**. Si no es así, cambie su valor a **2** y seleccione **Guardar**. \n\n   > [!Tip]\n   > Si ya estás probando el bot en Teams, debes cerrar sesión en el bot y cerrar sesión Teams. A continuación, vuelva a iniciar sesión para ver este cambio.\n\n   ![Actualizar manifiesto](~/assets/images/bots/update-manifest.png)</br>\n\n**Para configurar la Bot Service conexión**\n\n1. Vaya a **página ConfiguraciónAgregue** >  **la conexión de OAuth Configuración**.\n\n1. Seleccione **Agregar conexión de OAuth Configuración**.\n\n1. En **Nueva configuración de conexión**, escriba los siguientes detalles:\n\n    | Field | Valor o descripción |\n    | ----- | ----- |\n    | **Name** | Escriba el nombre de la nueva configuración de conexión. Puede usar el nombre en la configuración del código de servicio del bot. |\n    | **Proveedor de servicios** | Seleccione **Azure Active Directory V2**. |\n    | **Id. de cliente** | Se guardó anteriormente como id. **de aplicación de Microsoft**. |\n    | **Secreto de cliente** | Se guardó anteriormente **como valor** del identificador de secreto de cliente. |\n    | **Dirección URL Exchange token** | Use el **URI de id. de** aplicación obtenido anteriormente al exponer el extremo de la API. |\n    | **Identificación del inquilino** | Escriba **común**. |\n    | **Scopes** | Escriba **User.Read** y agregue todos los **ámbitos seleccionados** al especificar permisos para las API descendentes. |\n\n1. Haga clic en **Guardar**.\n\n    <img src=\"~/assets/images/Tab-ME-SSO/new-connection-setting.png\" alt=\"Bot Service connection\" width=\"300\"/>\n"
- title: Configurar la configuración de la aplicación
  durationInMinutes: 1
  content: "1. Vaya a **appsettings.json** en el repositorio clonado.\n\n    ![Ubicación de configuración de la aplicación](~/assets/images/Tab-ME-SSO/app-setting-folder.png)\n\n1. Abra **appsettings.json** en **Visual Studio Code** y actualice la siguiente información:  \n\n     * Establece `\"MicrosoftAppId\"` el id. de **la aplicación de Microsoft del bot**.\n     * Se `\"MicrosoftAppPassword\"` establece en el valor de id. de secreto de cliente del bot.\n     * Establezca `\"DOMAIN-NAME\"` la dirección URL de ngrok.\n     * Se `\"ConnectionName\"` establece en el nombre de la configuración de conexión de OAuth.\n     * Establece `\"ClientId\"` el id. de **la aplicación de Microsoft del bot**.\n     * Se `\"AppSecret\"` establece en el valor de id. de secreto de cliente del bot.\n     * Se `\"ApplicationIdURI\"` establece en forma de `api://584f****.ngrok.io/botid-{AppID}`.\n\n    ![Configuración de la aplicación](~/assets/images/Tab-ME-SSO/app-setting1.png)\n"
- title: Configurar archivo de manifiesto
  durationInMinutes: 1
  content: "1. Vaya a **manifest.json** en el repositorio clonado.\n\n    ![Ubicación del archivo de manifiesto](~/assets/images/Tab-ME-SSO/folder-manifest.png)\n\n1. Abra **manifest.json** en **Visual Studio Code** y realice los siguientes cambios:\n\n     * Reemplace todas las repeticiones de `[DOMAIN-NAME]` por su nombre de dominio ngrok. \n     * Reemplace todas las repeticiones por `[YOUR-MICROSOFT-APP-ID]` el identificador de **aplicación de Microsoft del bot**.\n\n         > [!NOTE]\n         > Según el escenario y `[YOUR-MICROSOFT-APP-ID]` puede `[DOMAIN-NAME]` producirse varias veces.\n\n     * Establecer `\"resource\"` como `api://584f****.ngrok.io/botid-{AppID}`.</br>\n    \n    ![Imagen del manifiesto2](~/assets/images/Tab-ME-SSO/vs-manifest.png)\n"
- title: Compilar y ejecutar el servicio
  durationInMinutes: 1
  content: "**Para compilar y ejecutar el servicio mediante Visual Studio 2019 o línea de comandos**\n\n# <a name=\"visual-studio-2019\"></a>[Visual Studio 2019](#tab/vs2019)\n\n   1. Inicie **Visual Studio 2019**.\n   1. Vaya a **FileOpen** >  >  **Project/Solution**.\n\n      ![Abrir archivo](~/assets/images/Tab-ME-SSO/open-project1.png)\n\n   1. Seleccione **Archivo Sample.csproj de SSO** de la **aplicación en la carpeta csharp** .\n\n      ![Project carpeta](~/assets/images/Tab-ME-SSO/project-folder1.png)\n\n   1. Verá el resultado siguiente:\n\n      ![Archivo de token](~/assets/images/Tab-ME-SSO/output1.png)\n\n   1. Pulse **F5** para ejecutar el proyecto.\n\n   1. Seleccione **Sí** si aparece el siguiente cuadro de diálogo:\n\n      ![Certificado de confianza](~/assets/images/Tab-ME-SSO/certificate.png)\n\n      Se abre una página web con un mensaje **El bot está listo.**\n\n      ![Aplicación lista](~/assets/images/Tab-ME-SSO/bot-completion-explorer.png) \n\n    \n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nNavegue a la **carpeta csharp** en una ventana del símbolo del sistema y escriba el siguiente comando:\n\n```bash\ndotnet run\n```\n\n![Dotnet](~/assets/images/Tab-ME-SSO/dotnet-run1.png)\n  \n"
- title: Upload sso app para Teams
  durationInMinutes: 1
  content: "1. En el repositorio clonado, vaya a **csharp > ejemplo de SSO de > TeamsAppManifest**.\n\n1. Cree una .zip con los siguientes archivos que están presentes en la **carpeta Manifiesto** : \n   * manifest.json\n   * icon-outline.png\n   * icon-color.png\n\n   ![Seleccionar archivo zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso.png)\n\n1. Vaya a **Microsoft Teams**.\n\n1. Selecciona **Tienda**.\n1. Selecciona **Administrar aplicaciones**.\n1. Seleccione **Publicar una aplicación**.\n\n   ![Dotnet](~/assets/images/Tab-ME-SSO/publish-an-app.png)\n\n1. Seleccione **Cargar una aplicación personalizada**. \n\n   ![Upload aplicación personalizada](~/assets/images/Tab-ME-SSO/upload-custom-app.png)\n\n1. Seleccione **Abrir** para cargar el .zip que creó en la **carpeta** Manifiesto.\n\n   ![Seleccionar archivo zip](~/assets/images/Tab-ME-SSO/upload-tab-me-sso-open.png)\n\n1. Seleccione **Agregar**.\n\n   ![Agregar la aplicación](~/assets/images/Tab-ME-SSO/add-sso-app.png)\n\n1. Enviar un mensaje al bot. \n1. El bot realizará el inicio de sesión único y mostrará la tarjeta de perfil junto con el símbolo del sistema para ver el token.\n\n   ![Tarjeta de perfil](~/assets/images/Tab-ME-SSO/Congratulation-image.png)\n\n1. Seleccione **Sí para** ver el token o **No** para continuar con el chat.\n  \n   ![Vista token](~/assets/images/Tab-ME-SSO/token-view1.png)\n\n  1. Si no se realiza SSO, el bot realizará el método de autenticación predeterminado para la pestaña.\n\n      ![Sin SSO](~/assets/images/Tab-ME-SSO/not-login11.png)\n\n  1. Seleccione puntos suspensivos **...** para abrir la extensión de mensajería.\n\n      ![extensión de mensajería](~/assets/images/Tab-ME-SSO/message-extension.png)\n  \n  1. Seleccione la nueva aplicación de SSO.\n\n      ![Aplicación SSO](~/assets/images/Tab-ME-SSO/recent-app-sso.png)\n\n  1. Seleccione **Iniciar sesión**.\n\n      ![Iniciar sesión](~/assets/images/Tab-ME-SSO/sign-in-sso1.png)\n\n  1. Escriba sus credenciales en el cuadro de inicio de sesión y seleccione **Siguiente**.\n\n      ![Cuadro Iniciar sesión](~/assets/images/Tab-ME-SSO/sign-in-box.png)\n  \n  1. Seleccione **Aceptar**.\n\n      ![cuadro de consentimiento](~/assets/images/Tab-ME-SSO/concent-box.png)\n\n  1. Abra la extensión de mensajería y seleccione la aplicación.\n\n  1. Seleccione su perfil en el cuadro de búsqueda. Verá algo como esto:\n\n      ![Perfil](~/assets/images/Tab-ME-SSO/hello-megan-profile.png)\n\n  1. Enviar `https://profile.botframework.com` a la aplicación para obtener una tarjeta de perfil.\n   \n      ![Tarjeta de perfil](~/assets/images/Tab-ME-SSO/profile-card.png)\n"
- title: Desafío completo
  durationInMinutes: 1
  content: >
    ¿Has llegado a algo como esto?

       ![Perfil de SSO](~/assets/images/Tab-ME-SSO/hello-megan-profile245.png)
- content: Has completado el tutorial para empezar a usar SSO para la aplicación de extensión de mensajería y pestañas.
