### YamlMime:Tutorial
title: Bot de Teams con inicio de sesión único
metadata:
  title: Bot de Teams con SSO
  description: En este tutorial, aprenderá a configurar el inicio de sesión único en un bot para Teams.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Obtenga más información sobre la autenticación de bots.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 1fb468c8b9cc3ce1a8f8d407ea957d579632847c
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887817"
items:
- durationInMinutes: 1
  content: "Los bots de Teams son bots conversacionales que ejecutan tareas automatizadas repetitivas realizadas por los usuarios, como el servicio al cliente. El usuario debe iniciar sesión con sus credenciales varias veces para realizar tareas repetitivas. El método de autenticación de inicio de sesión único (SSO) en Azure Active Directory actualiza de forma silenciosa el token de autenticación, lo que reduce el número de veces que los usuarios necesitan escribir sus credenciales de inicio de sesión. \n\nUn bot se comporta de forma diferente en función de la conversación en la que esté implicado:\n\n* Los bots en conversaciones de chat de canal y grupo requieren que el usuario @mention el bot.\n* Los bots en una conversación uno a uno no requieren una @mención. Todos los mensajes enviados por el usuario se enrutan al bot.\n\nEsta guía paso a paso le ayuda a crear un bot con la autenticación sso habilitada. Verá la siguiente salida:\n\n![Inicio de sesión móvil en el bot](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Requisitos previos
  durationInMinutes: 1
  content: "Asegúrese de instalar las herramientas siguientes y de configurar el entorno de desarrollo:  \n\n* Cuenta de Microsoft Teams activa con imagen de perfil\n\n  > [!TIP]\n  > Asegúrese de que la cuenta de Microsoft Teams no es una cuenta de invitado.\n\n* [ngrok](https://ngrok.com/) o solución de tunelización equivalente\n\n  > [!NOTE]\n  > Después de descargar ngrok, regístrese e instale [authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 o la versión más reciente\n* [Cuenta de desarrollador de Microsoft 365](concepts/build-and-test/prepare-your-o365-tenant.md) o acceso a la cuenta de Teams con los permisos adecuados para instalar una aplicación\n"
- title: Configuración del bot en Azure Bot Service
  durationInMinutes: 5
  content: "Para autenticar el bot con SSO, puede configurar el bot en Azure Bot Service. Registre el bot con Azure Bot Service al desarrollarlo y hospedarlo en Azure. Realice los siguientes pasos:\n\n* Use ngrok para crear un túnel a los puntos de conexión del servidor web.\n* Cree un recurso de Bot de Azure para registrar el bot con Azure Bot Service.\n* Cree un secreto de cliente que habilite la autenticación sso del bot.\n* Agregue el canal de Microsoft Teams para implementar el bot en un canal de Teams.\n* Agregue el punto de conexión de mensajería al túnel ngrok que ha creado.\n\nUse ngrok para crear un túnel para los puntos de conexión HTTPS disponibles públicamente del servidor web en ejecución local. Ejecute el siguiente comando en ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Para crear un recurso de Bot de Azure**\n\n1. Vaya a [Microsoft Azure Portal](https://portal.azure.com/).\n1. Elija **Crear un recurso**.\n1. En el cuadro de búsqueda, escriba **Bot de Azure** y seleccione la tecla Entrar.\n1. Seleccione **Bot de Azure**.\n\n    ![Creación de una tarjeta de bot de Azure](~/assets/images/bots/createazurebot.png)\n\n1. Seleccione **Crear**.\n1. Escriba el nombre de identificador de bot necesario en **Identificador de bot**.\n1. En la lista desplegable **Suscripción** , seleccione la suscripción.\n1. En la lista desplegable **Grupo de** recursos, seleccione el grupo de recursos.\n    \n    Para crear un nuevo recurso, seleccione **Crear nuevo**, escriba el nombre del recurso, seleccione **Aceptar** y seleccione la ubicación necesaria en la lista desplegable **Nueva ubicación del grupo de recursos** .\n\n    > [!NOTE]\n    > En la sección Microsoft App ID (Id. de aplicación de Microsoft), ya está seleccionada **la opción Create new Microsoft App ID (Crear nuevo identificador de aplicación de Microsoft** ). Puede seleccionar **Usar registro de aplicación existente**, escribir Id. **de aplicación existente** y escribir **Contraseña de aplicación existente**.\n\n1. Seleccione **Revisar y crear**.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Si se supera la validación, seleccione **Crear**.\n\n    El servicio de bot tarda unos minutos en aprovisionarse.\n\n1. Seleccione **Ir a recursos**. El bot y los recursos relacionados aparecen en el grupo de recursos.\n\n    Ahora se ha creado el bot de Azure.\n\n    ![Recurso de bot de Azure creado](~/assets/images/bots/Azurebotresource.png)\n\n**Para crear un secreto de cliente**\n\n1. En **Configuración**, seleccione **Configuración**.\n\n   > [!TIP]\n   > Guarde el **identificador de aplicación de Microsoft** o el **identificador de cliente** para futuras referencias.\n\n1. Seleccione **MultiTenant** en **Tipo de bot**.\n\n     ![Tipo de bot](~/assets/images/bots/bot-type.png)\n\n1. Junto a **Id. de aplicación de Microsoft**, seleccione **Administrar**.\n\n     ![Id. de aplicación de Microsoft](~/assets/images/bots/MicrosoftAppID.png)\n\n1. En la sección **Secretos de cliente** , seleccione **Nuevo secreto de cliente**. Aparece **la ventana Agregar un secreto de cliente** .  \n\n1. Escriba **Descripción** y seleccione **Agregar**.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. En la columna **Valor**, seleccione **Copiar en el Portapapeles** y guarde el identificador de secreto de cliente para futuras referencias.\n\n     ![Valor del secreto de cliente](~/assets/images/bots/valueclientsecret.png)\n   \n**Para agregar el canal de Microsoft Teams**\n\n1. Ve a **Inicio**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Abra el bot, que aparece en la sección **Recursos recientes**.\n1. Seleccione **Canales** en el panel izquierdo y seleccione **Teams**. <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Abrir Teams desde canales](~/assets/images/bots/channel-teams.png)    \n      ![Seleccione Teams](~/assets/images/bots/select-teams.png)    \n1. Seleccione **Guardar**.\n1. Active la casilla para aceptar los términos de servicio y seleccione **Aceptar**.</br>\n      ![Términos de servicio](~/assets/images/bots/select-terms-of-service.png)\n\n**Para agregar un punto de conexión de mensajería**\n\n1. En **Configuración** del bot de Azure que creó, seleccione **Configuración**.\n1. Ve a ngrok.\n1. Copie la dirección URL HTTPS (https a io) como se muestra en la siguiente imagen:\n\n    ![ngrok HTTPS URL](~/assets/images/bots/ngrokURL.png)\n\n1. En **Punto de conexión de mensajería**, use la dirección URL HTTPS disponible en ngrok y, al final de la dirección URL, agregue **/api/messages**.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Seleccione **Aplicar**.\n\n    Ha configurado correctamente un bot en Azure Bot Service y ahora debe configurar la conexión de bot service.\n"
- title: Configuración del inicio de sesión único para el bot
  durationInMinutes: 5
  content: "Para asegurarse de que Bot Service permite al usuario iniciar sesión y acceder al bot, debe configurar el inicio de sesión único para el bot. Para ello, siga estos pasos:\n\n* Agregue el URI de redirección al recurso del bot de Azure.\n* Exponga el punto de conexión de API para especificar la ubicación desde la que se puede acceder a los recursos.\n* Autorice las aplicaciones cliente.\n* Agregue los permisos de API necesarios para las llamadas de nivel inferior.\n* Habilite la concesión implícita.\n* Actualizar manifiesto.\n* Configurar la conexión de Bot Service.\n\n**Para agregar el URI de redirección al recurso del bot de Azure**\n\n1. Junto a **Id. de aplicación de Microsoft**, seleccione **Administrar**.</br>\n    ![Administrar identificador de aplicación](~/assets/images/bots/select-manage.png)\n1. En el panel izquierdo del recurso del bot, seleccione **Autenticación**.\n1. En la sección **Configuraciones de plataforma**, seleccione el botón **Agregar una plataforma**.\n1. Seleccione **Web**.\n\n1. Escriba **URI de redireccionamiento** como `https://token.botframework.com/.auth/web/redirect` y seleccione **Configurar**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    El URI de redirección se agrega al recurso del bot de Azure.\n\n    ![URI de redireccionamiento agregado al recurso del bot](~/assets/images/bots/redirectURIadded.png)\n\n**Para exponer el punto de conexión de API**\n\n1. En el panel izquierdo, seleccione **Exponer una API**.\n1. Seleccione **Establecer** para el URI del identificador de aplicación.\n1. Use el URI del identificador de aplicación que se muestra y anexe **api://botid al** principio del URI.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Seleccione **Guardar**. Guarde el **URI del identificador de aplicación** para futuras referencias.\n1. Seleccione **Agregar un ámbito**.\n1. En **Nombre del ámbito**, escriba **access_as_user**.\n1. En **¿Quién puede dar su consentimiento?**, cambie a **Administradores y usuarios**.\n1. Escriba los siguientes valores en los cuadros:\n\n    | Campo | Valor |\n    | ----- | ----- |\n    | Nombre para mostrar del consentimiento del administrador | Teams puede acceder al perfil del usuario. |\n    | Descripción del consentimiento del administrador | Permite a Teams llamar a las API web de la aplicación como el usuario actual. |\n    | Nombre para mostrar del consentimiento del usuario | Teams puede acceder a su perfil de usuario y realizar solicitudes en su nombre. |\n    | Descripción del consentimiento del usuario | Habilite Teams para llamar a las API de esta aplicación con los mismos derechos que tiene. |\n\n1. Asegúrese de que **Estado** se establece en **Habilitado**.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Seleccione **Agregar ámbito**. El nombre del ámbito coincide automáticamente con el URI del identificador de aplicación, con **/access_as_user** agregado al final.\n\n    ![API expuesta y ámbito agregado](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**Para autorizar aplicaciones cliente**\n\nAgregue los siguientes identificadores como **aplicaciones cliente autorizadas** y active también la casilla **ámbitos autorizados**:      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (aplicación móvil o de escritorio de Teams)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (aplicación web de Teams)</br>     \n    ![Agregar aplicación cliente a la aplicación](~/assets/images/bots/addclientapplication1.png)        \n\n**Para agregar los permisos de API necesarios para las llamadas de nivel inferior**\n\n1. Seleccione **Permisos de API** en el panel izquierdo.\n1. Agregue los permisos delegados de usuario que la aplicación requiere a las API de nivel inferior, por ejemplo, User.Read.</br>\n    ![Permisos de usuario de API](~/assets/images/bots/APIpermissions.png)\n\n**Para habilitar la concesión implícita**\n\n1. Seleccione **Autenticación** en el panel izquierdo.\n1. Active las casillas **Tokens de acceso** y **Tokens de identificador**.</br>\n    ![Casillas de verificación de autenticación para la aplicación](~/assets/images/bots/authenticationcheckboxes.png)\n1. Seleccione **Guardar** para guardar los cambios.\n\n**Para actualizar el manifiesto**\n\n1. Seleccione **Manifiesto** en el panel izquierdo.\n1. Asegúrese de que el elemento de configuración está establecido en **“accessTokenAcceptedVersion”: 2**. Si no es así, cambie su valor a **2** y seleccione **Guardar**. (Si ya está probando el bot en Teams, debe cerrar la sesión de esta aplicación y cerrar la sesión de Teams. A continuación, vuelva a iniciar sesión para ver este cambio).</br>\n    ![Actualizar manifiesto](~/assets/images/bots/update-manifest.png)</br>\n\n**Para configurar la conexión de Bot Service**\n\n1. Vaya a la **página** >  Configuración **Agregar configuración de conexión de OAuth**.\n1. Seleccione el botón **Agregar ajustes de conexión de OAuth** en la pantalla Configuración.\n1. En **Nueva configuración de conexión**, escriba los detalles siguientes:\n\n    | Field | Valor o descripción |\n    | ----- | ----- |\n    | Nombre | Escriba el nombre de la nueva configuración de conexión. Puede usar el nombre en la configuración del código de bot service. |\n    | Proveedor de servicios | Seleccione **Azure Active Directory V2**. |\n    | Id. de cliente | Se guardó anteriormente como **su identificador de aplicación de Microsoft**. |\n    | Secreto de cliente | Se guardó anteriormente como **Valor** del identificador de secreto de cliente. |\n    | Dirección URL de Intercambio de tokens | Use la **dirección URL del identificador de aplicación** obtenida anteriormente al exponer el punto de conexión de API. |\n    | Identificación del inquilino | Escriba **común**. |\n    | Scopes | Escriba **User.Read** y agregue también todos los **ámbitos** necesarios al especificar permisos para las API de nivel inferior. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Seleccione **Guardar**.\n1. Seleccione **Aplicar**.\n"
- title: Configuración y ejecución del ejemplo de bot
  durationInMinutes: 1
  content: >
    Configure el ejemplo de bot para comprender cómo autenticar el bot conversacional en Microsoft Teams.


    **Para configurar y ejecutar el ejemplo de bot**


    1. Abra Visual Studio.

    1. En Visual Studio, seleccione **Clonar un repositorio**.

    1. En la **ubicación del repositorio**, escriba `https://github.com/OfficeDev/Microsoft-Teams-Samples.git`. Asegúrese de tener en cuenta la **ruta de acceso** donde se clona el repositorio.

    1. Seleccione **Archivo** > **Abrir** > **proyecto o solución**.

    1. Vaya a **Microsoft-Teams-Samples > ejemplos > carpeta bot-conversation-sso-quickstart > csharp_dotnetcore** .

    1. Abra el archivo **BotSSOCSharp.csproj** .

    1. Abra el archivo **appsettings.json** .

    1. Actualice la configuración **de appsettings.json** para que el bot use `MicrosoftAppId` y `MicrosoftAppPassword`. Use el nombre de conexión de OAuth como **nombre de conexión**.

        > [!NOTE]
        > Puede obtenerlo en la `MicrosoftAppId` página Configuración del bot. `MicrosoftAppPassword` es el valor del identificador de secreto de cliente que guardó anteriormente.

        ![Appsettings json](~/assets/images/bots/appsettingsjson.png)

    1. Seleccione la tecla **F5** para ejecutar este proyecto.

        <br>

        <details>

        <summary><b>Solución de problemas</b></summary>

        Si recibe el error **No se puede encontrar el paquete** , siga estos pasos:

        1.  Vaya a **Herramientas** > **Configuración del Administrador** >  de **paquetes** NuGet.
        1.  En la ventana **Opciones** que aparece, seleccione **Orígenes de paquetes** del Administrador  >  de **paquetes NuGet**.
        1.  Seleccione **Agregar**.
        1.  En **Nombre**, escriba `nuget.org` y, en **Origen**, escriba `https://api.nuget.org/v3/index.json`.
        1.  Seleccione **Actualizar** y **Aceptar**.
        1.  Recompile el proyecto.
        <br>

        </details>
- title: Configuración y ejecución de la aplicación teams
  durationInMinutes: 2
  content: >
    La manera más completa de probar el bot es crear un paquete de aplicación y cargarlo en Teams. Este método es la única manera de probar la funcionalidad completa disponible para el bot en todos los ámbitos. Para configurar y ejecutar la aplicación de Teams, cargue el `manifest.zip` archivo.


    **Para ejecutar la aplicación de Teams cargando el archivo manifest.zip**


    1. En Visual Studio, vaya a la `appPackage/` carpeta .

    1. Abra el archivo `manifest.json`.

    1. En el `manifest.json` archivo, busque **{TODO: MicrosoftAppId}** y reemplácelo por el identificador de aplicación de Microsoft.

    1. En el Explorador de Windows, vaya a la carpeta **Microsoft-Teams-Samples > samples > bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage** .

    1. Comprima el contenido de la `appPackage/` carpeta para crear `manifest.zip`.

    1. Vaya a Teams.

    1. Para cargar `manifest.zip`, seleccione **Tienda > Administrar las aplicaciones > Cargar una aplicación personalizada** y abra `manifest.zip`.

    1. Seleccione **Agregar** para agregar el bot de conversación al chat.

        Puede interactuar con este bot enviándole un mensaje. El bot intercambia un token de SSO y realiza una llamada a Graph API en su nombre y devuelve los resultados. Mantiene la sesión iniciada a menos que envíe un mensaje al **cierre de sesión**.

    1. Envíe un mensaje al bot. El bot de conversación solicita permisos por primera vez.

        ![Permisos para bot](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Seleccione **Continuar** para aceptar los permisos.


    1. Seleccione **Aceptar** para **permisos solicitados**.

        ![Inicio de sesión móvil en el bot](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Desafío completo
  durationInMinutes: 1
  content: >
    ¿Se te ocurrió algo como esto?


    ![Inicio de sesión móvil en el bot](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Ha completado el tutorial para empezar a trabajar con sso en un bot para Microsoft Teams mediante Bot Framework.
