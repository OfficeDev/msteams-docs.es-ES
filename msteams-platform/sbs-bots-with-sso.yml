### YamlMime:Tutorial
title: Bot de Teams con inicio de sesión único
metadata:
  title: Teams Bot con SSO
  description: En este tutorial, aprenderás a configurar SSO en un bot para Teams.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Más información sobre la autenticación de bots
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a005f1123507e2f4f4d7e255b39a42a0eea233cb
  ms.sourcegitcommit: a36760750ff4f510c374a4c956be57f7c1b4a0db
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/20/2022
  ms.locfileid: "63674946"
items:
- durationInMinutes: 1
  content: "Teams bots son bots conversacionales que ejecutan tareas automatizadas repetitivas realizadas por los usuarios, como el servicio de atención al cliente. El usuario debe iniciar sesión con sus credenciales varias veces para realizar tareas repetitivas. El método de autenticación de inicio de sesión único (SSO) Azure Active Directory actualiza silenciosamente el token de autenticación. Esto se traduce en una reducción del número de veces que los usuarios necesitan escribir sus credenciales de inicio de sesión. \n\nUn bot se comporta de forma diferente en función de la conversación en la que está implicado:\n\n* Los bots en conversaciones de chat de canal y grupo requieren que el usuario @mention el bot.\n* Los bots en una conversación uno a uno no requieren una @mención. Todos los mensajes enviados por el usuario se enruta al bot.\n\nEsta guía paso a paso le ayuda a crear un bot con autenticación de SSO habilitada. Verá el resultado siguiente:\n\n![Mobile ha iniciado sesión en el bot](~/assets/images/bots/sbs-desktop-mobile.png)\n"
- title: Requisitos previos
  durationInMinutes: 1
  content: "Asegúrese de instalar las siguientes herramientas y configurar el entorno de desarrollo:  \n\n* Cuenta Microsoft Teams activa con imagen de perfil\n\n  > [!TIP]\n  > Asegúrese de Microsoft Teams cuenta no es una cuenta de invitado.\n\n* solución de túnel equivalente o [ngrok](https://ngrok.com/)\n\n  > [!NOTE]\n  > Después de descargar ngrok, regístrate e instala [authtoken](https://ngrok.com/download).\n\n* Visual Studio 2019 o la versión más reciente\n* [Microsoft 365 cuenta de desarrollador](concepts/build-and-test/prepare-your-o365-tenant.md) o acceso Teams cuenta con los permisos adecuados para instalar una aplicación\n"
- title: Configurar bot en el Servicio de bots de Azure
  durationInMinutes: 5
  content: "Para autenticar el bot con SSO, puede configurar el bot en el Servicio de bots de Azure. Registre el bot con el Servicio de bots de Azure al desarrollarlo y hospedarlo en Azure. Realice los siguientes pasos:\n\n* Use ngrok para crear un túnel a los puntos de conexión del servidor web.\n* Cree el recurso Bot de Azure para registrar el bot con el Servicio de bots de Azure.\n* Cree un secreto de cliente que permita la autenticación sso del bot.\n* Agregue Microsoft Teams para implementar el bot en un canal Teams.\n* Agregue el punto de conexión de mensajería al túnel ngrok que creó.\n\nUse ngrok para crear un túnel para los puntos de conexión HTTPS del servidor web que se ejecuta localmente. Ejecute el siguiente comando en ngrok:\n\n```bash\nngrok http -host-header=rewrite 3978\n```\n\n**Para crear un recurso bot de Azure**\n\n1. Vaya al [portal de Microsoft Azure web](https://portal.azure.com/).\n1. Elija **Crear un recurso**.\n1. En el cuadro de búsqueda, escriba **Bot de Azure** y seleccione la tecla Entrar.\n1. Seleccione **Bot de Azure**.\n\n    ![Crear tarjeta de bot de Azure](~/assets/images/bots/createazurebot.png)\n\n1. Seleccione **Crear**.\n1. Escriba el nombre del controlador del bot necesario en **el controlador bot**.\n1. En la **lista desplegable** Suscripción, seleccione la suscripción.\n1. En la **lista desplegable Grupo de** recursos, seleccione el grupo de recursos.\n    \n    Para crear un nuevo recurso, seleccione **Crear** nuevo, escriba el nombre del recurso, seleccione **Aceptar** y seleccione ubicación necesaria en La lista desplegable Nueva **ubicación de grupo de** recursos.\n\n    > [!NOTE]\n    > En la sección Id. de aplicación de Microsoft, ya está seleccionado **Crear nuevo identificador** de aplicación de Microsoft. Puedes seleccionar Usar **el registro de la aplicación existente**, escribir **Id. de aplicación existente** y escribir **Contraseña de aplicación existente**.\n\n1. Seleccione **Revisar y crear**.\n\n    <img src=\"~/assets/images/bots/Azurebotcreate.png\" alt=\"Create resource Azure bot\" width=\"700\"/>\n\n1. Si la validación pasa, seleccione **Crear**.\n\n    El servicio de bots tarda unos minutos en aprovisionarse.\n\n1. Seleccione **Ir a recursos**. El bot y los recursos relacionados se enumeran en el grupo de recursos.\n\n    Ahora se ha creado el bot de Azure.\n\n    ![Recurso de bot de Azure creado](~/assets/images/bots/Azurebotresource.png)\n\n**Para crear un secreto de cliente**\n\n1. En **Configuración**, seleccione **Configuración**.\n\n   > [!TIP]\n   > Guarde el **id. de la aplicación de Microsoft** **o el id. de cliente** para referencia futura.\n\n1. Seleccione **MultiTenant en** **Tipo de bot**.\n\n     ![Tipo bot](~/assets/images/bots/bot-type.png)\n\n1. Junto a **Id. de aplicación de Microsoft**, selecciona **Administrar**.\n\n     ![Id. de aplicación de Microsoft](~/assets/images/bots/MicrosoftAppID.png)\n\n1. En la **sección Secretos de** cliente, seleccione **Nuevo secreto de cliente**. Aparecerá **la ventana Agregar un secreto de** cliente.  \n\n1. Escriba **Descripción** y seleccione **Agregar**.\n\n    <img src=\"~/assets/images/bots/addclientsecret.png\" alt=\"Add client secret to app\" width=\"500\"/>\n\n1. En la **columna Valor** , seleccione **Copiar en el** Portapapeles y guarde el identificador de secreto de cliente para la referencia futura.\n\n     ![Valor del secreto de cliente](~/assets/images/bots/valueclientsecret.png)\n   \n**Para agregar el Microsoft Teams canal**\n\n1. Vaya a **Inicio**.\n\n    <img src=\"~/assets/images/bots/homepage.png\" alt=\"Home page\" width=\"600\"/>\n\n1. Abra el bot, que aparece en la **sección Recursos** recientes.\n1. Seleccione **Canales** en el panel izquierdo y **seleccione Teams** <img src=\"~/assets/images/bots/teamsicon.png\" alt=\"Teams icon\" width=\"20\"/>.    \n      ![Abrir Teams desde canales](~/assets/images/bots/channel-teams.png)    \n      ![Seleccione Teams](~/assets/images/bots/select-teams.png)    \n1. Seleccione **Guardar**.\n1. Active la casilla para aceptar los términos del servicio y seleccione **Aceptar**.</br>\n      ![Términos de servicio](~/assets/images/bots/select-terms-of-service.png)\n\n**Para agregar punto de conexión de mensajería**\n\n1. En **Configuración** para el bot de Azure que creó, seleccione **Configuración**.\n1. Vaya a ngrok.\n1. Copie la dirección URL HTTPS (https a io) como se muestra en la siguiente imagen:\n\n    ![ngrok DIRECCIÓN URL HTTPS](~/assets/images/bots/ngrokURL.png)\n\n1. En **el extremo de** mensajería, use la dirección URL HTTPS disponible desde ngrok y al final de la dirección URL agregue **/api/messages**.\n\n    <img src=\"~/assets/images/bots/messagingURL.png\" alt=\"Messaging endpoint\" width=\"600\"/>\n\n1. Seleccione **Aplicar**.\n\n    Ha configurado correctamente un bot en el Servicio de bots de Azure y ahora necesita configurar la conexión del servicio bot.\n"
- title: Configurar SSO para el bot
  durationInMinutes: 5
  content: "Para asegurarse de que el servicio bot permite al usuario iniciar sesión y tener acceso al bot, debe configurar SSO para el bot. Para ello, siga estos pasos:\n\n* Agregue uri de redireccionamiento al recurso bot de Azure.\n* Exponer el punto de conexión de la API para especificar la ubicación desde la que se puede obtener acceso a los recursos.\n* Autorizar aplicaciones cliente.\n* Agregue los permisos de API necesarios para las llamadas descendentes.\n* Habilitar la concesión implícita.\n* Actualizar manifiesto.\n* Configurar la conexión del servicio bot.\n\n**Para agregar uri de redireccionamiento al recurso bot de Azure**\n\n1. Junto al **id. de la aplicación de Microsoft**, selecciona **Administrar**.</br>\n    ![Administrar id. de aplicación](~/assets/images/bots/select-manage.png)\n1. En el panel izquierdo del recurso bot, seleccione **Autenticación**.\n1. En **Configuraciones de plataforma**, seleccione **Agregar una plataforma**.\n1. Seleccione **Web**.\n\n1. Escriba **Redirigir URI como** y **https://token.botframework.com/.auth/web/redirect** seleccione **Configurar**.\n\n    <img src=\"~/assets/images/bots/redirectURI.png\" alt=\"Configure Redirect URI\" width=\"600\"/>\n\n    El URI de redireccionamiento se agrega al recurso de bot de Azure.\n\n    ![Uri de redireccionamiento agregado al recurso bot](~/assets/images/bots/redirectURIadded.png)\n\n**Para exponer el punto de conexión de la API**\n\n1. En el panel izquierdo, seleccione **Exponer una API**.\n1. Seleccione **Establecer** para el URI de id. de aplicación.\n1. Use el URI de id. de aplicación que se **muestra y api://botid:** al principio del URI.\n\n    <img src=\"~/assets/images/bots/exposeAPI.png\" alt=\"Expose an API\" width=\"500\"/>\n\n1. Seleccione **Guardar**. Guarde el **URI de id. de** aplicación para la referencia futura.\n1. Seleccione **Agregar un ámbito**.\n1. En **Nombre de ámbito**, **escriba access_as_user**.\n1. En **Quién puede dar su consentimiento?**, cambie a **Administradores y usuarios**.\n1. Escriba los siguientes valores en los cuadros:\n\n    | Campo | Valor |\n    | ----- | ----- |\n    | Nombre para mostrar del consentimiento de administrador | Teams puede tener acceso al perfil del usuario |\n    | Descripción del consentimiento de administrador | Permite Teams llamar a las API web de la aplicación como el usuario actual. |\n    | Nombre para mostrar del consentimiento de usuario | Teams puede acceder a su perfil de usuario y realizar solicitudes en su nombre |\n    | Descripción del consentimiento del usuario | Habilita Teams para llamar a las API de esta aplicación con los mismos derechos que tienes. |\n\n1. Asegúrese de que **Estado** se establece en **Habilitado**.\n\n    <img src=\"~/assets/images/bots/addscope.png\" alt=\"Add a scope to app\" width=\"500\"/>\n\n1. Seleccione **Agregar ámbito**. El nombre del ámbito coincide automáticamente con el URI del identificador de aplicación, con **/access_as_user** agregado al final.\n\n    ![API expuesta y ámbito agregado](~/assets/images/bots/ExposeAPIandaddscope.png)\n\n**Para autorizar aplicaciones cliente**\n\nAgregue los siguientes IDs como **aplicaciones cliente autorizadas** y active también la casilla para **Ámbitos autorizados**:      \n* 1fec8e78-bce4-4aaf-ab1b-5451cc387264 (Teams móvil o de escritorio)            \n* 5e3ce6c0-2b1f-4285-8d4b-75ee78787346 (Teams web)</br>     \n    ![Agregar aplicación cliente a la aplicación](~/assets/images/bots/addclientapplication1.png)        \n\n**Para agregar los permisos de API necesarios para llamadas descendentes**\n\n1. Seleccione **Permisos de API en** el panel izquierdo.\n1. Agregue los permisos delegados de usuario que la aplicación requiera a las API de nivel inferior, por ejemplo, User.Read.</br>\n    ![Permisos de usuario de API](~/assets/images/bots/APIpermissions.png)\n\n**Para habilitar la concesión implícita**\n\n1. Seleccione **Autenticación** en el panel izquierdo.\n1. Seleccione las **casillas De acceso y** **Tokens** de id.</br>\n    ![Casillas de autenticación para la aplicación](~/assets/images/bots/authenticationcheckboxes.png)\n1. Seleccione **Guardar** para guardar los cambios.\n\n**Para actualizar el manifiesto**\n\n1. Seleccione **Manifiesto** en el panel izquierdo.\n1. Asegúrese de que el elemento de configuración está **establecido en \"accessTokenAcceptedVersion\": 2**. Si no es así, cambie su valor a **2** y seleccione **Guardar**. (Si ya estás probando el bot en Teams, debes cerrar sesión en esta aplicación y cerrar sesión Teams. A continuación, inicie sesión de nuevo para ver este cambio).</br>\n    ![Actualizar manifiesto](~/assets/images/bots/update-manifest.png)</br>\n\n**Para configurar la conexión del servicio bot**\n\n1. Vaya a **página ConfiguraciónAgregue** >  **la conexión de OAuth Configuración**.\n1. Seleccione **Agregar conexión de OAuth Configuración**.\n1. En **Nueva configuración de conexión**, escriba los siguientes detalles:\n\n    | Field | Valor o descripción |\n    | ----- | ----- |\n    | Nombre | Escriba el nombre de la nueva configuración de conexión. Puede usar el nombre en la configuración del código de servicio del bot. |\n    | Proveedor de servicios | Seleccione **Azure Active Directory V2**. |\n    | Id. de cliente | Se guardó anteriormente como id. **de aplicación de Microsoft**. |\n    | Secreto de cliente | Se guardó anteriormente **como valor** del identificador de secreto de cliente. |\n    | Dirección URL Exchange token | Use la **dirección URL de id. de** aplicación obtenida anteriormente al exponer el extremo de la API. |\n    | Identificación del inquilino | Escriba **común**. |\n    | Scopes | Escriba **User.Read y** agregue también todos los **ámbitos** necesarios al especificar permisos para las API de nivel inferior. |\n\n    <img src=\"~/assets/images/bots/botserviceconnection.png\" alt=\"Bot Service connection\" width=\"300\"/>\n\n1. Seleccione **Guardar**.\n1. Seleccione **Aplicar**.\n"
- title: Configurar y ejecutar el ejemplo de bot
  durationInMinutes: 1
  content: >
    Configure el ejemplo de bot para comprender cómo autenticar el bot de conversación en Microsoft Teams.


    **Para configurar y ejecutar el ejemplo de bot**


    1. Abra Visual Studio.

    1. En Visual Studio, seleccione **Clonar un repositorio**.

    1. En la **ubicación del repositorio**, escriba **https://github.com/OfficeDev/Microsoft-Teams-Samples.git**. Asegúrese de tener en cuenta **la ruta de acceso** donde se clona el repositorio.

    1. Seleccione **Archivo > Abrir > Project/Solución**.

    1. Vaya a **Microsoft-Teams-Samples > ejemplos > bot-conversation-sso-quickstart > csharp_dotnetcore** carpeta.

    1. Abra el **archivo BotSSOCSharp.csproj** .

    1. Abra el **archivo appsettings.json** .

    1. Actualice la **configuración appsettings.json** para que el bot use el `MicrosoftAppId` y `MicrosoftAppPassword`. Use el nombre de conexión OAuth como **nombre de conexión**.

        > [!NOTE]
        > Puede obtener el de `MicrosoftAppId` la página Configuración del bot. Es `MicrosoftAppPassword` el valor del identificador secreto de cliente que guardó anteriormente.

        ![Json de Appsettings](~/assets/images/bots/appsettingsjson.png)

    1. Seleccione la **tecla F5** para ejecutar este proyecto.

        <br>

        <details>

        <summary><b>Solución de problemas</b></summary>

        Si obtiene el error **No se puede encontrar el** paquete, siga estos pasos:

        1.  Vaya **a Herramientas** >  **NuGet Administrador de paquetes** >  **Administrador de paquetes Configuración**.
        1.  En la **ventana Opciones** que aparece, seleccione **NuGet Administrador de paquetes** >  **Package Sources**.
        1.  Seleccione **Agregar**.
        1.  En **Nombre**, escriba **nuget.org** y **en Origen**, escriba **https://api.nuget.org/v3/index.json**.
        1.  Seleccione **Actualizar** y **Aceptar**.
        1.  Recompilar el proyecto.
        <br>

        </details>
- title: Configurar y ejecutar la Teams aplicación
  durationInMinutes: 2
  content: >
    La forma más completa de probar el bot es crear un paquete de aplicación y cargarlo en Teams. Este método es la única forma de probar la funcionalidad completa disponible para el bot, en todos los ámbitos. Puedes configurar y ejecutar la aplicación Teams mediante la carga del **manifest.zip** archivo.


    **Para ejecutar la aplicación Teams mediante la carga del manifest.zip archivo**


    1. En Visual Studio, vaya a **la carpeta appPackage**/.

    1. Abra el **archivo manifest.json** .

    1. En el **archivo manifest.json** , busque **{TODO: MicrosoftAppId}** y reemplácenlo por su id. de aplicación de Microsoft.

    1. En Windows Explorer, vaya a la carpeta **Microsoft-Teams-Samples > ejemplos > bot-conversation-sso-quickstart > csharp_dotnetcore > appPackage**.

    1. Zip the contents of the **appPackage/** folder to create **manifest.zip**.

    1. Vaya a Teams.

    1. Para cargar **manifest.zip**, selecciona **Store > Administrar tus aplicaciones > Upload una aplicación personalizada** y abre **manifest.zip**.

    1. Selecciona **Agregar** para agregar el bot de conversación al chat.

        Puede interactuar con este bot enviándole un mensaje. El Bot intercambia un token de SSO y realiza una llamada a la API de Graph en su nombre y devuelve los resultados. Le mantiene al iniciar sesión a menos que envíe un mensaje al **cierre de sesión**.

    1. Enviar un mensaje al bot. El bot de conversación pide permisos por primera vez.

        ![Permisos para bot](~/assets/images/bots/sbsdesktop-mobile-consent-request.png)

    1. Seleccione **Continuar** para aceptar los permisos.


    1. Seleccione **Aceptar** para **permisos solicitados**.

        ![Mobile ha iniciado sesión en el bot](~/assets/images/bots/sbs-desktop-mobile.png)
- title: Desafío completo
  durationInMinutes: 1
  content: >
    ¿Has llegado a algo como esto?


    ![Mobile ha iniciado sesión en el bot](~/assets/images/bots/sbs-desktop-mobile.png)
- content: Ha completado el tutorial para empezar a usar SSO en un bot para Microsoft Teams bot Framework.
