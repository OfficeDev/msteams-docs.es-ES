### YamlMime:Tutorial
title: Compilación de webhooks salientes
metadata:
  title: Compilación de webhooks salientes
  description: Con este módulo de aprendizaje, aprenderá a configurar webhooks salientes para Que Microsoft Teams se integren con aplicaciones externas.
  audience: Developer
  level: Beginner
  ms.date: 14/01/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: webhooks-and-connectors/how-to/add-outgoing-webhook.md
  nextTutorialTitle: Obtenga más información sobre los webhooks salientes.
  ms.custom: mvc
  ms.localizationpriority: High
  ms.openlocfilehash: 1f99cc6f22e85f7ee32f29f6bfca245efc2e2117
  ms.sourcegitcommit: 4eeede81a0ae8ec985c6a1ad4f608df58371402f
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 07/14/2022
  ms.locfileid: "66792938"
items:
- durationInMinutes: 1
  content: "Los webhooks ayudan a Microsoft Teams a integrarse con aplicaciones externas. En Teams, los webhooks salientes actúan como bot y buscan mensajes en canales mediante **@mention**. Los webhooks salientes permiten a los usuarios enviar mensajes a servicios web sin realizar todo el proceso de creación de bots a través de Microsoft Bot Framework. Los webhooks salientes publican datos de Teams en cualquier servicio capaz de aceptar la carga json. \n\n**Características clave de los webhooks salientes**\n\n* Enviar notificaciones a cualquier servicio web externo.\n* Responda con mensajes de texto enriquecidos, incluidas tarjetas e imágenes. \n* Recibir mensajes en canales públicos y no dentro del ámbito personal o privado.\n* Enviar HTTP POST al servicio web y obtener respuesta. \n\n > [!NOTE]\n > Los webhooks salientes no pueden acceder a ninguna otra API, como recuperar la lista o la lista de canales de un equipo.\n\nEsta guía paso a paso le ayuda a crear webhooks salientes en Teams. Verá la siguiente salida:\n\n![Listo](~/assets/images/sbs-outgoing-webhooks/output-result1.png)\n"
- title: Requisitos previos
  durationInMinutes: 1
  content: "Asegúrese de instalar las siguientes herramientas y configurar el entorno de desarrollo:  \n\n* [Microsoft Teams](https://teams.microsoft.com/) con una cuenta válida\n* [Versión más reciente de Visual Studio](https://visualstudio.microsoft.com/downloads/)\n* versión más reciente [de ngrok](https://ngrok.com/download) (solo para pruebas de devbox) o cualquier solución de tunelización equivalente\n\n  > [!NOTE]\n  > Después de descargar ngrok, regístrese e instale [authtoken](https://ngrok.com/download).\n"
- title: Configuración del entorno local
  durationInMinutes: 1
  content: "Clone `Microsoft-Teams-Samples` el repositorio en su GitHub local:  \n\n 1. Abra [Ejemplos de Microsoft Teams](https://github.com/OfficeDev/Microsoft-Teams-Samples).\n 1. Seleccione **Código**.\n 1. En el menú desplegable, seleccione **Abrir con GitHub Desktop**.\n\n    ![Clone](~/assets/images/sbs-outgoing-webhooks/clone-repository.png)\n\n 1. Seleccione **Clonar**. \n"
- title: Crear webhooks salientes
  durationInMinutes: 5
  content: "1. Seleccione el equipo necesario y, a continuación, seleccione **Administrar equipo** en el menú desplegable (•••).\n\n   ![Administrar](~/assets/images/sbs-outgoing-webhooks/manage-team.png)\n\n1. Elija la pestaña **Aplicaciones** en la barra de navegación.\n\n   ![Choose](~/assets/images/sbs-outgoing-webhooks/app-selection.png)\n\n1. Use ngrok para crear un túnel para los puntos de conexión HTTPS disponibles públicamente del servidor web en ejecución local. Ejecute el siguiente comando en ngrok:\n\n    ```bash\n    ngrok http --host-header=localhost 3978\n    ```\n\n1. En la esquina inferior derecha de la ventana, seleccione **Crear un webhook saliente**.\n\n   ![Saliente](~/assets/images/sbs-outgoing-webhooks/create-outgoing-webhook.png).\n\n1. Escriba los detalles siguientes:\n \n    * **Nombre**: título del webhook en @mention pestaña.\n\n    * **Dirección URL de devolución de llamada**: dirección URL generada a partir de ngrok que acepta cargas JSON y recibe solicitudes POST de Teams. Para usar api/Sample o api/authenticatedSample, haga lo siguiente:\n\n        * Para api/sample, copie y pegue la dirección URL de ngrok y anexela con /api/sample.\n\n        * Para el ejemplo autenticado, copie y pegue la dirección URL de ngrok y anexela con /authenticatedSample?id=contoso.\n\n    * **Descripción**: cadena detallada que aparecerá en la tarjeta de perfil y en el panel de la aplicación de nivel de equipo.\n\n    * **Imagen de perfil (opcional):** icono de aplicación para el webhook.\n\n1. Seleccione **Crear**. El webhook saliente se agrega al canal del equipo actual.\n\n    ![Crear webhook saliente](~/assets/images/sbs-outgoing-webhooks/select.png)\n\n1. Aparece `Hash-based Message Authentication Code (HMAC)` un cuadro de diálogo. Puede usar el token de seguridad en el archivo **AuthProvider.cs** para autenticar las llamadas entre Teams y cualquier servicio externo designado. \n\n    > [!NOTE]\n    > El webhook saliente está disponible para los usuarios del equipo, solo si la dirección URL es válida y el servidor, y los tokens de autenticación de cliente son iguales. Por ejemplo, un protocolo de enlace HMAC.\n                \n     ![Código](~/assets/images/sbs-outgoing-webhooks/security-token.png)   \n"
- title: Compilación y ejecución del servicio
  durationInMinutes: 1
  content: "1. Inicie la versión más reciente de Visual Studio.\n\n1. Vaya a **Archivo** > **Abrir** > **proyecto o solución**.\n\n    ![Abrir archivo](~/assets/images/sbs-messagingextension-action/VSopenfile.png)\n\n1. Seleccione **El archivo WebhookSampleBot.sln** de la carpeta **csharp** .\n\n    ![Archivo de solución](~/assets/images//sbs-outgoing-webhooks/open-project.png)\n\n1. Actualice **\"contoso\"** a \"M365x712764\" y HMAC en el archivo **AuthProvider.cs** .  \n\n    ![actualizar](~/assets/images//sbs-outgoing-webhooks/update-hmac2.png)\n\n1. Pulse **F5** para ejecutar el proyecto.\n\n1. Seleccione **Sí** si aparece el siguiente cuadro de diálogo:\n\n    ![Certificado de confianza](~/assets/images//sbs-outgoing-webhooks/outgoing-webhook-certificate.png)\n\n   Una página web muestra información de host local.\n\n    ![Aplicación lista](~/assets/images//sbs-outgoing-webhooks/outgoing-webhooks-ready.png)                  \n"
- title: Interacción con la aplicación en Teams
  durationInMinutes: 1
  content: "1. Seleccione **General** para iniciar una nueva conversación.\n\n1. Seleccione **Nueva conversación** para comenzar una conversación.\n\n1. Escriba **\\@mencione** el nombre del webhook saliente para invocarlo en el canal. \n\n   ![mensaje](~/assets/images/sbs-outgoing-webhooks/type-mention.png)\n\n1. Seleccione **Enviar**.\n\n   > [!NOTE]\n   >  Puede enviar mensajes de texto, tarjetas prominentes y tarjetas adaptables como datos adjuntos con el webhook saliente.\n\n1. El chat de reunión muestra un mensaje nuevo.\n\n   ![Listo](~/assets/images/sbs-outgoing-webhooks/output-result.png)\n   \n"
- title: Desafío completo
  durationInMinutes: 1
  content: >
    ¿Se te ocurrió algo como esto?

       ![Listo](~/assets/images/sbs-outgoing-webhooks/output-result1.png)
- content: Ha completado el tutorial para empezar a trabajar con una aplicación de webhook saliente.
