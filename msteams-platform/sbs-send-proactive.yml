### YamlMime:Tutorial
title: Enviar mensajes proactivos
metadata:
  title: Enviar mensajes proactivos
  description: En este módulo, aprenderá a enviar mensajes proactivos, como mensajes de bienvenida, mensajes programados y notificaciones desde un bot.
  audience: Developer
  level: Beginner
  ms.date: 06/23/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ./bots/how-to/conversations/send-proactive-messages.md
  nextTutorialTitle: Obtenga más información sobre los mensajes proactivos.
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 6d1b65556820f07487371328209b29570d3e2e72
  ms.sourcegitcommit: e16b51a49756e0fe4eaf239898e28d3021f552da
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 06/04/2022
  ms.locfileid: "65887684"
items:
- durationInMinutes: 1
  content: "Un mensaje proactivo es cualquier mensaje enviado por un bot que no responde a una solicitud de un usuario que incluye mensajes, como:\n - Mensajes de bienvenida\n - Notificaciones\n - Mensajes programados\n \nEsta guía paso a paso le ayuda a enviar un mensaje proactivo desde un bot. Verá las siguientes salidas:\n\n* Mensaje de hola proactivo en el chat        \n![Hola proactivo en el chat](~/assets/images/proactive-scenario/proactive-helo.png)\n\n* Mensaje de hola proactivo como tarjeta adaptable    \n![hello proactivo en la tarjeta adaptable](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png) \n"
- title: Requisitos previos
  durationInMinutes: 2
  content: "Asegúrese de instalar lo siguiente:    \n\n* [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/).\n* [ASP.NET y desarrollo web](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-5.0.301-windows-x64-installer) o carga de trabajo de desarrollo multiplataforma de [.NET Core](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.410-windows-x64-installer) .\n* [ngrok](https://ngrok.com/download): una aplicación multiplataforma que permite exponer un servidor de desarrollo local a Internet con el mínimo esfuerzo.\n* [Obtenga un inquilino para desarrolladores de Teams gratuito](https://developer.microsoft.com/microsoft-365/dev-program).\n"
- title: Configuración del entorno local
  durationInMinutes: 3
  content: "1.  Descargue el [código de ejemplo](https://github.com/MicrosoftDocs/msteams-docs/tree/master/msteams-platform/assets/downloads/SendProactiveMessages.zip) (archivo Zip) y extraiga los archivos.\n1.  Vaya a los archivos extraídos y haga doble clic en **ProactiveBot.csproj**. La solución se abre en Visual Studio.\n1.  En Visual Studio, haga clic con el botón derecho en el proyecto (**ProactiveBot**) y seleccione **Compilar** para compilar la solución.\n\n    ![Proyecto de bot proactivo](~/assets/images/proactive-scenario/proactivebot-project.png)\n\n    <br>\n\n    <details>\n\n    <summary><b>Solución de problemas</b></summary>\n\n    Si recibe el error **No se puede encontrar el paquete** , siga estos pasos:\n\n    1.  Vaya a **Herramientas** > **Configuración del Administrador** >  de **paquetes** NuGet.\n    1.  En la ventana **Opciones** que aparece, seleccione **Orígenes de paquetes** del Administrador  >  de **paquetes NuGet**.\n    1.  Seleccione **Agregar**.\n    1.  Escriba `nuget.org` en el **nombre** y `https://api.nuget.org/v3/index.json` en los campos **Origen** .\n    1.  Seleccione **Actualizar** y **Aceptar**.\n    1.  Recompile el proyecto.\n    <br>\n\n    </details>\n    \n1. Descomprima para instalar ngrok.\n   * Windows: haga doble clic en `ngrok.zip`.\n   * Linux o OS X: descomprima ngrok desde el terminal y ejecute el `unzip /path/to/ngrok.zip` comando .\n1. Ejecute ngrok desde la línea de comandos con los argumentos siguientes:\n\n    `ngrok http 3978 --host-header=localhost`  \n    \n1. Copie la dirección URL de ngrok (como se resalta en la imagen) para obtener más referencia como dirección URL base de ngrok en los pasos siguientes. \n\n    ![Dirección URL base de ngrok](~/assets/images/proactive-scenario/ngrok-base-url.png)   \n"
- title: Creación e instalación de una aplicación de Teams
  durationInMinutes: 5
  content: "1. Vaya a Teams > **App Studio** e importe el `AppManifest.zip` archivo disponible en el código de ejemplo descargado (archivo Zip).\n\n    ![Aplicación de importación de App Studio](~/assets/images/proactive-scenario/app-studio-import-app.png) \n\n1. Seleccione **Bots** Set up (Bots  > **Set up).**\n\n    ![Configuración del bot](~/assets/images/proactive-scenario/bot-setup.png)  \n\n1. En la ventana **Configurar un bot** , escriba **Name** (por ejemplo, **Proactive Message Demo**).\n1. Seleccione **Personal** y, a continuación, seleccione **Crear bot** para crear el bot.\n\n    ![Creación de un identificador de bot](~/assets/images/proactive-scenario/create-bot-id.png)   \n\n1. Anexe **/api/messages** a la dirección URL base de ngrok (que copió) y establézcala como **dirección del punto de conexión del bot**. La dirección URL tendría este aspecto: `https://yourngrokdomain.ngrok.io/api/messages`.\n\n    ![Dirección del punto de conexión del bot](~/assets/images/proactive-scenario/bot-endpoint-address.png)\n\n1. Espere unos segundos a que los cambios surtan efecto.     \n\n    > Si tarda más, seleccione **Pestañas** y, a continuación, la sección **Bots** para forzar la actualización.\n    \n1. Seleccione **Generar nueva contraseña** para generar la nueva contraseña de aplicación y copiarla. \n\n    ![Generación de la contraseña de la aplicación](~/assets/images/proactive-scenario/generate-app-password.png)\n\n1. Vaya a Visual Studio y abra el archivo **appsettings.json** .  Pegue la contraseña como valor para `MicrosoftAppPassword`.    \n1. Vaya a **App Studio** y copie el identificador de aplicación. \n\n    ![Generar identificador de aplicación](~/assets/images/proactive-scenario/generate-app-id.png)\n\n1. Vaya a Visual Studio y abra el archivo **appsettings.json** .  Pegue el identificador de aplicación como valor para `MicrosoftAppId`. Tendrá `appsettings.json` los siguientes valores de configuración:    \n\n    ![Valores de appsetting](~/assets/images/proactive-scenario/app-setting-values.png)\n\n1. Presione **F5** o seleccione **IIS Express** para ejecutar el código.\n\n    ![Ejecución de código](~/assets/images/proactive-scenario/run-code.png)\n\n    Aparece el ejemplo de mensaje proactivo correspondiente:  \n\n    ![Mensaje proactivo de ejemplo](~/assets/images/proactive-scenario/proactive-message-sample.png)\n\n1. Vaya a **Prueba y distribuya** > **Instalar** para volver a instalar la misma aplicación.\n\n    ![Instalar aplicación](~/assets/images/proactive-scenario/install-app.png)   \n\n1. Seleccione la `http://localhost:3978/api/notify` dirección URL para obtener un mensaje de hola proactivo en el chat.\n\n    ![Mensaje proactivo enviado](~/assets/images/proactive-scenario/result.png)\n\n1. Vaya a Teams. Recibe un mensaje de saludo proactivo del bot cuando la instalación se realiza correctamente.          \n\n    ![Hola proactivo en el chat](~/assets/images/proactive-scenario/proactive-helo.png)    \n"
- title: Agregar tarjeta adaptable a un mensaje proactivo
  durationInMinutes: 10
  content: "1. En Visual Studio, detenga el proceso de depuración.\n\n    ![Detener depuración](~/assets/images/proactive-scenario/stop-debug.png)\n\n1. Haga clic con el botón derecho en **Dependencias** y seleccione **Administrar paquetes NuGet**.\n\n    ![Agregar paquete de tarjeta adaptable1](~/assets/images/proactive-scenario/add-adaptive-card-package1.png)\n\n1. En **NuGet ProactiveBot**, seleccione **Examinar** y busque **AdaptiveCards**. \n1. Haga clic en **Instalar**. \n\n    ![Agregar paquete de tarjeta adaptable2](~/assets/images/proactive-scenario/add-adaptive-card-package2.png)\n\n1. Abra el archivo **NotifyController.cs** y reemplace el código existente `BotCallback` por el código siguiente para enviar el mensaje de tarjeta adaptable:     \n    \n   ```csharp\n   private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)\n    {\n                AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));\n\n                card.Body.Add(new AdaptiveTextBlock()\n                {\n                    Text = \"Proactive Hello\",\n                    Size = AdaptiveTextSize.ExtraLarge\n                });\n\n                card.Body.Add(new AdaptiveImage()\n                {\n                    Url = new Uri(\"http://adaptivecards.io/content/cats/1.png\")\n                });\n\n                Attachment attachment = new Attachment()\n                {\n                    ContentType = AdaptiveCard.ContentType,\n                    Content = card\n                };\n\n                await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));\n    }\n   ```\n\n1. Mantenga el puntero sobre la línea roja ondulada y seleccione **usar AdaptiveCards** para resolver los errores. \n\n    ![Resolución del error](~/assets/images/proactive-scenario/resolve-error.png)  \n\n1. Presione **F5** para que se ejecute el código. \n1. Vaya a Teams y desinstale la aplicación. \n    \n    ![Desinstalación de la aplicación](~/assets/images/proactive-scenario/uninstall-app.png) \n\n1. Vuelva a instalar la misma aplicación para obtener el `conversationUpdate` evento.   \n\n1. Seleccione la dirección URL [api/notify] `(http://localhost:3978/api/notify)` para obtener un mensaje de hola proactivo en la tarjeta adaptable.     \n"
- title: Desafío completo
  durationInMinutes: 3
  content: >
    ¿Se te ocurrió algo como esto? Así es como aparece el mensaje de hola proactivo en la tarjeta adaptable:


    ![hello proactivo en la tarjeta adaptable](~/assets/images/proactive-scenario/proactive-helo-in-adaptive-card.png)
- content: >-
    Ha completado el escenario.

    * Puede enviar notificaciones diariamente o solicitar comentarios del usuario periódicamente.

    * Controle los límites de limitación para evitar varias notificaciones.
