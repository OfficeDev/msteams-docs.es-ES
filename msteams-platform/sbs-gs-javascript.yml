### YamlMime:Tutorial
title: Crear la primera aplicación con JavaScript
metadata:
  title: Hello World con JavaScript
  description: En este tutorial, aprenderás a crear la aplicación Hello World con JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 10/21/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Introducción a Introducción
  ms.custom: mvc
  ms.localizationpriority: none
  ms.openlocfilehash: e6b437170764e09f9e7e220aeceb2fec26f2f61b
  ms.sourcegitcommit: 22c9e44437720d30c992a4a3626a2a9f745983c1
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 11/03/2021
  ms.locfileid: "60721902"
items:
- durationInMinutes: 1
  content: "Inicia Microsoft Teams desarrollo de aplicaciones con tu primera Teams aplicación. Crearás tres aplicaciones Teams: una aplicación de pestaña, una aplicación bot y una aplicación de extensión de mensajes. \n\nCada una de las aplicaciones tendrá una funcionalidad, que viene con su propia interfaz de usuario y experiencia de usuario:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características.\" border=\"false\":::\n\nEn este tutorial, aprenderás:\n\n- Cómo configurar un nuevo proyecto con Teams Toolkit.\n- Cómo crear tres aplicaciones con una funcionalidad diferente cada una: pestaña, bot y extensión de mensaje.\n- La estructura de la aplicación:\n    - La parte de tabulación con JavaScript mediante React.\n    - El resto de las características con Node.js.\n- Cómo implementar la aplicación\n"
- title: Requisitos previos
  durationInMinutes: 1
  content: "\nEsta es una lista de herramientas que necesitarás para crear e implementar tus aplicaciones.\n\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Entorno de tiempo de ejecución de JavaScript back-end. Use la versión más reciente de LTS de v14.|\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recomendado) o [Google Chrome](https://www.google.com/chrome/) | Un explorador con herramientas de desarrollador. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript, TypeScript o SharePoint Framework (SPFx) de compilación. Use la versión 1.55 o posterior. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) y [CLI de Azure](/cli/azure/install-azure-cli) | Herramientas de Azure para obtener acceso a los datos almacenados o para implementar un back-end basado en la nube para la aplicación Teams en Azure. |\n| &nbsp; | [React Developer Tools para Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) O [React Developer Tools for Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Una extensión DevTools del explorador para la biblioteca de código React JavaScript. |\n| &nbsp; | [Explorador de Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, una herramienta basada en explorador que le permite ejecutar una consulta desde Microsoft Graph datos. |\n| &nbsp; | [Portal para desarrolladores de Teams](https://dev.teams.microsoft.com/) | Portal basado en web para configurar, administrar y distribuir la aplicación Teams aplicación, incluida la organización o la tienda Teams cliente. |\n| &nbsp; | **Visual Studio Code Extensiones** | &nbsp; |\n| &nbsp; | [Azure Functions Core Tools](/azure/azure-functions/functions-run-local) | Componentes back-end localmente durante una ejecución de depuración local. Incluye las aplicaciones auxiliares de autenticación para ejecutar los servicios en Azure. Se instala en el directorio del proyecto (mediante npm `devDependencies` ). |\n| &nbsp; | [SDK de .NET](/dotnet/core/install/) | Enlaces personalizados para la depuración local y las implementaciones de aplicaciones de Azure Functions. Si no ha instalado el SDK de .NET 3.1 (o posterior) globalmente, se puede instalar la versión portátil. |\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams de la aplicación (bots de conversación y extensiones de mensajería) requieren conexiones entrantes. Un túnel conecta el sistema de desarrollo a Teams. No es necesario para las aplicaciones que solo incluyen pestañas. Este paquete se instala en el directorio del proyecto (mediante npm `devDependencies` ). |\n\n\n> [!TIP]\n> Si trabaja con datos de microsoft Graph, debe obtener información y marcar el Explorador de Graph Microsoft. Esta herramienta basada en explorador te permite consultar Microsoft Graph fuera de una aplicación.\n\n\n## <a name=\"prepare-development-environment\"></a>Preparar el entorno de desarrollo\n\nDespués de instalar las herramientas necesarias, configure el entorno de desarrollo.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Instale el Teams Toolkit\n\nEl Teams Toolkit ayuda a simplificar el proceso de desarrollo con herramientas para aprovisionar e implementar recursos en la nube para tu aplicación, publicar en la Teams y mucho más. \n\nPuede usar el kit de herramientas con Visual Studio Code o CLI (interfaz de línea de comandos), denominado `TeamsFx` .\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code y seleccione la vista **Extensiones** (**Ctrl+Mayús+X**  /  **.⇧-X** o **Ver > extensiones**).\n1. En el cuadro de búsqueda, **escriba Teams Toolkit**.\n1. Seleccione **Instalar** junto a la Teams Toolkit.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscode.png\" alt-text=\"La ilustración muestra la Teams Toolkit de extensión.\" border=\"false\":::\n\n    El Teams Toolkit aparece en la barra Visual Studio Code barra lateral después de instalarlo.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"La ilustración muestra el icono Teams Toolkit en Visual Studio Code barra lateral.\" border=\"false\":::\n\nTambién puede encontrar el Teams Toolkit en el Visual Studio Code [Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nPara instalar la CLI de TeamsFx, use el administrador `npm` de paquetes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nSegún la configuración, es posible que deba usar `sudo` para instalar la CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nEsta condición es más común en sistemas Linux y macOS.\n\nAsegúrese de agregar la caché global de npm a la ruta de acceso. Este paso normalmente se realiza como parte del instalador Node.js instalación.  \n\nPuede usar la CLI con el `teamsfx` comando. Compruebe que el comando funciona ejecutando `teamsfx -h` .\n\n> [!CAUTION]\n> Para poder ejecutar TeamsFx en terminales de PowerShell, debe habilitar la directiva de ejecución \"firmada remotamente\" para PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar el inquilino Teams desarrollo\n\nUn **espacio** empresarial es como un espacio o un contenedor para su organización en Teams, donde chatea, comparte archivos y ejecuta reuniones. Este espacio también es donde se puede realizar la instalación local y probar la aplicación. Vamos a comprobar si está listo para desarrollar con el inquilino.\n\n### <a name=\"enable-sideloading-option\"></a>Habilitar la opción de instalación local\n\nDespués de crear la aplicación, debes cargar la aplicación en Teams sin distribuirla. Este proceso se conoce como instalación local. Inicie sesión en su Microsoft 365 para ver esta opción.\n  \n¿Ya tiene un inquilino y tiene acceso de administrador? Vamos a comprobar si realmente lo haces.\n\nCompruebe si puede realizar la instalación local de aplicaciones en Teams:\n\n1. En el Teams, seleccione **Icono de** la Tienda.\n1. Selecciona **Administrar las aplicaciones**.\n1. Busca la opción para **Upload una aplicación personalizada**. Si ves la opción, las aplicaciones de instalación local están habilitadas.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"La ilustración muestra la opción de cargar una aplicación personalizada en Teams.\":::\n\n    > [!NOTE]\n    > Si no tienes la opción de cargar una aplicación personalizada, habla con el administrador Teams usuario.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Crear un espacio empresarial Teams desarrollador (opcional)\n\nSi no tienes una cuenta Teams desarrollador, puedes obtenerla gratuitamente. Unirse al Microsoft 365 programa para desarrolladores.\n\n1. Vaya al programa [Microsoft 365 desarrollador](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecciona **Unirse ahora** y sigue las instrucciones en pantalla.\n1. En la pantalla de bienvenida, seleccione **Configurar la suscripción de E5**.\n1. Configurar la cuenta de administrador. Después de finalizar, aparecerá la siguiente pantalla.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Ejemplo de lo que ve después de registrarse en el programa Microsoft 365 desarrollador.\":::\n\n1. Inicie sesión en Teams la cuenta de administrador que acaba de configurar. Comprueba que tienes la opción **Upload una aplicación** personalizada en Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtener una cuenta gratuita de Azure\n\nSi quieres hospedar la aplicación o acceder a recursos en Azure, debes tener una suscripción a Azure. [Cree una cuenta gratuita antes](https://azure.microsoft.com/free/) de comenzar.\n\nAhora tienes todas las herramientas y configura tu cuenta. A continuación, vamos a configurar el entorno de desarrollo y empezar a compilar.\n"
- title: Crear área de trabajo de proyecto para la aplicación de pestaña
  durationInMinutes: 1
  content: "\nInicia Microsoft Teams desarrollo de aplicaciones creando tu primera aplicación. Esta aplicación usa la funcionalidad Tab.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características. La pestaña está resaltada.\" border=\"false\":::\n\nEn esta página, aprenderás:\n1. [Cómo configurar un nuevo proyecto tab con Teams Toolkit](#create-your-tab-project-workspace)\n1. [Acerca de la estructura de directorios de la aplicación](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Crear el área de trabajo del proyecto de pestaña\n\nSi los requisitos previos están en su lugar, empecemos.\n\n> [!NOTE]\n> La Visual Studio Code de usuario que se muestra es de Mac. Puede variar según el sistema operativo, la Toolkit versión y el entorno.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral Visual Studio Code barra lateral.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\" border=\"false\":::\n\n1. Selecciona **Crear una nueva Teams para** crear una aplicación mediante el Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Inicio del Asistente para crear un nuevo proyecto\" border=\"false\":::\n\n1. Asegúrate de **que la aplicación basada en** la interfaz de usuario tab esté seleccionada como la funcionalidad que quieres crear en la aplicación. Seleccione **Aceptar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tab.png\" alt-text=\"Seleccionar funcionalidad de la aplicación\" border=\"false\":::\n\n1. Seleccione **Azure** como tipo de hospedaje front-end.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project-hosting.png\" alt-text=\"Seleccionar tipo de hospedaje\" border=\"false\":::\n\n    Si quieres hospedar la aplicación en SharePoint, puedes seleccionar SharePoint Framework (SPFx) en esta opción.\n\n1. Seleccione **Aceptar** para continuar. No necesita otros recursos en la nube para este tutorial.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project-cloud-resources.png\" alt-text=\"Recursos en la nube\" border=\"false\":::\n\n1. Seleccione **JavaScript** como lenguaje de programación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\" border=\"false\":::\n\n1. Selecciona una carpeta de área de trabajo para la aplicación. Teams Toolkit crea la estructura de directorios de la aplicación en este área de trabajo para el proyecto.\n\n1. Escriba `helloworld` como el nombre de la aplicación. Asegúrese de usar solo caracteres alfanuméricos. Seleccione **Entrar** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project-name.png\" alt-text=\"Captura de pantalla que muestra dónde escribir el nombre de la aplicación.\" border=\"false\":::\n\n    La Teams se crea en unos segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/app-created.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\" border=\"false\":::\n\n    <details>\n    <summary>Un resumen rápido de la creación de una Teams aplicación.</summary>\n    Vea este breve resumen para crear una Teams aplicación.\n\n    ![Crear una Teams aplicación ](~/assets/videos/javascript-tab-app.gif) </details>\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nUse la CLI de `teamsfx` para crear su primer proyecto: Comience en la carpeta en la que quiera crear la carpeta del proyecto.\n\n``` bash\nteamsfx new\n```\n\nPuedes usar la CLI para crear una nueva Teams aplicación. La CLI le lleva a través de una serie de preguntas. Cada pregunta incluye una instrucción para responderla.\n\nPor ejemplo, use las teclas de flecha para seleccionar una opción. Después de hacer la elección, seleccione **Entrar** para confirmarla.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n1. Seleccione la **funcionalidad Tab.**\n1. Seleccione el hospedaje de front-end de **Azure**.\n1. No seleccione ningún recurso en la nube.\n1. Seleccione **JavaScript** como lenguaje de programación.\n1. Presione **Entrar** para seleccionar la carpeta de área de trabajo predeterminada.\n1. Escribe `helloworld` como el nombre de la aplicación. El nombre de la aplicación solo debe tener caracteres alfanuméricos.\n\n  Después de responder a todas las preguntas, se crea el proyecto.\n\n---\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Dar un paseo por el código fuente\n\nTeams Toolkit proporciona todos los componentes para crear una aplicación. Después de crear el proyecto, puede ver las carpetas y archivos del proyecto en el área Explorador de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/hw-folder-structure.png\" alt-text=\"Project archivos scaffolded para la aplicación con la funcionalidad Tab en Visual Studio Code.\":::\n\nAunque puedes elegir cualquier marco de interfaz de usuario (o no usar ninguno), este código de plantilla de ejemplo proporciona un scaffolding con React componentes.\n\nEntre otros elementos de esta estructura de directorios, el Toolkit mantiene:\n\n- `.fx`: el estado de la aplicación en esta carpeta.\n- `appPackage`: los iconos de la aplicación en la `appPackage` carpeta. Los iconos son `color.png` y `outline.png` .\n- `manifest.source.json`: el manifiesto de la aplicación para su publicación en el Portal de desarrolladores para Teams en `manifest.source.json` .\n- `settings.json`: la configuración de la aplicación, que seleccionó durante la creación del proyecto, en `settings.json` .\n- El código de la funcionalidad Tab de la `Tabs` carpeta. Algunos de los archivos importantes de esta carpeta son:\n\n  - `tabs/src/index.jsx` es el punto de entrada de la aplicación front-end, donde el componente `App` principal se representa con `ReactDOM.render()`.\n  - `tabs/src/components/App.jsx` controla el enrutamiento de direcciones URL en la aplicación. Llama al SDK [Microsoft Teams cliente de JavaScript](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) para establecer la comunicación entre la aplicación y Teams.\n  - `tabs/src/components/Tab.jsx` contiene el código para implementar la interfaz de usuario de la aplicación.\n  - `tabs/src/components/TabConfig.jsx` contiene el código para implementar la interfaz de usuario que configura la aplicación.\n  - Esta carpeta también contiene el código de las pestañas necesarias en tiempo de ejecución. Algunos de ellos son el aviso de privacidad, los términos de uso y las pestañas de configuración.\n\nAl agregar la funcionalidad de nube, Teams Toolkit agrega las carpetas necesarias al proyecto. La `api` carpeta contiene el código en todas las funciones de Azure que escriba.\n"
- title: Crear y ejecutar la primera aplicación de pestaña
  durationInMinutes: 1
  content: "\nDespués de configurar el área de trabajo del proyecto Teams Toolkit, cree el proyecto de pestaña. Tendrás que iniciar sesión en tu cuenta Microsoft 365 usuario.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Inicie sesión en su Microsoft 365 cuenta\n\nUse su Microsoft 365 para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que ha configurado durante el registro es Microsoft 365 cuenta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en M365**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/account-signin.png\" alt-text=\"Captura de pantalla que muestra dónde iniciar sesión en Microsoft 365 y Azure.\" border=\"false\":::\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n\n1. Inicie sesión en su cuenta Microsoft 365 con sus credenciales.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n1. Vuelva a Teams Toolkit dentro de Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra el nombre Microsoft 365 cuenta.\n\n    Ahora ya estás listo para crear la aplicación y ejecutarla localmente.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Ahora que el entorno de desarrollo está configurado, puedes crear, compilar e implementar la primera aplicación Teams desarrollo.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Compilar y ejecutar la aplicación de forma local en Visual Studio Code\n\nPara crear y ejecutar la aplicación localmente:\n\n1. En Visual Studio Code, seleccione **F5** para ejecutar la aplicación en modo de depuración.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Vea lo que ocurre al ejecutar la aplicación localmente en el depurador.</summary>\n\n    En caso de que te lo preguntes, cuando presiones la tecla **F5,** Teams Toolkit:\n\n    - Registra la aplicación con Azure Active Directory. Esta aplicación tiene permisos para la ubicación desde la que se carga la aplicación y los recursos back-end.\n    - *Carga localmente* la aplicación en Teams.\n    - Inicia el back-end de la aplicación que se ejecuta localmente con [Azure Function Core Tools](/azure/azure-functions/functions-run-local?#start).\n    - Inicia el front-end de la aplicación hospedado localmente.\n    - Inicia Microsoft Teams en un explorador web con un comando para indicar a Teams que cargue de forma lateral la aplicación desde `https://localhost:3000/tab` . Esta dirección URL está registrada en el manifiesto de la aplicación.\n    - Se genera un manifiesto de aplicación y existe en el Portal de desarrolladores para Teams. Teams usa el manifiesto de la aplicación para decir a los clientes conectados desde dónde cargar la aplicación.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5-build-and-run.png\" alt-text=\"Captura de pantalla que muestra cuándo se presiona la tecla F5.\":::\n\n    > Cuando ejecutas la aplicación por primera vez, se descargan todas las dependencias y se compila la aplicación.  Una ventana del explorador se abre cuando se completa la compilación. Este proceso puede tardar entre 3 y 5 minutos en completarse.\n\n    El Toolkit solicita que instale un certificado local, si es necesario. Este certificado permite a Teams cargar la aplicación desde `https://localhost`.\n\n1. Seleccione **Sí** si aparece el siguiente cuadro de diálogo:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ssl-prompt.png\" alt-text=\"Captura de pantalla que muestra el mensaje para instalar un certificado SSL para Teams cargar la aplicación desde localhost.\":::\n\n    O seleccione **Continuar**, según el sistema operativo:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Captura de pantalla que muestra el mensaje para instalar un certificado SSL para permitir Teams cargar la aplicación desde localhost en Mac.\":::\n\n    Teams cliente web se abre en una ventana del explorador.\n\n1. Inicie sesión con su Microsoft 365, si se le solicita.\n\n1. Selecciona **Agregar** cuando se te pida que la aplicación se Teams en el equipo local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/launch-web-browser-add.png\" alt-text=\"Agregar la aplicación a Teams\":::\n\n1. Selecciona la versión de la aplicación web, si se te pide que cambies a Teams escritorio. Ejecute la aplicación en el Teams web. Puede ver el código HTML, CSS y JavaScript en un entorno de desarrollo web estándar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/launch-web-browser-and-pick-webapp.png\" alt-text=\"Captura de pantalla que muestra cómo elegir la versión web de Teams al iniciarlo\":::\n\n1. Enhorabuena, la primera aplicación se está ejecutando en Teams!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/launch-web-browser-congratulations.png\" alt-text=\"Captura de pantalla de la aplicación completada\":::\n\n    Puede realizar actividades de depuración normales, como establecer puntos de interrupción, como si fuera cualquier otra aplicación web. La aplicación es compatible con \"hot reloading\". Si cambia cualquier archivo dentro del proyecto, la página se volverá a cargar.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Obtén información sobre cómo solucionar problemas si la aplicación no se ejecuta localmente.</summary>\n\n  Para ejecutar correctamente la aplicación en Teams, asegúrate de que has habilitado la instalación local en tu cuenta Teams usuario. Puede obtener más información sobre la instalación local en la sección Requisitos previos.\n\n  </details>\n\n  Sabes cómo usar Toolkit para configurar una aplicación de pestaña y ejecutarla localmente. A continuación, vamos a aprender a crear un bot de chat conversacional con Toolkit!\n"
- title: Crear área de trabajo de proyecto para la aplicación bot
  durationInMinutes: 1
  content: "\nHas creado la aplicación de pestaña. Ahora vamos a crear la primera aplicación bot.\n\nLa funcionalidad bot de una aplicación Teams crea un bot de chat o un bot conversacional. Se usa para ejecutar tareas sencillas y automatizadas, como proporcionar servicio al cliente. Un bot habla con un servicio web y le ayuda a usar sus ofertas. Puede obtener la previsión del tiempo, realizar reservas o cualquier otro servicio ofrecido con un bot de conversación.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-bot/your-helloworld-app-bot.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características. Bot está resaltado.\" border=\"false\":::\n\nComo ya has preparado para crear estas aplicaciones, puedes configurar un nuevo proyecto Teams para crear la aplicación de bot.\n\nEn este tutorial, aprenderás:\n\n1. [Cómo configurar un nuevo proyecto bot con Teams Toolkit.](#create-your-bot-project-workspace)\n1. [Acerca de la estructura de directorios del proyecto de la aplicación.](#take-a-tour-of-the-source-code)\n\n> [!IMPORTANT]\n> Actualmente, los bots están disponibles en Government Community Cloud (GCC) pero no están disponibles en GCC-High departamento de defensa (DOD).\n\n## <a name=\"create-your-bot-project-workspace\"></a>Crear el área de trabajo del proyecto de bot\n\nSi los requisitos previos están en su lugar, empecemos.\n\n> [!NOTE]\n> La Visual Studio Code de usuario que se muestra es de Mac. Puede variar según el sistema operativo, la Toolkit versión y el entorno.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral Visual Studio Code barra lateral.\n\n1. Seleccione **Crear una nueva aplicación de Teams**. La interfaz de usuario puede tener un aspecto diferente, según el sistema operativo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\" border=\"false\":::\n\n1. Selecciona **Crear una nueva Teams para** crear una aplicación mediante el Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Inicio del Asistente para crear un nuevo proyecto\" border=\"false\":::\n\n1. Seleccione **Bot**, deseleccione **Tab** y seleccione **Aceptar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-capabilities.png\" alt-text=\"Captura de pantalla que muestra cómo agregar funcionalidades a la nueva aplicación.\" border=\"false\":::\n\n1. Seleccione **JavaScript en** la sección **Lenguaje de** programación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\" border=\"false\":::\n\n1. Seleccione una carpeta de área de trabajo. Teams Toolkit crea una carpeta en la carpeta del área de trabajo para el proyecto de la aplicación.\n\n1. Escriba un nombre adecuado para la aplicación, como `hellobot`. Asegúrate de que el nombre de la aplicación sea alfanumérico. Seleccione **Entrar** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/enter-name.png\" alt-text=\"Captura de pantalla que muestra dónde escribir el nombre de la aplicación.\" border=\"false\":::\n\n    La Teams con una funcionalidad Bot se crea en unos segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-created-bot.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\" border=\"false\":::\n\n\n<details>\n<summary>Un resumen rápido de la creación de una Teams aplicación.</summary>\nVea este breve resumen para crear una Teams aplicación.\n\n![Crear una aplicación Teams web](~/assets/videos/javascript-bot-app.gif)\n</details>\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nUse la CLI de `teamsfx` para crear su primer proyecto:  Comience en la carpeta en la que quiera crear la carpeta del proyecto.\n\n``` bash\nteamsfx new\n```\n\nPuedes usar la CLI para crear una nueva Teams aplicación. La CLI le lleva a través de una serie de preguntas. Cada pregunta incluye una instrucción para responderla.\n\nPor ejemplo, use las teclas de flecha para seleccionar una opción. Después de hacer la elección, seleccione **Entrar** para confirmarla.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n1. Seleccione **Bot** y anule la selección de **Tab**.\n1. Seleccione **JavaScript** como lenguaje de programación.\n1. Seleccione **Entrar** para seleccionar la carpeta de área de trabajo predeterminada.\n1. Escriba un nombre adecuado para la aplicación, como `HelloBot`.  El nombre de la aplicación solo puede contener caracteres alfanuméricos.\n\nDespués de responder a todas las preguntas, se crea el proyecto.\n\n---\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Dar un paseo por el código fuente\n\nUna vez terminado el scaffolding, vea los directorios y archivos del proyecto en el área Explorador de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/bot-code-tree.png\" alt-text=\"Project archivos scaffolded para bot en Visual Studio Code.\" border=\"false\":::\n\nEntre otros elementos de esta estructura de directorios, el Toolkit mantiene:\n- `bot`: el código del bot se almacena en el `bot` directorio.\n- Es `bot/teamsBot.js` el punto de entrada principal del bot.\n\n> [!Tip]\n> Familiarícese con los bots fuera de Teams antes de integrar su primer bot en Teams.\n"
- title: Crear y ejecutar la primera aplicación bot
  durationInMinutes: 1
  content: "\nDespués de configurar el área de trabajo del proyecto Teams Toolkit, cree el proyecto de bot. Asegúrese de que ha iniciado sesión en su Microsoft 365 cuenta.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Inicie sesión en su Microsoft 365 cuenta\n\nUse esta cuenta para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que ha configurado durante el registro es Microsoft 365 cuenta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en M365**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/account-signin.png\" alt-text=\"Captura de pantalla que muestra dónde iniciar sesión en Microsoft 365 y Azure.\" border=\"false\":::\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n\n1. Inicie sesión en su cuenta Microsoft 365 con sus credenciales.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n1. Vuelva a Teams Toolkit dentro de Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra el nombre Microsoft 365 cuenta.\n\n    Ahora ya estás listo para crear la aplicación y ejecutarla localmente.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Ahora que el entorno de desarrollo está configurado, puedes crear, compilar e implementar la primera aplicación Teams desarrollo.\n\n---\n\n## <a name=\"build-and-run-your-first-bot-app-locally\"></a>Compilar y ejecutar la primera aplicación de bot localmente\n\nPara crear y ejecutar la aplicación en el entorno local:\n\n1. Selecciona **F5** en Visual Studio Code para ejecutar la aplicación en modo de depuración.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Vea lo que ocurre al ejecutar la aplicación localmente en el depurador.</summary>\n\n    En caso de que se pregunte, al presionar la tecla **F5,** el Teams Toolkit:\n\n    - Registra la aplicación con Azure Active Directory. Esta aplicación tiene permisos para la ubicación desde la que se carga la aplicación y los recursos back-end.\n    - *Carga localmente* la aplicación en Teams.\n    - Inicia el back-end de la aplicación que se ejecuta localmente con [Azure Function Core Tools](/azure/azure-functions/functions-run-local?#start).\n    - Inicia el front-end de la aplicación hospedado localmente.\n    - Inicia Microsoft Teams en un explorador web con un comando para indicar a Teams que cargue de forma lateral la aplicación desde `https://localhost:3000/tab` . Esta dirección URL está registrada en el manifiesto de la aplicación.\n    - Se genera un manifiesto de aplicación y existe en el Portal de desarrolladores para Teams. Teams usa el manifiesto de la aplicación para decir a los clientes conectados desde dónde cargar la aplicación.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/f5-build-and-run.png\" alt-text=\"Captura de pantalla que muestra cuándo se presiona la tecla F5.\":::\n\n    > Cuando ejecutas la aplicación por primera vez, se descargan todas las dependencias y se compila la aplicación. Cuando se complete la compilación, se abrirá automáticamente una ventana del explorador. Este proceso puede tardar entre 3 y 5 minutos en completarse.\n\n    El explorador web comienza a ejecutar la aplicación.\n\n1. Inicie sesión con su Microsoft 365, si se le solicita.\n\n    > Es posible que se le pida que abra Teams escritorio, seleccione **Cancelar** para permanecer en el explorador.\n\n1. Selecciona **Agregar** cuando se te pida que la aplicación se Teams en el equipo local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/install-bot.png\" alt-text=\"La captura de pantalla que muestra el bot se está agregando Teams cliente.\":::\n\n    Ahora el bot se ejecuta correctamente en Teams! Después de cargar la aplicación, se abre una sesión de chat con el bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/run-bot.png\" alt-text=\"Captura de pantalla que muestra que el bot se ejecuta Teams cliente.\":::\n\n    Puede escribir para mostrar una tarjeta de introducción y escribir para ir a la documentación de comandos de bot y `welcome` `learn` tarjeta adaptable.\n\n    Puede realizar actividades de depuración normales, como establecer puntos de interrupción, como con cualquier otra aplicación web. Abra el archivo `bot/teamsBot.js` y busque el método `onMessage()`. Establecer un punto de interrupción en cualquier caso. Escriba alguna cosa.\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Obtén información sobre cómo solucionar problemas si la aplicación no se ejecuta localmente.</summary>\n\n  Para ejecutar correctamente la aplicación en Teams, asegúrate de que has habilitado la instalación local en tu cuenta Teams usuario. Puede obtener más información sobre la instalación local en la sección Requisitos previos.\n\n  > [!IMPORTANT]\n  > Actualmente, las aplicaciones de instalación local están disponibles en Government Community Cloud (GCC), GCC-High y DOD.\n\n  > [!TIP]\n  > Compruebe si hay problemas antes de realizar la instalación local de la aplicación mediante la herramienta [de validación de aplicaciones](https://dev.teams.microsoft.com/appvalidation.html). Esta herramienta se incluye en el kit de herramientas. Se corrigen los errores para la instalación local de la aplicación.\n  </details> \n"
- title: Crear área de trabajo de proyecto para la aplicación de extensión de mensajes
  durationInMinutes: 1
  content: "\nHas creado la aplicación bot. Ahora, vamos a crear la primera aplicación de extensión de mensaje.\n\nLa funcionalidad extensión de mensajes le permite interactuar con un servicio web. Use el área de redacción, el cuadro de comando o un mensaje en Teams cliente para buscar e iniciar acciones en un sistema externo.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características. La extensión de mensaje está resaltada.\" border=\"false\":::\n\nHay dos tipos de extensiones de mensajería **Teams**:\n\n- [Comandos de búsqueda:](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md)puede buscar en sistemas externos. A continuación, puede insertar sus resultados en un mensaje en forma de tarjeta.\n- [Comandos de acción:](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md)puede presentar a los usuarios un elemento emergente modal para recopilar o mostrar información. A continuación, puede procesar su interacción y enviar información de vuelta a Teams.\n\nVamos a crear una aplicación de extensión de mensaje con un *comando de búsqueda*. Úselo para buscar datos externos e insertar los resultados en un mensaje dentro de Teams cliente.\n\nComo ya has preparado para crear estas aplicaciones, puedes configurar un nuevo proyecto Teams para crear la aplicación de extensión de mensajes.\n\n> [!NOTE]\n> Las extensiones de mensajería dependen de los bots para proporcionar un diálogo entre el usuario y el código.\n\n\nEn este tutorial, aprenderás:\n\n1. [Cómo configurar un nuevo proyecto de extensión de mensaje con Teams Toolkit.](#create-your-message-extension-project-workspace)\n1. [Acerca de la estructura de directorios del proyecto de la aplicación.](#take-a-tour-of-the-source-code)\n\n## <a name=\"create-your-message-extension-project-workspace\"></a>Crear el área de trabajo del proyecto de extensión de mensaje\n\nSi los requisitos previos están en su lugar, empecemos.\n\n> [!NOTE]\n> La Visual Studio Code de usuario que se muestra es de Mac. Puede variar según el sistema operativo, la Toolkit versión y el entorno.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral Visual Studio Code barra lateral.\n\n1. Seleccione **Crear nuevo Project** en el lado izquierdo de la Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\" border=\"false\":::\n\n1. Selecciona **Crear nuevo Project** para crear una aplicación con el Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Inicio del Asistente para crear un nuevo proyecto\" border=\"false\":::\n\n1. Seleccione **Extensión de mensaje,** **anule** la selección de pestaña y seleccione **Aceptar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-msgext.png\" alt-text=\"Captura de pantalla que muestra cómo agregar funcionalidades a la nueva aplicación.\" border=\"false\":::\n\n1. Seleccione **JavaScript** como lenguaje de programación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\" border=\"false\":::\n\n1. Seleccione una carpeta de área de trabajo. Se crea una carpeta en la carpeta del área de trabajo para el proyecto.\n\n1. Escribe un nombre adecuado para la aplicación. Asegúrate de que el nombre de la aplicación sea alfanumérico. Seleccione **Entrar** para continuar.\n\n    Teams Toolkit crea la aplicación en unos segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\" border=\"false\":::\n\n  <details>\n  <summary>Un resumen rápido de la creación de una Teams aplicación.</summary>\n  Vea este breve resumen para crear una Teams aplicación.\n\n  ![Crear una aplicación Teams web](~/assets/videos/javascript-msg-ext-app.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nUse la CLI de `teamsfx` para crear su primer proyecto:  Comience en la carpeta en la que quiera crear la carpeta del proyecto.\n\n``` bash\nteamsfx new\n```\n\nPuedes usar la CLI para crear una nueva Teams aplicación. La CLI le lleva a través de una serie de preguntas. Cada pregunta incluye una instrucción para responderla.\n\nPor ejemplo, use las teclas de flecha para seleccionar una opción. Después de hacer la elección, seleccione **Entrar** para confirmarla.\n\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n1. Seleccione la **extensión de mensaje y** anule la selección de **tab**.\n1. Seleccione **JavaScript** como lenguaje de programación.\n1. Seleccione **Entrar** para seleccionar la carpeta de área de trabajo predeterminada.\n1. Escriba un nombre adecuado para la aplicación, como `HelloMsgExtn`.  El nombre de la aplicación solo puede contener caracteres alfanuméricos.\n\n  Una vez contestadas todas las preguntas, se crea el proyecto.\n\n---\n\n## <a name=\"take-a-tour-of-the-source-code\"></a>Dar un paseo por el código fuente\n\nUna extensión de mensaje usa Bot Framework. Se usa para interactuar con el servicio a través de una conversación. Una vez terminado el scaffolding, vea los directorios y archivos del proyecto en el área Explorador de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/code-tree.png\" alt-text=\"Diseño de archivo de un proyecto de bot\" border=\"false\":::\n\n- `bot`: el código del bot se almacena en el `bot` directorio.\n- `bot/messageExtensionBot.js` es el punto de entrada principal de la extensión de mensajería.\n\n> [!Tip]\n> Familiarícese con los bots y la extensión de mensajes fuera de Teams antes de integrar el bot en Teams.\n"
- title: Compilar y ejecutar la primera aplicación de extensión de mensaje
  durationInMinutes: 1
  content: "\nDespués de configurar el área de trabajo del proyecto Teams Toolkit, cree el proyecto de pestaña. Tendrás que iniciar sesión en tu cuenta Microsoft 365 usuario.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Inicie sesión en su Microsoft 365 cuenta\n\nUse esta cuenta para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que ha configurado durante el registro es Microsoft 365 cuenta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en M365**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/account-signin.png\" alt-text=\"Captura de pantalla que muestra dónde iniciar sesión en Microsoft 365 y Azure.\" border=\"false\":::\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n\n1. Inicie sesión en su Microsoft 365 cuenta.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n1. Vuelva a Teams Toolkit dentro de Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra el nombre Microsoft 365 cuenta.\n\n    Ahora ya estás listo para crear la aplicación y ejecutarla localmente.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Ahora que el entorno de desarrollo está configurado, puedes crear, compilar e implementar la primera aplicación Teams desarrollo.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Compilar y ejecutar la aplicación de forma local en Visual Studio Code\n\nPara crear y ejecutar la aplicación localmente:\n\n1. Seleccione **F5** en Visual Studio Code para ejecutar la aplicación en modo de depuración.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Vea lo que ocurre al ejecutar la aplicación localmente en el depurador.</summary>\n\n    Al seleccionar **F5**, el Teams Toolkit:\n\n    1. Registra la aplicación con Azure Active Directory.\n    1. Registra la aplicación para la \"carga lateral\" en Microsoft Teams.\n    1. Inicia el back-end de la aplicación que se ejecuta localmente [con Azure Function Core Tools](/azure/azure-functions/functions-run-local?#start).\n    1. Inicia el túnel ngrok para Teams comunicarse con la aplicación.\n    1. Inicia Microsoft Teams con un comando para indicar a Teams que desacargue la aplicación.\n\n    </details>\n\n    > Cuando ejecutas la aplicación por primera vez, se descargan todas las dependencias y se compila la aplicación. Una ventana del explorador se abre cuando se completa la compilación. Este proceso puede tardar entre 3 o 5 minutos.\n\n      Teams se abre en un explorador web.\n    1. Seleccione **Cancelar** para permanecer en el explorador, si se le pide que abra Microsoft Teams.\n    1. Inicie sesión con su Microsoft 365, si se le solicita.\n    1. Selecciona **Agregar** para agregar la aplicación a tu cuenta.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/launch-web-browser-add.png\" alt-text=\"Captura de pantalla que muestra la confirmación de que se ha agregado la aplicación\" border=\"false\":::\n\n        La aplicación se agrega a Teams y se carga.\n\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Obtén información sobre cómo solucionar problemas si la aplicación no se ejecuta localmente.</summary>\n\n    Para ejecutar la aplicación en Teams, debes tener una cuenta Microsoft 365 desarrollo que permita la instalación local de la aplicación. Puede obtener más información sobre la instalación local en la sección Requisitos previos.\n\n### <a name=\"try-your-message-extension\"></a>Probar la extensión de mensaje \n\nSiga estos pasos en Teams cliente para habilitar la característica de extensión de mensajes que acaba de agregar:\n\n1. Inicie la extensión de mensaje desde tres puntos en el área de redacción.\n1. Vaya a **Chat** o a un **canal Teams** y habilite el área de redacción de mensajes.\n1. Inicie la extensión de mensaje desde tres puntos en la parte inferior del área de redacción.\n1. Selecciona la aplicación de extensión de mensaje que has instalado.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/msgext-app-sample-open.png\" alt-text=\"Captura de pantalla que muestra cómo abrir la aplicación de extensión de mensajería de ejemplo\" border=\"false\":::\n\n    Esta aplicación de ejemplo te permite buscar paquetes npm de código abierto desde el Registro de software.\n\n1. Vamos a escribir una cadena de búsqueda en el cuadro de búsqueda, como \"cli\". Se obtiene una lista de los elementos que coinciden:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/msgext-app-sample-search.png\" alt-text=\"Captura de pantalla que muestra cómo usar la aplicación de ejemplo\" border=\"false\":::\n\n1. Seleccione uno de los resultados de la búsqueda. Se mostrará en el área de redacción para que pueda enviar el resultado al canal.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/msgext-app-sample-result.png\" alt-text=\"Captura de pantalla que muestra el resultado de la búsqueda\" border=\"false\":::\n\n    Ahora, has aprendido a crear y ejecutar una extensión de mensaje básica.\n"
- title: Implementar la primera Teams aplicación
  durationInMinutes: 1
  content: "\nHas aprendido a crear, crear y ejecutar una aplicación Teams con las funcionalidades Tab, Bot y Message Extension. El paso final es implementar la aplicación en Azure.\n\nVamos a implementar la primera aplicación con la funcionalidad Tab en Azure con Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Iniciar sesión en su cuenta de Azure\n\nUse esta cuenta para obtener acceso a Azure Portal y aprovisionar nuevos recursos en la nube para admitir la aplicación.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abrir Visual Studio Code.\n1. Abre la carpeta del proyecto en la que creaste la aplicación de pestaña.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en Azure**.\n\n    > [!TIP]\n    > Si tiene instalada la extensión cuenta de Azure y usa la misma cuenta, puede omitir este paso. Usa la misma cuenta que usas en otras extensiones.\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n1. Inicie sesión en su cuenta de Azure con sus credenciales.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra las dos cuentas por separado. También enumera el número de suscripciones de Azure que se pueden usar disponibles. Asegúrese de que tiene al menos una suscripción de Azure utilizable disponible. Si no es así, cerrar sesión y usar una cuenta diferente.\n\n    Ahora ya estás listo para implementar la aplicación en Azure.\n\n    Enhorabuena, has creado tres tipos de Teams aplicaciones. \n    Ahora vamos a continuar y aprendamos a implementar una de las aplicaciones en Azure mediante el Teams Toolkit.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Enhorabuena, has creado tres tipos de Teams aplicaciones. \n    Ahora vamos a continuar y aprendamos a implementar una de las aplicaciones en Azure mediante el Teams Toolkit.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Vea lo que ocurre al implementar la aplicación en Azure</summary>\n\n  Antes de la implementación, la aplicación se ejecuta de forma local:\n\n  * El back-end se ejecuta con **Azure Functions Core Tools**.\n  * El punto de conexión HTTP de la aplicación, donde Microsoft Teams carga la aplicación, se ejecuta de forma local.\n\n  La implementación es un proceso de dos pasos. Aprovisione los recursos en una suscripción de Azure activa y, a continuación, implemente o cargue el código back-end y front-end de la aplicación en Azure.\n\n  * El back-end, si está configurado, usa varios servicios de Azure, incluidos Azure App Service y Azure Storage.\n  * La aplicación front-end se implementará en una cuenta de Azure Storage configurada para hospedaje web estático.\n\n  </details>"
