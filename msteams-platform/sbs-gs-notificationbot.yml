### YamlMime:Tutorial
title: Crear un bot de notificaciones con JavaScript
metadata:
  title: Crear un bot de notificaciones con JavaScript
  description: En este tutorial, aprenderá a enviar notificaciones con JavaScript mediante la creación de un nuevo bot de notificación con Teams Toolkit.
  audience: Developer
  level: Beginner
  ms.date: 05/04/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: toolkit/add-capability.md
  nextTutorialTitle: Volver a agregar funcionalidad
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: 3359a27cda51b91723650518386756207759f7a0
  ms.sourcegitcommit: c1032ea4f48c4bbf5446798ff7d46d7e6e9f55d2
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 09/27/2022
  ms.locfileid: "68027357"
items:
- durationInMinutes: 1
  content: >
    El bot de notificación envía mensajes de forma proactiva en el canal de Teams, el chat grupal o el chat personal. Puede desencadenar el bot de notificación con una solicitud HTTP, como tarjetas o textos.


    En este tutorial, aprenderá lo siguiente:


    - Cómo crear un nuevo bot de notificación con teams Toolkit.

    - Acerca de la estructura de directorios de la aplicación.

    - Cómo enviar varias notificaciones.


    Esta guía paso a paso le ayuda a crear un bot de notificación con Teams Toolkit. Verá la siguiente salida:

      :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Salida del desencadenador"border="true":::
- title: Requisitos previos
  durationInMinutes: 1
  content: "\nEsta es una lista de las herramientas que necesita para compilar e implementar las aplicaciones.\n\n| &nbsp; | Instalar | Para usar |\n| --- | --- | --- |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | Entornos de compilación de JavaScript o TypeScript. Use la versión más reciente. |\n| &nbsp; | [Kit de herramientas de Teams](#install-the-teams-toolkit) | Extensión de Microsoft Visual Studio Code que crea un scaffolding de proyecto para la aplicación. Use la versión 4.0.0. |\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Entorno de tiempo de ejecución de JavaScript de back-end. Use la versión 14 o 16.|\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams para colaborar con todos los usuarios con los que trabaja a través de aplicaciones para chat, reunión, llamada y todo en un solo lugar.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) o [Google Chrome](https://www.google.com/chrome/) | Un explorador con herramientas de desarrollo. |\n| &nbsp; | [Microsoft 365](https://developer.microsoft.com/en-us/microsoft-365/dev-program) | Acceso a la cuenta de Teams con los permisos adecuados para instalar una aplicación. |\n\n> [!NOTE]\n> La guía se prueba en las versiones 4.0.0 y 14 y 16 del kit de herramientas de Teams y Nodejs. Los pasos de esta guía pueden funcionar con otras versiones, pero no se han probado.\n\n## <a name=\"prepare-development-environment\"></a>Preparación del entorno de desarrollo\n\nDespués de instalar las herramientas necesarias, configure el entorno de desarrollo.\n\n### <a name=\"install-the-teams-toolkit\"></a>Instalación del kit de herramientas de Teams\n\nEl kit de herramientas de Teams ayuda a simplificar el proceso de desarrollo con herramientas para aprovisionar e implementar recursos en la nube para la aplicación, publicar en la tienda de Teams y mucho más. \n \nPuede usar el kit de herramientas con Visual Studio Code o la CLI (interfaz de línea de comandos), denominada `TeamsFx`.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code y seleccione **Extensiones** (**Ctrl+Mayús+X** / **⌘⇧-X** o **Ver extensiones de >**).\n1. En el cuadro de búsqueda, escriba **Kit de herramientas de Teams**.\n1. Seleccione **Instalar** junto al kit de herramientas de Teams.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/teams-toolkit.png\" alt-text=\"Ilustración que muestra la instalación de la extensión teams Toolkit.\":::\n\n El icono del kit de herramientas de Teams aparece en la barra lateral Visual Studio Code después de instalarlo.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"Ilustración que muestra el icono del kit de herramientas de Teams en Visual Studio Code barra lateral.\":::\n\nTambién puede encontrar el kit de herramientas de Teams en [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nPara instalar la CLI de TeamsFx, use el administrador de `npm` paquetes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nEn función de la configuración, es posible que tenga que usar `sudo` para instalar la CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nEs más común en sistemas Linux y macOS.\n\nAsegúrese de agregar la memoria caché global npm a la ruta de acceso. Este paso se realiza normalmente como parte del instalador de Node.js.  \n\nPuede usar la CLI con el `teamsfx` comando . Para probar que el comando funciona, ejecute `teamsfx -h`.\n\n> [!NOTE]\n> Antes de ejecutar TeamsFx en terminales de PowerShell, asegúrese de habilitar la directiva de ejecución **firmada remota** para PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configuración del inquilino de desarrollo de Teams\n\nUn **inquilino** es como un espacio o un contenedor donde chatea, comparte archivos y ejecuta reuniones para su organización en Teams. También puede transferir localmente y probar la aplicación.\n\n### <a name=\"check-for-sideloading-option\"></a>Comprobación de la opción de instalación local\n\nDespués de crear la aplicación, debe cargarla en Teams sin distribuirla. Esto se conoce como transferencia local. Inicie sesión en su cuenta de Microsoft 365 para ver esta opción.\n\n > [!NOTE]\n > La instalación local es necesaria para obtener una vista previa y probar aplicaciones en el entorno local de Teams. Habilite la instalación local para obtener una vista previa y probar la aplicación en Teams localmente.\n\n¿Ya tiene un inquilino y tiene acceso de administrador? ¡Vamos a comprobar si realmente lo haces!\n\nPara comprobar la transferencia local de aplicaciones en Teams:\n\n 1. En el cliente de Teams, seleccione **Tienda**.\n 1. Seleccione **Administrar las aplicaciones**.\n 1. Seleccione **Publicar una aplicación**.\n 1. Busque la opción **Cargar una aplicación personalizada**. Si ve la opción, la instalación de prueba de aplicaciones está habilitada.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"Ilustración que muestra la opción para cargar una aplicación personalizada en Teams.\":::\n\n     > [!NOTE]\n     > Póngase en contacto con el administrador de Teams si no ve la opción de cargar una aplicación personalizada.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Creación de un inquilino para desarrolladores de Teams gratuito (opcional)\n\nSi no tiene una cuenta de desarrollador de Teams, puede obtenerla de forma gratuita. ¡Únete al programa para desarrolladores de Microsoft 365!\n\n1. Vaya al [programa para desarrolladores de Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Seleccione **Unirse ahora** y siga las instrucciones en pantalla.\n1. Seleccione **Configurar suscripción E5** en la pantalla de bienvenida.\n1. Configurar la cuenta de administrador. Una vez finalizada, se muestra la pantalla siguiente.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/microsoft-365.png\" alt-text=\"Microsoft\":::\n\n1. Inicie sesión en Teams con la nueva cuenta de administrador. Ahora debe tener la opción **Cargar una aplicación personalizada** .\n"
- title: Bot de notificación de compilación
  durationInMinutes: 1
  content: "**Para compilar un bot de notificación mediante Visual Studio Code**\n\n 1. Abrir Visual Studio Code.\n \n 1. Seleccione icono del Kit de herramientas de Teams :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral de Visual Studio Code.\n\n 1. Seleccione **Crear una nueva aplicación de Teams**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-teams-app.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\":::\n\n 1. Seleccione **la opción Crear una nueva aplicación de Teams** para crear una aplicación mediante teams toolkit.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/create-new-app.png\" alt-text=\"El asistente comienza para crear un nuevo proyecto\":::\n\n 1. Asegúrese de que **Notification Bot** está seleccionado como la funcionalidad que desea compilar en la aplicación. \n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-notification-bot.png\" alt-text=\"Seleccionar funcionalidad de la aplicación\":::\n\n 1. Seleccione **Restify Server del desencadenador HTTP** como desencadenador. \n 1. Seleccione **Aceptar**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-trigger.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\":::  \n\n 1. Seleccione **JavaScript** como lenguaje de programación.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-command-bot/select-script.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\":::    \n\n 1. Seleccione **Carpeta predeterminada** para almacenar la carpeta raíz del proyecto en la ubicación predeterminada.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-default-location.png\" alt-text=\"Selección de la ubicación predeterminada\":::\n \n    También puede cambiar la ubicación predeterminada mediante los pasos siguientes:\n\n     1. Seleccione **Examinar**.\n\n         :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-browse.png\" alt-text=\"Selección de la ubicación de exploración\":::\n         \n     1. Seleccione la ubicación del área de trabajo del proyecto.\n\n     1. Seleccione **seleccionar carpeta**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/select-folder.png\" alt-text=\"Seleccionar carpeta\":::\n \n 1. Escriba un nombre adecuado para la aplicación, como mynotificationbot como nombre de la aplicación. \n 1. Seleccione **Introducir**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/type-notfication-name.png\" alt-text=\"Captura de pantalla que muestra dónde escribir el nombre de la aplicación.\":::\n\n    > [!NOTE]\n    > Asegúrese de usar solo caracteres alfanuméricos en el nombre de la aplicación.\n\n 1. De forma predeterminada, el proyecto se abre en una nueva ventana en 10 segundos. Si desea abrir en la ventana actual, seleccione **Abrir en la ventana actual**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/new-window-notification.png\" alt-text=\"Nueva notificación de ventana\":::\n\n     La aplicación del bot de notificación se crea en unos segundos.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-bot.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\":::\n\n 1. Seleccione **el icono Ejecutar y depurar** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: en la barra lateral Visual Studio Code.\n\n 1. Seleccione **Debug(Edge)** o **Debug(Chrome) en** la lista desplegable.\n\n 1. Seleccione **el botón Iniciar depuración** .\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Depuración de aplicaciones\"border=\"true\"::: \n\n 1. Seleccione **Agregar**.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/my-notification-output.png\" alt-text=\"Mi salida de notificación1\"border=\"true\":::\n\n 1. Abra **Windows PowerShell**.\n\n 1. Ejecute el comando `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Desencadenador de PowerShell\"border=\"true\":::   \n\n     Obtendrá la siguiente salida en Teams:\n\n       :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png\" alt-text=\"Salida del desencadenador\"border=\"true\":::\n\n ## <a name=\"take-tour-of-source-code\"></a>Realizar un recorrido por el código fuente\n\n Teams Toolkit proporciona componentes para crear una aplicación. Después de crear el proyecto, puede ver las carpetas y los archivos del proyecto en el área **Explorador** de Visual Studio Code.\n\n :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/folder-structure1.png\" alt-text=\"pestaña estructura\":::\n\n Si decide usar el marco de trabajo de la interfaz de usuario, el siguiente código de plantilla de ejemplo proporciona un scaffolding con componentes React.\n\n La nueva carpeta del proyecto contiene el siguiente contenido:\n\n | Nombre de la carpeta | Contenido |\n | --- | --- |\n | `.fx` | Configuración de nivel de proyecto, configuración e información del entorno |\n | `.vscode` | Archivos de código de VS para la depuración local |\n | `bot` | Código fuente del bot |\n | `templates` | Plantillas para el manifiesto de aplicación de Teams y los recursos de Azure correspondientes |\n \n  La implementación de notificación principal en la carpeta **bot** y contiene:\n\n | Nombre de archivo | Contenido |\n | --- | --- |\n | `src/adaptiveCards/` | Plantillas para tarjeta adaptable  |\n | `src/internal/` | Código de inicialización generado para la funcionalidad de notificación |\n | `src/index.*s` | El punto de entrada para controlar los mensajes del bot y enviar notificaciones |\n | `.gitignore` | Archivo para excluir archivos locales del proyecto de bot |\n | `package.json` | El archivo de paquete npm para el proyecto de bot |\n"
- title: Enviar notificación al canal de Teams
  durationInMinutes: 1
  content: "**Para enviar una notificación al canal de Teams**\n\n1. En Visual Studio Code, en **EXPLORADOR**, seleccione **MYNOTIFICATIONBOT> bot> src> index.js**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/file-path.png\" alt-text=\"Ruta de acceso de archivo\":::\n\n   Verá la página siguiente:\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/default-program.png\" alt-text=\"Programa predeterminado\":::\n\n1. Use el código siguiente después `for (const target of await bot.notification.installations()) { ` de en Visual Studio Code.\n\n     ```bash\n     if (target.type === \"Channel\") {\n       const members = await target.members();\n       await target.sendMessage(\"This is a message to channel: \" + members.length + \" members.\");\n       for (const member of members) {\n         await member.sendMessage(\"This is a message to Member: \" + member.account.email);\n       }\n     }\n     /* \n     ```  \n\n      :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/code-add.png\" alt-text=\"Agregar código\":::\n\n    **Para personalizar el almacenamiento:**\n\n    1. En Visual Studio Code, en **EXPLORER**, seleccione **MYNOTIFICATIONBOT> bot> src>> initialize.jsinterno**.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/initialize-storage.png\" alt-text=\"Inicialización de almacenamiento\":::\n    \n       Verá la página siguiente:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/storage-code.png\" alt-text=\"Código de almacenamiento\":::\n\n    1. Actualice el código siguiente en **initialize.js** archivo para personalizar el almacenamiento.\n\n         ```bash\n         const myStorage = new MyStorage(...);\n\n         // initialize ConversationBot with notification enabled and customized storage\n         const bot = new ConversationBot({\n             // The bot id and password to create BotFrameworkAdapter.\n             // See https://aka.ms/about-bot-adapter to learn more about adapters.\n             adapterConfig: {\n                 appId: process.env.BOT_ID,\n                 appPassword: process.env.BOT_PASSWORD,\n             },\n             // Enable notification\n             notification: {\n                 enabled: true,\n                 storage: myStorage,\n             },\n          });\n         ```  \n    1. Use su propia ubicación de almacenamiento en lugar de **MyStorage**.\n\n        > [!NOTE]\n        > Es necesario usar su propio almacenamiento para el entorno de producción. Si no se proporciona el almacenamiento, se tiene en cuenta el almacenamiento de archivos local predeterminado.\n\n1. Seleccione **el icono Ejecutar y depurar** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/run-debug-icon.png\"::: en la barra lateral Visual Studio Code.\n\n1. Seleccione **Debug(Edge)** o **Debug(Chrome) en** la lista desplegable.\n\n1. Seleccione **el botón Iniciar depuración** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/debug-app.png\" alt-text=\"Depuración de aplicaciones\":::\n\n    Obtendrá la siguiente salida en Teams.\n\n      :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation.png\" alt-text=\"Instalación de aplicaciones\":::\n\n1. Seleccione **Agregar a un equipo** en la lista desplegable.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/app-installation1.png\" alt-text=\"Mi salida de notificación1\":::\n\n1. En **el cuadro Buscar**, agregue cualquier **canal**.\n1. Seleccione **Configurar un bot**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/setup-bot.png\" alt-text=\"Configuración del bot\":::\n\n   Aparece la siguiente pantalla:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-notification.png\" alt-text=\"Channe1 Notificación\":::\n\n1. Abra **Windows PowerShell**.\n\n1. Ejecute el comando `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/windows-powershell.png\" alt-text=\"Desencadenador de PowerShell\"border=\"true\":::   \n\n   Recibirá la notificación en el canal de Teams:\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/channel-output.png\" alt-text=\"Salida del canal\":::\n\n   Recibirá la notificación en el chat personal:         \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/sbs-notification-bot/member-output.png\" alt-text=\"member-output\":::\n"
- title: Implementación de la primera aplicación de Teams
  durationInMinutes: 1
  content: "\nHa aprendido a compilar y ejecutar aplicaciones de Teams con la funcionalidad de bot de notificación. El último paso es implementar la aplicación en Azure.\n\nVamos a implementar la primera aplicación con funcionalidad de bot de notificación en Azure mediante el kit de herramientas de Teams.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Inicio de sesión en su cuenta de Azure\n\nUse su cuenta para acceder a microsoft Azure Portal y proporcionar aprovisionamiento de nuevos recursos en la nube para admitir la aplicación.\n\n1. Abrir Visual Studio Code.\n1. Abra la carpeta del proyecto que creó la aplicación del bot de notificación.\n1. Seleccione el icono kit de herramientas de  :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: Teams en la barra lateral.\n1. Seleccione **Iniciar sesión en Azure**.\n\n    > [!TIP]\n    > Si tiene instalada la extensión cuenta de Azure y usa la misma cuenta, puede omitir este paso.\n\n    Se abre el explorador web predeterminado para permitirle iniciar sesión en la cuenta.\n1. Inicie sesión en su cuenta de Azure con sus credenciales.\n1. Cierre el explorador cuando se le solicite y vuelva a Visual Studio Code.\n\n    La sección **ACCOUNTS** de la barra lateral muestra las dos cuentas por separado. También muestra el número de suscripciones de Azure utilizables disponibles. \n    \n    > [!NOTE]\n    > Asegúrese de que tiene al menos una suscripción de Azure utilizable disponible.\n\n    Ahora está listo para implementar la aplicación en Azure.\n\n## <a name=\"deploy-your-app-to-azure\"></a>Implementar la aplicación en Azure\n\n  En **IMPLEMENTACIÓN**, puede aprovisionar los recursos en la nube necesarios y el código de la aplicación se copia en los recursos en la nube creados.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Seleccione icono del Kit de herramientas de Teams :::image type=\"icon\" source=\"~/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral de Visual Studio Code.\n\n1. Seleccione **Aprovisionar en la nube en** **IMPLEMENTACIÓN**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-cloud.png\" alt-text=\"Captura de pantalla que muestra los comandos de aprovisionamiento\":::\n\n1. Seleccione un grupo de recursos existente o cree un nuevo grupo de recursos. Para obtener más información, consulte [Creación de un grupo de recursos](/azure/azure-resource-manager/management/manage-resource-groups-portal#create-resource-groups).\n\n1. Seleccione cualquiera de la suscripción existente.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/select-subscription.png\" alt-text=\"Captura de pantalla que muestra la selección de la suscripción existente.\":::\n\n1. Seleccione un grupo de recursos existente o cree uno nuevo.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/subscription-cloud.png\" alt-text=\"Captura de pantalla que muestra los recursos para el aprovisionamiento.\":::\n\n   > [!NOTE]\n   > Aparece un cuadro de diálogo en el que se menciona que se pueden incurrir en costos al ejecutar recursos en Azure.\n\n1. Seleccione **Aprovisionar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/provision-confirm1.png\" alt-text=\"Captura de pantalla del cuadro de diálogo de aprovisionamiento.\":::\n\n   El proceso de aprovisionamiento crea recursos en la nube de Azure. Puede supervisar el progreso observando los diálogos en la esquina inferior derecha.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-provision-success.png\" alt-text=\"Captura de pantalla que muestra el cuadro de diálogo de aprovisionamiento completo.\":::\n\n     Verá la opción para ver los recursos aprovisionados. En este tutorial, no es necesario ver los recursos.\n\n1. Seleccione **Implementar en la nube** en **IMPLEMENTACIÓN** una vez completado el aprovisionamiento.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-cloud.png\" alt-text=\"Captura de pantalla que muestra dónde seleccionar la implementación en la nube.\":::\n\n1. Seleccione **Implementar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/Deploy-confirm.png\" alt-text=\"Implemente para confirmar.\":::\n\n   La implementación tarda algún tiempo. Puede supervisar el progreso en los cuadros de diálogo de la esquina inferior derecha.\n    \n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/deploy-confirmation-cloud.png\" alt-text=\"Implementación de la confirmación.\":::\n\n1. Seleccione **Depuración local** en **ENTORNO** de Visual Studio Code.\n\n     :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/local-debug.png\" alt-text=\"Depuración local.\":::\n\n1. Seleccione **Depurar borde** en la lista desplegable.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/debug-cloud.png\" alt-text=\"Depuración local.\":::\n\n1. Seleccione **Agregar**.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/app-cloud-output.png\" alt-text=\"Salida de la nube de aplicaciones.\":::\n\n1. Abra **Windows PowerShell**.\n\n1. Ejecute el comando `Invoke-Webrequest -Method POST -URI http://localhost:3978/api/notification`.\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/windows-powershell1.png\" alt-text=\"Windows Powershell\":::\n\n    Recibirá la notificación en Teams:\n\n    :::image type=\"content\" source=\"~/assets/images/sbs-notification-bot/cloud-final-output.png\" alt-text=\"Salida final de la nube\":::\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nEn la ventana del terminal:\n\n1. Ejecute `teamsfx new` para crear un nuevo proyecto.\n\n   ``` bash\n   teamsfx new\n   ```\n\n1. Ejecute `teamsfx provision` para crear un recurso de Azure.\n\n   ``` bash\n   teamsfx provision\n   ```\n\n1. Ejecute `teamsfx deploy` para implementar la aplicación.\n\n   ``` bash\n   teamsfx deploy\n   ```\n\n1. Ejecute `teamsfx preview` para ejecutar la aplicación.\n\n   ``` bash\n   teamsfx preview\n   ```\n\n---\n"
- title: Desafío completo
  durationInMinutes: 1
  content: >
    ¿Se te ocurrió algo como esto?

     :::image type="content" source="../msteams-platform/assets/images/sbs-notification-bot/trigger-output.png" alt-text="Salida del desencadenador"border="true":::
- content: Ha completado el tutorial para compilar el bot de notificación.
