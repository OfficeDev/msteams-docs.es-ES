### YamlMime:Tutorial
title: Compilación de la primera aplicación con Node.js
metadata:
  title: Hello World con Node.js
  description: En este tutorial, aprenderás a crear la aplicación Hello World con Node.js.
  audience: Developer
  level: Beginner
  ms.date: 08/24/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Introducción a Introducción
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a87f933a2aad3d53d0c649f1e1aa1e5e318cffb2
  ms.sourcegitcommit: 9bdd930523041377b52dadffbd8cd52a86a047d7
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 02/08/2022
  ms.locfileid: "62443961"
items:
- durationInMinutes: 1
  content: >
    Inicia Microsoft Teams desarrollo de aplicaciones creando la primera aplicación con una pestaña, un bot y una funcionalidad de extensión de mensaje.


    >Esta aplicación tendrá todas las capacidades y cada una tiene su propia interfaz de usuario y experiencia de usuario:


    :::image type="content" source="../msteams-platform/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png" alt-text="El diagrama que muestra esta aplicación tiene tres características." border="false":::


    En este tutorial, aprenderás:


    - Cómo configurar un nuevo proyecto con herramientas de línea de comandos.

    - Cómo crear tres aplicaciones con una funcionalidad diferente cada una: pestaña, bot y extensión de mensaje.

    - Cómo implementar la aplicación desde el Portal de desarrolladores
- title: Requisitos previos
  durationInMinutes: 1
  content: "\nEsta es una lista de herramientas que necesitarás instalar para crear e implementar una Teams aplicación.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Node.js y NPM](https://nodejs.org/) | Entorno de tiempo de ejecución de JavaScript back-end. Use la versión más reciente de LTS de v14.|\n| &nbsp; | [ngrok](https://ngrok.com/download) | Teams aplicaciones (bots de conversación, extensiones de mensajería y webhooks entrantes) requieren conexiones entrantes. Un túnel conecta el sistema de desarrollo a Teams. No es necesario para las aplicaciones que solo incluyen pestañas. Este paquete se instala en el directorio del proyecto (mediante npm `devDependencies`). |\n| &nbsp; | [Microsoft Edge](https://www.microsoft.com/edge) (recomendado) o [Google Chrome](https://www.google.com/chrome/) | Un explorador con herramientas de desarrollador. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript, TypeScript o SharePoint Framework (SPFx) de compilación. Use la versión 1.55 o posterior. |\n| &nbsp; | [Git](https://git-scm.com/downloads) | Git para usar el repositorio de Node.js de la aplicación desde GitHub. |\n| &nbsp; |  [gulp](https://gulpjs.com/docs/en/getting-started/quick-start) | Kit de herramientas de JavaScript de código abierto. Instale la versión 4.0.0 o posterior. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/download-app) | Microsoft Teams colaborar con todos los usuarios con los que trabajes a través de aplicaciones para chat, reuniones, llamadas, todo en un solo lugar. | \n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) y [CLI de Azure](/cli/azure/install-azure-cli) | Herramientas de Azure para obtener acceso a los datos almacenados o para implementar un back-end basado en la nube para la aplicación Teams en Azure. |\n| &nbsp; | [React Developer Tools for Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React Developer Tools for Microsoft Edge](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Herramientas del explorador para el desarrollo de pestañas con JavaScript. |\n| &nbsp; | [Explorador de Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, una herramienta basada en explorador que le permite ejecutar una consulta desde Microsoft Graph datos. |\n| &nbsp; | [Portal para desarrolladores de Teams](https://dev.teams.microsoft.com/) | Portal basado en web para configurar, administrar y distribuir la aplicación Teams aplicación, incluida la organización o la tienda Teams cliente. |\n| &nbsp; | **Visual Studio Code de Visual Studio Code** | &nbsp; |\n| &nbsp; | [Azure Functions Core Tools](/azure/azure-functions/functions-run-local) | Componentes back-end localmente durante una ejecución de depuración local, incluidas las aplicaciones auxiliares de autenticación necesarias para ejecutar los servicios en Azure. Se instala en el directorio del proyecto (mediante npm `devDependencies`). |\n| &nbsp; | [SDK de .NET](/dotnet/core/install/) | Enlaces personalizados para la depuración local y las implementaciones de aplicaciones de Azure Functions. Si no ha instalado el SDK de .NET 3.1 (o posterior) globalmente, se puede instalar la versión portátil. |\n\n## <a name=\"verify-version-numbers-for-installed-tools\"></a>Comprobar los números de versión de las herramientas instaladas\n\nUse los siguientes comandos para comprobar que las versiones instaladas para las herramientas son las necesarias.\n\n> [!NOTE]\n> Usa la ventana de terminal con la que te sientas más cómodo en tu plataforma. Estos ejemplos usan Git Bash (que se incluye en la instalación de Git), pero estos scripts se ejecutarán en la mayoría de las plataformas.\n\nPara comprobar los números de versión de las herramientas instaladas:\n\n1. Abra una ventana de terminal. \n2. Ejecute el siguiente comando para comprobar la `git` versión instalada en el equipo:\n\n    ```bash\n    $ git --version\n    ```\n\n    Ejemplo de salida: `git version 2.19.0.windows.1`\n    \n3. Ejecute el siguiente comando para comprobar la `node.js` versión:\n    \n    ```bash\n    $ node -v\n    ```\n\n    Ejemplo de salida: `v8.9.3`\n\n4. Compruebe el número de versión de `npm`:\n\n    ```bash\n    $ npm -v\n    ```\n\n    Ejemplo de salida: `5.5.1`\n\n5. Compruebe el número de versión de `gulp`:\n    \n    ```bash\n    $ gulp -v\n    ```\n\n    Ejemplo de salida:  `CLI version 2.3.0`\n    \n    `Local version 4.0.2`\n\n6. Ejecute el siguiente comando para comprobar el número de versión de Visual Studio Code:\n\n    ```bash\n    code --version\n    ```\n\n    Ejemplo de salida:  `1.28.2`\n    \n    `929bacba01ef658b873545e26034d1a8067445e9`\n\nPuede usar una versión diferente de estas aplicaciones sin ningún problema.\n\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar el inquilino Teams desarrollo\n\nUn **espacio** empresarial es como un espacio o un contenedor para su organización en Teams, donde chatea, comparte archivos y ejecuta reuniones.\nEste espacio también es donde se puede realizar la instalación local y probar la aplicación. \n\nVamos a comprobar si está listo para desarrollar con el inquilino.\n\n### <a name=\"enable-sideloading-option\"></a>Habilitar la opción de instalación local\n\nDespués de crear la aplicación, debes cargar la aplicación en Teams sin distribuirla. Este proceso se conoce como instalación local. Inicie sesión en su Microsoft 365 para ver esta opción.\n  \n> [!NOTE]\n> La instalación local es necesaria para obtener una vista previa y probar aplicaciones en Teams entorno local. Si no está habilitada, no podrás obtener una vista previa y probar la aplicación en Teams localmente.\n\n¿Ya tiene un inquilino y tiene acceso de administrador? Vamos a comprobar si realmente lo haces.\n\nCompruebe si puede realizar la instalación local de aplicaciones en Teams:\n\n1. En el Teams, seleccione **Icono de** la Tienda.\n1. Selecciona **Administrar aplicaciones**.\n1. Busca la opción para Upload **una aplicación personalizada**. Si ves la opción, las aplicaciones de instalación local están habilitadas.\n\n    :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"La ilustración muestra la opción de cargar una aplicación personalizada en Teams.\":::\n\n    > [!NOTE]\n    > Si Teams no muestra la opción de cargar una aplicación personalizada, habla con el Teams usuario.\n\n### <a name=\"create-a-free-teams-developer-tenant\"></a>Crear un inquilino Teams desarrollador gratuito\n\nSi no tienes una cuenta Teams desarrollador, puedes obtenerla gratuitamente. Unirse al Microsoft 365 programa para desarrolladores.\n\n1. Vaya al programa [Microsoft 365 desarrolladores](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecciona **Unirse ahora** y sigue las instrucciones en pantalla.\n1. En la pantalla de bienvenida, selecciona **Configurar suscripción A5**.\n1. Configurar la cuenta de administrador. Después de finalizar, aparecerá la siguiente pantalla.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Ejemplo de lo que ve después de registrarse en el programa Microsoft 365 desarrollador.\":::\n\n1. Inicie sesión en Teams la cuenta de administrador que acaba de configurar. Comprueba que tienes la opción **Upload una aplicación** personalizada en Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtener una cuenta gratuita de Azure\n\nSi quieres hospedar la aplicación o acceder a recursos en Azure, debes tener una suscripción a Azure. [Cree una cuenta gratuita antes](https://azure.microsoft.com/free/) de comenzar.\n\nAhora tienes todas las herramientas y configura tus cuentas. A continuación, vamos a configurar el entorno de desarrollo y empezar a compilar.\n\nPuede seguir usando esta ventana de terminal para ejecutar los comandos que se siguen en este tutorial.\n\n<a name=\"DownloadSample\"></a>\n\n## <a name=\"download-the-sample\"></a>Descargar el ejemplo\n\nPara este tutorial, usa [hello, world!](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/app-hello-world/nodejs) ejemplo para empezar. Puede descargarlo y clonarse desde GitHub.\n\n**Para usar Git Bash para clonar el repositorio de ejemplo**:\n\n1. Abra una ventana de terminal.\n1. Ejecute el siguiente comando para clonar el repositorio de ejemplo en el equipo:\n\n    ```bash\n    git clone https://github.com/OfficeDev/Microsoft-Teams-Samples.git\n    ```\n\n> [!TIP]\n> Puede [bifurcar este](https://help.github.com/articles/fork-a-repo/) [repositorio](https://github.com/OfficeDev/Microsoft-Teams-Samples) si desea modificar y comprobar los cambios realizados en el repositorio de GitHub para futuras referencias.\n"
- title: Crear la primera Node.js aplicación
  durationInMinutes: 1
  content: "\nDespués de clonar el repositorio para Node.js de ejemplo, puedes crear y probar la aplicación en el entorno local.\n\nEn esta página, aprenderá a:\n1. [Crear y ejecutar la primera aplicación](#build-and-run-the-sample)\n1. [Probar la aplicación de ejemplo](#test-your-sample-app-in-local-environment)\n\n\n## <a name=\"build-and-run-the-sample\"></a>Compilar y ejecutar el ejemplo\n\nDespués de clonar el repositorio, puedes crear la aplicación de ejemplo.\n\n1. Abra una ventana de terminal.\n1. Ejecute el comando cambiar directorio en el terminal para cambiar al directorio de la aplicación de ejemplo:\n\n    ```bash\n    cd Microsoft-Teams-Samples/samples/app-hello-world/nodejs/\n    ```\n\n1. Instale todas las dependencias con el siguiente comando:\n\n    ```bash\n    npm install\n    ```\n\n    Debería ver un montón de dependencias que se instalan.\n\n1. Ejecute la aplicación con el siguiente comando una vez completada la instalación:\n\n    ```bash\n    npm start\n    ```\n\n    Cuando se inicia la aplicación Hello World, se muestra `App started listening on port 3333` en la ventana del terminal.\n\n    > [!NOTE]\n    > Si ve un número de puerto diferente que se muestra en el mensaje anterior, es porque tiene un conjunto de variables de entorno PORT. Puede seguir usando ese puerto o cambiar la variable de entorno a 3333.\n\n1. Abra una ventana del explorador y use las siguientes direcciones URL para comprobar que se están cargando todas las direcciones URL de la aplicación Hello World:\n\n    - `http://localhost:3333`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host.png\" alt-text=\"Imagen que muestra Node.js host local\" border=\"false\":::\n\n    - `http://localhost:3333/hello`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-hello-nodejs.png\" alt-text=\"Imagen que muestra Node.js de saludo de host local\" border=\"false\":::\n\n    - `http://localhost:3333/first`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-first-nodejs.png\" alt-text=\"Imagen que muestra Node.js primera pestaña host local\" border=\"false\":::\n\n    - `http://localhost:3333/second`\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/local-host-second-nodejs.png\" alt-text=\"Imagen que muestra Node.js segunda pestaña host local\" border=\"false\":::\n\n## <a name=\"test-your-sample-app-in-local-environment\"></a>Probar la aplicación de ejemplo en el entorno local\n\nRecuerde que las aplicaciones de Microsoft Teams son aplicaciones web que exponen una o más funcionalidades. Haz que la aplicación esté disponible en Internet para que Teams plataforma pueda cargarla. Para que la aplicación sea accesible desde Internet, debes *hospedar* la aplicación.\n\nPara las pruebas locales, puedes ejecutar la aplicación en el equipo local y crear un túnel para ella con un punto de conexión web. [ngrok](https://ngrok.com) es una herramienta gratuita que te permite hacerlo. Con *ngrok*, puede obtener una dirección web como `https://d0ac14a5.ngrok.io` (esta dirección URL es solo un ejemplo). Puede descargar [e instalar](https://ngrok.com/download) *ngrok* para su entorno. Asegúrese de agregarlo a una ubicación en el `PATH`archivo .\n\n### <a name=\"create-ngrok-tunnel\"></a>Crear túnel ngrok\n\nDespués de instalar ngrok, puedes crear un túnel para implementar la aplicación localmente.\n\n1. Abra una nueva ventana de terminal.\n1. Ejecute el siguiente comando para crear un túnel. La aplicación de ejemplo usa el puerto 3333:\n\n    ```bash\n    ngrok http 3333 -host-header=localhost:3333\n    ```\n    Se crea el túnel ngrok. Este es un ejemplo de túnel ngrok.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel.png\" alt-text=\"Imagen que muestra el túnel ngrok\" border=\"false\":::\n\n    *Ngrok escucha* las solicitudes de Internet y las enruta a la aplicación que se ejecuta en el puerto 3333.\n\nPara comprobar la implementación local de la aplicación:\n\n1. Abra el explorador.\n1. Cargue la aplicación con la siguiente dirección URL:\n\n    `https://<forwarding address in ngrok console session>/`\n\n    Este es un ejemplo de la dirección URL:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nodejs-ngrok-tunnel-verify.png\" alt-text=\"Imagen que muestra node.js aplicación que se ejecuta localmente en el túnel ngrok\" border=\"false\":::\n\n    Puedes intentar agregar `hello`, `first`o `second` a la dirección URL del túnel ngrok para ver diferentes páginas de pestañas de la aplicación.\n\n    Ngrok escucha las solicitudes de Internet y las enruta a la aplicación que se ejecuta en el puerto 3333.        \n\n1. Anote la dirección de reenvío en la consola de ngrok. Necesitas esta dirección URL para implementar la aplicación en Teams.\n\n    > [!NOTE]\n    > Si usó un puerto diferente durante la compilación [y](#build-and-run-the-sample) la ejecución, asegúrese de usar el mismo número de puerto para configurar el túnel *ngrok* .\n    > [!TIP]\n    > Es una buena idea ejecutar *ngrok* en una ventana de terminal diferente para mantenerla en funcionamiento sin interferir con la aplicación de nodo, que más adelante podría tener que detener, volver a compilar y volver a ejecutar. La *sesión ngrok* devolverá información de depuración útil en esta ventana. La versión de pago de *ngrok* permite nombres persistentes.\n\n    >[!IMPORTANT] \n    > Si usas la versión gratuita de ngrok, la aplicación solo estará disponible durante la sesión actual en el equipo de desarrollo. No está disponible si la máquina está apagada o está en modo de suspensión. Al reiniciar el servicio, devuelve una nueva dirección. A continuación, debe actualizar todas las ubicación que usan la dirección obsoleta. Recuerda este paso al compartir la aplicación para realizar pruebas.\n\n<a name=\"DeployToTeams\"></a>\n\n## <a name=\"build-nodejs-app-package\"></a>Compilar Node.js de la aplicación\n\nPuedes usar para `gulp CLI` crear el paquete de la aplicación para Node.js.\n\n1. Abra una ventana de terminal.\n1. Asegúrese de que está en el directorio donde se `node.js` clona. Esta es la carpeta donde `gulpfile.js` se coloca. \n1. Ejecute el siguiente comando para compilar el Node.js de la aplicación.\n\n    ```$ gulp```\n\n    Este es un ejemplo de la salida del comando:\n\n    `[13:39:27] Using gulpfile ~\\documents\\github\\msteams-samples-hello-world-nodejs\\gulpfile.js`\n\n    `[13:39:27] Starting 'clean'...`\n\n    `[13:39:27] Starting generate-manifest'...`\n\n    `[13:39:27] Finished 'generate-manifest' after 11 ms`\n\n    `[13:39:27] Finished 'clean after 21 ms`\n\n    `[13:39:27] Starting 'default'...\n    Build completed. Output in manifest folder`\n\n    `[13:39:27] Finished 'default' after 62 μs`\n\n    Se crea el paquete helloworldapp.zip aplicación. Puede encontrar el archivo de paquete en la siguiente ruta de acceso.\n\n    `<path to the cloned repo>/Microsoft-Teams-Samples/samples/app-hello-world/nodejs/manifest`\n\n    > [!NOTE]\n    > Busque el archivo de paquete de la aplicación, helloworldapp.zip, si la ubicación no está clara en la herramienta que está usando.\n"
- title: Configurar la primera aplicación Node.js con el Portal de desarrolladores
  durationInMinutes: 1
  content: "\nPuedes usar el [Portal de desarrolladores](https://dev.teams.microsoft.com/) para cargar el paquete de la aplicación Teams y configurar las funcionalidades de la aplicación. Developer Portal es una Teams que simplifica la creación y el registro de una aplicación. Instalar desde la Teams store!\n\nDespués de compilar y probar la aplicación Teams, puedes configurarla y obtener una vista previa con el Portal de desarrolladores.\n\nLa actualización del paquete de la aplicación incluye:\n\n1. [Importar el paquete de la aplicación al Portal de desarrolladores](#import-the-app-package-to-developer-portal)\n1. [Configuración de las capacidades de la aplicación](#configure-your-apps-capabilities)\n\n### <a name=\"import-the-app-package-to-developer-portal\"></a>Importar el paquete de la aplicación al Portal de desarrolladores\n\nPara importar el paquete de la aplicación:\n\n1. Abra Microsoft Teams.\n\n1. Selecciona el **icono De** :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-store-icon.png\"::: la Tienda en la barra izquierda.\n\n1. Busque Portal **para desarrolladores** en la barra de búsqueda y seleccione **Portal de desarrollador***.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/select-dev-portal-app.png\" alt-text=\"Seleccionar aplicación portal para desarrolladores\" border=\"false\":::\n\n1. Seleccione **Abrir**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/open-dev-portal.png\" alt-text=\"Imagen que muestra la aplicación abierta del Portal de desarrolladores\" border=\"false\":::\n\n    Se abre el Portal de desarrolladores.\n\n1. Selecciona la **pestaña** Aplicaciones.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-app.png\" alt-text=\"Aplicación portal para desarrolladores\" border=\"false\":::\n\n1. Selecciona **Importar aplicación**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/import-app-in-dev-portal.png\" alt-text=\"Imagen que muestra el botón Importar aplicación\" border=\"false\":::\n\n1. Abra el paquete de **lahelloworldapp.zip** desde la siguiente ruta de acceso en la C# de directorio de repositorio de ejemplo:\n\n    `<path to cloned node.js sample repo>\\Source\\Repos\\Microsoft-Teams-Samples\\samples\\app-hello-world\\nodejs\\manifest`\n\n    La **aplicación Hello World** se importa en el Portal de desarrolladores.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/app-imported-dev-portal.png\" alt-text=\"Imagen que muestra la aplicación importada en Teams\" border=\"false\":::\n\n    Después de importar la aplicación al Portal de desarrolladores, puedes ver sus detalles en Portal de desarrolladores.\n\n### <a name=\"take-a-tour-of-your-app-in-developer-portal\"></a>Realizar un recorrido por la aplicación en el Portal de desarrolladores\n\nDespués de importar la aplicación al Portal de desarrolladores, puedes ver sus detalles, incluido el archivo de manifiesto.\n\n#### <a name=\"view-app-information\"></a>Ver información de la aplicación\n\n1. Seleccione **Información básica en** el panel izquierdo del Portal de desarrolladores.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/dev-portal-left-pane-basic.png\" alt-text=\"La imagen muestra el panel izquierdo del Portal de desarrolladores\" border=\"false\":::\n\n1. Tenga en cuenta la siguiente información de la información básica:\n    - Identificador de la aplicación\n    - Información para desarrolladores\n    - Direcciones URL de la aplicación\n\n1. Seleccione **Personal de marca** en el panel izquierdo para ver la información de personal de marca.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-app-branding.png\" alt-text=\"Imagen que muestra información de personal de marca de la aplicación\" border=\"false\":::\n\n    Estos detalles son importantes si vas a escribir una nueva aplicación para su distribución.\n\n#### <a name=\"view-app-features\"></a>Ver características de la aplicación\n\n- Seleccione **Características de la** aplicación en el panel izquierdo del Portal de desarrolladores.\n\n    Las características de la aplicación aparecen en el panel derecho. Puedes ver tarjetas para Aplicación personal, Bot y Extensión de mensaje.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-csharp-app-features.png\" alt-text=\"Imagen que muestra las características de la aplicación\" border=\"false\":::\n\n#### <a name=\"view-the-app-manifest\"></a>Ver el manifiesto de la aplicación\n\nUsas el archivo de manifiesto para configurar funcionalidades, recursos necesarios y otros atributos importantes para la aplicación.\n\n- Seleccione **Publicar** en el panel izquierdo para abrir la lista desplegable y, a continuación, seleccione **Paquete de aplicaciones**.\n\n    El manifiesto de la aplicación aparece en el panel derecho.\n    \n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-manifest.png\" alt-text=\"Imagen que muestra el archivo de manifiesto de la aplicación en el Portal de desarrolladores\" border=\"false\":::\n\n    El archivo de manifiesto aparece en el panel derecho.\n\n### <a name=\"configure-your-apps-capabilities\"></a>Configurar las capacidades de la aplicación\n\nDespués de importar la aplicación al Portal de desarrolladores, el siguiente paso es configurar las funcionalidades de la aplicación. Portal para desarrolladores contiene toda la información de la aplicación en diferentes secciones. Facilita la configuración de las capacidades de la aplicación.\n\nCon el Portal de desarrolladores, puede:\n1. [Configurar la aplicación de pestaña personal](#configure-personal-tab-app)\n1. [Configurar bot](#configure-bot)\n1. [Configurar extensión de mensaje](#configure-message-extension)\n\n#### <a name=\"configure-personal-tab-app\"></a>Configurar la aplicación de pestaña personal\n\nPara configurar la aplicación de pestaña personal:\n\n1. Selecciona el :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: icono de la **tarjeta aplicación Personal** en el **panel Características de** la aplicación y selecciona **Editar**.\n\n    Aparecen los detalles de la pestaña Hello.\n\n1. Selecciona el :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: icono de la pestaña Hello y **selecciona Editar** para abrir los detalles de la aplicación para actualizar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-edit-tab.png\" alt-text=\"Imagen que muestra el menú de la pestaña Hello\" border=\"false\":::\n\n1. Escribe los detalles de la aplicación para la pestaña Hola **en Agregar una pestaña a tu aplicación personal**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-add-tab.png\" alt-text=\"Imagen que muestra los detalles de la pestaña Hello\" border=\"false\":::\n\n    Escriba los siguientes detalles:\n    - **Nombre**: pestaña Hello.\n    - **Dirección URL de** contenido **y dirección URL del** sitio web: la dirección de reenvío en la sesión de la consola de ngrok.\n    - **Contexto**: seleccione **Ficha Personal**.\n\n1. Seleccione **Actualizar**.\n\n    Los detalles de la pestaña Hello aparecen en el **panel Aplicación** personal.\n\n1. Haga clic en **Guardar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-save.png\" alt-text=\"Imagen que muestra los detalles de la pestaña Hello que se guardarán\" border=\"false\":::\n\n    El **panel Aplicación** personal ahora muestra la nueva pestaña y una pestaña Acerca de creada automáticamente.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-saved.png\" alt-text=\"Imagen que muestra la pestaña Hola y detalles de la pestaña Acerca de\" border=\"false\":::\n\n#### <a name=\"configure-bot\"></a>Configurar bot\n\nEs fácil agregar la funcionalidad de bots a la aplicación. La aplicación de ejemplo Hello World ya tiene un bot como parte de la muestra, pero debes registrarlo con Teams.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-no-id.png\" alt-text=\"Imagen que muestra la aplicación bot importada sin identificador de aplicación\" border=\"false\":::\n\nEl bot que se importó del ejemplo no tiene un identificador de aplicación asociado. Tendrás que eliminarlo y crear un bot nuevo. Portal para desarrolladores crea un nuevo identificador de aplicación y lo registra con Teams.\n\nAgregar y configurar un bot implica:\n\n1. [Agregar un nuevo bot](#to-add-a-new-bot)\n1. [Agregar bot a la aplicación](#to-add-bot-to-app)\n1. [Configuración del ámbito del bot](#to-configure-bot-scope)\n\n##### <a name=\"to-add-a-new-bot\"></a>Para agregar un bot nuevo\n\n1. Seleccione el :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: icono de la tarjeta **Bot** en el **panel Características de** la aplicación y seleccione **Eliminar**.\n\n1. Seleccione **Herramientas** para agregar funcionalidad.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/tools-option.png\" alt-text=\"Imagen que muestra la opción Herramientas\" border=\"false\":::\n\n1. Seleccione **Administración de bots** en el **panel** Herramientas.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-tools-bot-card.png\" alt-text=\"Imagen que muestra el panel de administración de bots\" border=\"false\":::\n\n1. Seleccione **+ Nuevo bot** en el **panel de administración bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-management-new-bot.png\" alt-text=\"Imagen que muestra la nueva opción bot\" border=\"false\":::\n\n1. Escriba un nombre adecuado para el bot y seleccione **Agregar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot.png\" alt-text=\"Imagen que muestra cómo agregar bot\" border=\"false\":::\n\n    Aparece **el panel** Configurar que muestra los detalles del nuevo bot en el panel izquierdo.\n\n1. Escriba la dirección URL de reenvío desde la `ngrok` consola y seleccione **Guardar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-endpoint.png\" alt-text=\"Imagen que muestra cómo agregar punto de conexión de bot\" border=\"false\":::\n\n1. Seleccione **Secretos de** cliente y, a continuación, seleccione Agregar **un secreto de cliente al bot** para generar una contraseña para el bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-client-secrets.png\" alt-text=\"Imagen que muestra la sección Secreto de cliente\" border=\"false\":::\n\n    Portal para desarrolladores genera una contraseña para el bot.\n\n    Puede usar el icono :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/copy-icon.png\"::: para copiar la contraseña. Para este tutorial, no es necesario copiarlo.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-client-secret-generated.png\" alt-text=\"Imagen que muestra el secreto de cliente generado\" border=\"false\":::\n\n1. Seleccione **Aceptar**.\n\n1. Seleccione **< Bots para** volver al **panel de administración bot** .\n\n    El **panel de administración** bot muestra el nuevo Bot agregado con un identificador de aplicación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-bot-added.png\" alt-text=\"Imagen que muestra un nuevo bot con id. de aplicación\" border=\"false\":::\n\n1. Asegúrese de guardar el identificador del bot junto con la contraseña de la **sección Secreto de** cliente.\n\n##### <a name=\"to-add-bot-to-app\"></a>Para agregar bot a la aplicación\n\n1. Abra el **panel Características de la** aplicación y seleccione la **tarjeta Bot** .\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-card.png\" alt-text=\"Imagen que muestra la tarjeta bot\" border=\"false\":::\n\n    Aparece **el panel Bot** .\n\n1. Selecciona la aplicación bot de **Seleccionar un bot existente** y selecciona **Guardar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-bot-app.png\" alt-text=\"Imagen que muestra cómo seleccionar una aplicación de bot existente\" border=\"false\":::\n\n    El nuevo bot se agrega a la aplicación con su propio identificador de aplicación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-new-bot-added.png\" alt-text=\"Imagen que muestra el nuevo bot agregado a la aplicación\" border=\"false\":::\n\n##### <a name=\"to-configure-bot-scope\"></a>Para configurar el ámbito del bot\n\n1. Seleccione el :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: icono de la nueva tarjeta **Bot** y seleccione **Editar**.\n\n1. Pase por el **panel Bot** para ver la **sección Comandos** y seleccione **+ Agregar un comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-add-command.png\" alt-text=\"Imagen que muestra la sección comandos\" border=\"false\":::\n\n1. Escriba un nombre y una descripción adecuados para el **comando**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-add-bot-command.png\" alt-text=\"Imagen que muestra cómo agregar detalles de comandos\" border=\"false\":::\n\n1. Seleccione los tres ámbitos del comando y seleccione **Agregar**.\n    - **Personal**\n    - **Equipo**\n    - **Chat en grupo**\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-add.png\" alt-text=\"Imagen que muestra cómo guardar detalles de comandos\" border=\"false\":::\n\n    El nuevo comando se agrega a la **sección Comandos** del **panel Bot** .\n\n1. Haga clic en **Guardar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-save-new-bot-command.png\" alt-text=\"Imagen que muestra los detalles de los comandos que se guardarán\" border=\"false\":::\n\n    Se guardan los detalles del comando.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-bot-command-added.png\" alt-text=\"Imagen que muestra los detalles de comandos guardados\" border=\"false\":::\n\n1. Abre **el panel Características de** la aplicación y selecciona **Tarjeta de aplicación** personal para ver los detalles de la pestaña de la aplicación.\n\n    Verás que se agrega una pestaña para el nuevo bot de chat a la aplicación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-tab-chat-tab-configured.png\" alt-text=\"Imagen que muestra la pestaña de chat configurada\" border=\"false\":::\n\n#### <a name=\"configure-message-extension\"></a>Configurar extensión de mensaje\n\nLas extensiones de mensajería permiten a los usuarios solicitar información del servicio y publicar esa información. La información se publica en forma de tarjetas en la conversación del canal. Las extensiones de mensajería aparecen en la parte inferior del cuadro de redacción.\n\nPara agregar una nueva extensión de mensaje:\n\n1. Seleccione el :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/ellipse-icon.png\"::: icono de la tarjeta **Extensión de** mensaje en el **panel Características de** la aplicación y seleccione **Eliminar**.\n\n1. Seleccione **Extensión de mensaje** en el **panel Características de la** aplicación.\n\n1. Selecciona el nombre de la aplicación bot en la **lista desplegable Seleccionar un bot** existente en el **panel Extensión de** mensaje.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-select-bot.png\" alt-text=\"Imagen que muestra el panel extensión de mensaje para seleccionar bot\" border=\"false\":::\n\n1. Haga clic en **Guardar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-select-msgext-bot.png\" alt-text=\"Imagen que muestra el panel extensión de mensaje\" border=\"false\":::\n\n    La extensión de mensaje se guarda y la **sección Comandos** aparece en el panel **Extensión de** mensaje.\n\n1. Selecciona **+ Agregar un comando** para definir el ámbito de lo que puede hacer la aplicación de extensión de mensajes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command.png\" alt-text=\"Imagen que muestra la sección Comando\" border=\"false\":::\n\n    Cuadro **de diálogo Agregar un** comando.\n\n1. Asegúrese de **que la** búsqueda está seleccionada como el tipo de comando que desea agregar en el **cuadro de diálogo Agregar un** comando.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-new-command.png\" alt-text=\"Imagen que muestra el cuadro de diálogo Agregar un comando\" border=\"false\":::\n\n1. Escriba la información adecuada para los siguientes detalles:\n    - Identificador de comando\n    - Título del comando\n    - Descripción del comando\n\n1. Muévete por el cuadro de diálogo para ver los detalles restantes.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-add-command-b.png\" alt-text=\"Imagen que muestra los detalles restantes en el cuadro de diálogo Agregar un comando\" border=\"false\":::\n\n1. Asegúrese **de que El valor predeterminado** está seleccionado.\n1. Seleccione los siguientes contextos para el comando de extensión de mensaje:\n    - Cuadro de comandos\n    - Cuadro Redacción\n    - Mensaje\n1. Escriba la información adecuada para los siguientes detalles:\n    - Nombre del parámetro\n    - Título del parámetro\n    - Descripción del parámetro\n\n1. Seleccione **Texto** como tipo de entrada.\n1. Seleccione **Guardar**.\n1. El comando de extensión de mensaje se guarda y se muestra en la lista de comandos del panel **Extensión de** mensaje.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/devp-msgext-command-added.png\" alt-text=\"Imagen que muestra el comando agregado\" border=\"false\":::\n\n1. Haga clic en **Guardar**.\n1. Abra **el panel características de la** aplicación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/nj-app-capabilities-configured.png\" alt-text=\"Imagen que muestra las capacidades configuradas para la aplicación Hello World\" border=\"false\":::\n\n    Verás las tres funciones (aplicación de pestaña personal, bot y extensión de mensaje) configuradas para la aplicación Hello World.\n"
- title: Obtener una vista previa y probar la Node.js aplicación
  durationInMinutes: 1
  content: "\nDespués de importar la aplicación y configurar las funcionalidades en el Portal de desarrolladores, puedes obtener una vista previa y probar la aplicación de ejemplo.\n\n## <a name=\"preview-your-app-in-teams\"></a>Obtener una vista previa de la aplicación en Teams\n\nDespués de configurar las funcionalidades de la aplicación, puedes obtener una vista previa y probar la aplicación en Teams en el entorno local.\n\nPara obtener una vista previa de la aplicación:\n\n1. Seleccione **Vista previa en Teams** de la barra de herramientas del Portal de desarrolladores.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/preview-in-teams.png\" alt-text=\"Imagen que muestra el botón Vista previa\" border=\"false\":::\n\n    El Portal de desarrolladores te informa de que la aplicación se ha descargado correctamente.\n\n1. Selecciona **Administrar aplicaciones**.\n   La aplicación aparece en las aplicaciones de instalación local. \n1. Busca la aplicación con el cuadro de búsqueda y selecciona los tres puntos de su fila.\n1. Seleccione la **opción** Ver.\n    Aparecerá **la página** Agregar para la aplicación.\n1. Selecciona **Agregar** para cargar la aplicación en Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/add-nodejs-app-sideload.png\" alt-text=\"Imagen que muestra el cuadro de diálogo Agregar aplicación\" border=\"false\":::\n\n    La aplicación ya está disponible en Teams. Puede ver todas las pestañas y probar las funcionalidades:\n\n    - Pestaña Hello:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-tab.png\" alt-text=\"Imagen que muestra la pestaña Hello en el entorno local\" border=\"false\":::\n\n    - Bot de chat:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot.png\" alt-text=\"Imagen que muestra el bot de la aplicación en el entorno local\" border=\"false\":::\n\n        Puede enviar un mensaje mediante el chat.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-bot-chat.png\" alt-text=\"Imagen que muestra el chat en el entorno local\" border=\"false\":::\n\n    - Extensión de mensaje:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext.png\" alt-text=\"Imagen que muestra la extensión de mensaje en el entorno local\" border=\"false\":::\n\n        Puede probar una búsqueda con la extensión de mensaje.\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-msgext-query.png\" alt-text=\"Imagen que muestra la búsqueda con extensión de mensaje en el entorno local\" border=\"false\":::\n\n    - Pestaña Acerca de:\n\n        :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/helloworld-about.png\" alt-text=\"Imagen que muestra la pestaña Acerca de en el entorno local\" border=\"false\":::"
