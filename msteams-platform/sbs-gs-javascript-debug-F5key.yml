### YamlMime:Tutorial
title: Compile su primera aplicación con JavaScript
metadata:
  title: Hello World con JavaScript
  description: En este tutorial, aprenderás a crear la aplicación Hello World con JavaScript.
  audience: Developer
  level: Beginner
  ms.date: 10/21/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: ~/get-started/get-started-overview.md
  nextTutorialTitle: Introducción a Introducción
  ms.custom: mvc
  ms.localizationpriority: high
  ms.openlocfilehash: a458be9d5eb0a3ed29975cd94b452268da5931eb
  ms.sourcegitcommit: 5e5d2d3fb621bcbd9d792a5b450f95167ec8548b
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 03/22/2022
  ms.locfileid: "63732025"
items:
- durationInMinutes: 1
  content: "Inicia Microsoft Teams desarrollo de aplicaciones con la primera Teams aplicación. Crearás tres aplicaciones Teams: una aplicación de pestaña, una aplicación de bot y una aplicación de extensión de mensajería. \n\nCada una de las aplicaciones tendrá una funcionalidad, que viene con su propia interfaz de usuario y experiencia de usuario:\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/your-helloworld-app.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características.\" border=\"false\":::\n\n> [!NOTE]\n> En este tutorial, crearás primero una aplicación de pestaña, seguida de una aplicación bot y, a continuación, una aplicación de extensión de mensajería. Sin embargo, puedes elegir crear una aplicación con cualquier funcionalidad primero, sin obstaculizar la funcionalidad de otras aplicaciones.\n\nEn este tutorial, aprenderás:\n\n- Cómo configurar un nuevo proyecto con Teams Toolkit.\n- Cómo crear tres aplicaciones con una funcionalidad diferente cada una: pestaña, bot y extensión de mensajería.\n- La estructura de la aplicación:\n    - La parte de tabulación con JavaScript mediante React.\n    - El resto de las características con Node.js.\n- Cómo implementar la aplicación\n"
- title: Requisitos previos
  durationInMinutes: 1
  content: "\nEsta es una lista de herramientas que necesitarás para crear e implementar tus aplicaciones.\n\n| &nbsp; | Instalar | Para usar... |\n| --- | --- | --- |\n| **Required** | &nbsp; | &nbsp; |\n| &nbsp; | [Kit de herramientas de Teams](#install-the-teams-toolkit) | Una Microsoft Visual Studio code que crea un scaffolding de proyecto para la aplicación. Use la versión más reciente. |\n| &nbsp; | [Microsoft Teams](https://www.microsoft.com/microsoft-teams/download-app) | Microsoft Teams colaborar con todos los usuarios con los que trabajes a través de aplicaciones para chat, reuniones, llamadas, todo en un solo lugar.|\n| &nbsp; | [Node.js](https://nodejs.org/en/download/) | Entorno de tiempo de ejecución de JavaScript back-end. Use la versión más reciente de LTS de v14.|\n| &nbsp; | [Microsoft&nbsp; Edge](https://www.microsoft.com/edge) (recomendado) o [Google Chrome](https://www.google.com/chrome/) | Un explorador con herramientas de desarrollador. |\n| &nbsp; | [Visual Studio Code](https://code.visualstudio.com/download) | JavaScript, TypeScript o SharePoint Framework (SPFx) de compilación. Use la versión 1.55 o posterior. |\n| **Optional** | &nbsp; | &nbsp; |\n| &nbsp; | [Azure Tools for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-node-azure-pack) y [CLI de Azure](/cli/azure/install-azure-cli) | Herramientas de Azure para obtener acceso a los datos almacenados o para implementar un back-end basado en la nube para su Teams en Azure. |\n| &nbsp; | [React Developer Tools for Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) OR [React Developer Tools for MicrosoftEdge&nbsp;](https://microsoftedge.microsoft.com/addons/detail/react-developer-tools/gpphkfbcpidddadnkolkpfckpihlkkil) | Una extensión DevTools del explorador para la biblioteca de código React JavaScript. |\n| &nbsp; | [Explorador de Microsoft Graph](https://developer.microsoft.com/graph/graph-explorer) | Microsoft Graph Explorer, una herramienta basada en explorador que le permite ejecutar una consulta desde Microsoft Graph datos. |\n| &nbsp; | [Portal para desarrolladores de Teams](https://dev.teams.microsoft.com/) | Portal basado en web para configurar, administrar y distribuir la aplicación Teams aplicación, incluida la organización o la Teams almacén. |\n\n\n> [!TIP]\n> Si trabaja con microsoft Graph datos, debe obtener más información y marcar el Explorador de Graph Microsoft. Esta herramienta basada en explorador te permite consultar Microsoft Graph fuera de una aplicación.\n\n\n## <a name=\"prepare-development-environment\"></a>Preparar el entorno de desarrollo\n\nDespués de instalar las herramientas necesarias, configure el entorno de desarrollo.\n\n\n### <a name=\"install-the-teams-toolkit\"></a>Instale el Teams Toolkit\n\nEl Teams Toolkit ayuda a simplificar el proceso de desarrollo con herramientas para aprovisionar e implementar recursos en la nube para la aplicación, publicar en la Teams y mucho más. \n \nPuede usar el kit de herramientas con Visual Studio Code o CLI (interfaz de línea de comandos), denominada `TeamsFx`.\n\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abra Visual Studio Code y seleccione la vista **Extensiones** (**Ctrl+Mayús+X** / **)⇧-X** o **Ver > extensiones**).\n1. En el cuadro de búsqueda, **escriba Teams Toolkit**.\n1. Seleccione **Instalar** junto a la Teams Toolkit.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/install-toolkit-vscode.png\" alt-text=\"La ilustración muestra la Teams Toolkit de extensión.\" border=\"false\":::\n\n El Teams Toolkit aparece en la barra lateral Visual Studio Code después de instalarlo.\n\n :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/hw-teams-toolkit-sidebar-icon.png\" alt-text=\"La ilustración muestra el Teams Toolkit en la barra lateral Visual Studio Code barra lateral.\" border=\"false\":::\n\nTambién puede encontrar el Teams Toolkit en el [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/items?itemName=TeamsDevApp.ms-teams-vscode-extension).\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nPara instalar la CLI de TeamsFx, use el administrador `npm` de paquetes:\n\n``` bash\nnpm install -g @microsoft/teamsfx-cli\n```\n\nSegún la configuración, es posible que deba usar para `sudo` instalar la CLI:\n\n``` bash\nsudo npm install -g --unsafe-perm @microsoft/teamsfx-cli\n```\n\nEsta condición es más común en sistemas Linux y macOS.\n\nAsegúrese de agregar la caché global de npm a la ruta de acceso. Este paso normalmente se realiza como parte del instalador Node.js instalación.  \n\nPuede usar la CLI con el `teamsfx` comando. Compruebe que el comando funciona ejecutando `teamsfx -h`.\n\n> [!CAUTION]\n> Para poder ejecutar TeamsFx en terminales de PowerShell, debe habilitar la directiva de ejecución \"firmada remotamente\" para PowerShell.\n\n---\n\n## <a name=\"set-up-your-teams-development-tenant\"></a>Configurar el inquilino Teams desarrollo\n\nUn **espacio** empresarial es como un espacio o un contenedor para su organización en Teams, donde chatea, comparte archivos y ejecuta reuniones. Este espacio también es donde la instalación local y la prueba de la aplicación. Vamos a comprobar si está listo para desarrollar con el inquilino.\n\n### <a name=\"check-for-sideloading-option\"></a>Comprobar la opción de instalación local\n\nDespués de crear la aplicación, debe cargarla en Teams sin distribuirla. Este proceso se conoce como instalación de prueba. Inicie sesión en su Microsoft 365 para ver esta opción.\n\n > [!NOTE]\n > La instalación local es necesaria para obtener una vista previa y probar aplicaciones en Teams entorno local. Si no está habilitada, no podrás obtener una vista previa y probar la aplicación en Teams localmente.\n\n¿Ya tiene un inquilino y tiene acceso de administrador? Vamos a comprobar si realmente lo haces.\n\nCompruebe si puede realizar la instalación local de aplicaciones en Teams:\n\n 1. En el Teams, seleccione el icono **De** la Tienda.\n 1. Selecciona **Administrar aplicaciones**.\n 1. Seleccione **Publicar una aplicación**.\n 1. Busca la opción para Upload **una aplicación personalizada**. Si ves la opción, las aplicaciones de instalación local están habilitadas.\n\n     :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/prerequisites/upload-custom-app.png\" alt-text=\"La ilustración muestra la opción de cargar una aplicación personalizada en Teams.\":::\n\n     > [!NOTE]\n     > Si no tienes la opción de cargar una aplicación personalizada, habla con el administrador Teams usuario.\n\n### <a name=\"create-a-free-teams-developer-tenant-optional\"></a>Crear un espacio empresarial Teams desarrollador (opcional)\n\nSi no tienes una cuenta Teams desarrollador, puedes obtenerla gratuitamente. Unirse al Microsoft 365 programa para desarrolladores.\n\n1. Vaya al [programa para desarrolladores de Microsoft 365](https://developer.microsoft.com/microsoft-365/dev-program).\n1. Selecciona **Unirse ahora** y sigue las instrucciones en pantalla.\n1. En la pantalla de bienvenida, selecciona **Configurar suscripción A5**.\n1. Configure su cuenta de administrador. Después de finalizar, aparecerá la siguiente pantalla.\n\n    :::image type=\"content\" source=\"~/assets/images/build-your-first-app/dev-program-subscription.png\" alt-text=\"Ejemplo de lo que ve después de registrarse en el programa Microsoft 365 desarrollador.\":::\n\n1. Inicie sesión en Teams la cuenta de administrador que acaba de configurar. Comprueba que tienes la opción **Upload una aplicación** personalizada en Teams.\n\n## <a name=\"get-a-free-azure-account\"></a>Obtener una cuenta gratuita de Azure\n\nSi quieres hospedar la aplicación o acceder a recursos en Azure, debes tener una suscripción a Azure. [Cree una cuenta gratuita antes](https://azure.microsoft.com/free/) de comenzar.\n\nAhora tienes todas las herramientas y configura tu cuenta. A continuación, vamos a configurar el entorno de desarrollo y empezar a compilar. Selecciona la aplicación que quieres hacer primero.\n"
- title: Crear área de trabajo de proyecto para la aplicación de pestaña
  durationInMinutes: 1
  content: "\nInicia Microsoft Teams desarrollo de aplicaciones creando tu primera aplicación. Esta aplicación usa la funcionalidad Tab.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-tab/your-helloworld-app-tab.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características. La pestaña está resaltada.\" border=\"false\":::\n\nEn esta página, aprenderás:\n1. [Cómo configurar un nuevo proyecto tab con Teams Toolkit](#create-your-tab-project-workspace)\n1. [Acerca de la estructura de directorios de la aplicación](#take-a-tour-of-the-tab-app-source-code)\n\n## <a name=\"create-your-tab-project-workspace\"></a>Crear el área de trabajo del proyecto de pestaña\n\nSi los requisitos previos están en su lugar, empecemos.\n\n> [!NOTE]\n> La Visual Studio Code de usuario que se muestra es de Mac. Puede ser diferente según el sistema operativo, la Teams Toolkit versión y el entorno.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abrir Visual Studio Code.\n1. Seleccione icono del Kit de herramientas de Teams :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral de Visual Studio Code.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\" border=\"false\":::\n\n1. Selecciona **Crear una nueva Teams para** crear una aplicación con Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Se inicia el Asistente para crear un nuevo proyecto\" border=\"false\":::\n\n1. Asegúrate de **que Tab** esté seleccionada como la funcionalidad que quieres crear en la aplicación. Seleccione **Aceptar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-capabilities-tab.png\" alt-text=\"Seleccionar funcionalidad de la aplicación\" border=\"false\":::\n\n1. Seleccione **JavaScript** como lenguaje de programación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/select-language-tab.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\" border=\"false\":::\n\n1. Escriba `helloworld` como el nombre de la aplicación. Asegúrese de usar solo caracteres alfanuméricos. Seleccione **Entrar** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/enter-name-tab.png\" alt-text=\"Captura de pantalla que muestra dónde escribir el nombre de la aplicación.\" border=\"false\":::\n\n    La Teams pestaña se crea en unos segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/app-created.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\" border=\"false\":::\n\n    Después de crear la aplicación, Teams Toolkit muestra un mensaje para indicar la ubicación donde se crea el área de trabajo del proyecto. Esta carpeta es la ubicación predeterminada especificada en Visual Studio Code configuración.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Mensaje de ubicación\":::\n\n    El mensaje ofrece dos opciones:\n    \n    - **Cambiar ubicación**\n    - **Depuración local**\n    \n    Para este tutorial, no es necesario usar estas opciones.\n\n    > [!NOTE]\n    > Si decide cambiar la ubicación del área de trabajo, solo se reflejará para los proyectos que cree después de volver a cargar Visual Studio Code. No se realiza ningún cambio en la ubicación de los proyectos existentes.\n\n    <details>\n    <summary>Un resumen rápido de la creación de una Teams aplicación.</summary>\n    Vea este breve resumen para crear una Teams aplicación.\n\n    ![Crear una Teams aplicación](~/assets/videos/javascript-tab-app.gif) </details>\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nUse la CLI de `teamsfx` para crear su primer proyecto: Comience en la carpeta en la que quiera crear la carpeta del proyecto.\n\n``` bash\nteamsfx new\n```\n\nPuedes usar la CLI para crear una nueva Teams aplicación. La CLI le lleva a través de una serie de preguntas. Cada pregunta incluye una instrucción para responderla.\n\nPor ejemplo, use las teclas de flecha para seleccionar una opción. Después de hacer la elección, seleccione **Entrar** para confirmarla.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n1. Seleccione la **funcionalidad Tab** .\n1. Seleccione el hospedaje de front-end de **Azure**.\n1. No seleccione ningún recurso en la nube.\n1. Seleccione **JavaScript** como lenguaje de programación.\n1. Presione **Entrar** para seleccionar la carpeta de área de trabajo predeterminada.\n1. Escribe `helloworld` como el nombre de la aplicación. El nombre de la aplicación solo debe tener caracteres alfanuméricos.\n\n  Después de responder a todas las preguntas, se crea el proyecto.\n\n---\n\n## <a name=\"take-a-tour-of-the-tab-app-source-code\"></a>Realizar un recorrido por el código fuente de la aplicación tab\n\nTeams Toolkit proporciona todos los componentes para crear una aplicación. Después de crear el proyecto, puede ver las carpetas y archivos del proyecto en el **área Explorador** de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/hw-folder-structure-tab.png\" alt-text=\"Project archivos scaffolded para la aplicación con la funcionalidad Tab en Visual Studio Code.\":::\n\nAunque puedes elegir cualquier marco de interfaz de usuario (o no usar ninguno), este código de plantilla de ejemplo proporciona un scaffolding con React componentes.\n\nEntre otros elementos de esta estructura de directorios, el Toolkit mantiene:\n\n| Nombre de la carpeta | Contenido |\n| --- | --- |\n| `.fx/configs` | Archivos de configuración que el usuario puede personalizar para la Teams aplicación. |\n| • `.fx/configs/config.<envName>.json` | Archivo de configuración para todos los entornos. |\n| • `.fx/configs/azure.parameters.<envName>.json` | Archivo de parámetros para la provisión de BICEP de Azure para todos los entornos. |\n| • `.fx/configs/projectSettings.json` | Configuración global del proyecto que se aplica a todos los entornos. |\n| • `.fx/configs/localSettings.json` | Archivo de configuración para la depuración local. |\n| • `.fx/states` | Aprovisione el resultado generado por Teams Toolkit.  El kit de herramientas crea esta carpeta después de aprovisionar recursos para la aplicación. |\n| • `.fx/states/state.<envName>.json` | Aprovisionar archivo de salida para todos los entornos. |\n| • `.fx/states/<env>.userdata` | Datos de usuario confidenciales para el resultado de aprovisionamiento para cada entorno. |\n| `tabs` | Código para la funcionalidad Tab necesaria en tiempo de ejecución, como el aviso de privacidad, los términos de uso y las pestañas de configuración. |\n| • `tabs/src/index.jsx` | Punto de entrada de la aplicación front-end, donde se representa el componente de aplicación principal con `ReactDOM.render()` |\n| • `tabs/src/components/App.jsx` | Código para controlar el enrutamiento de direcciones URL en la aplicación. Llama al [SDK del cliente de JavaScript de Microsoft Teams](../msteams-platform/tabs/how-to/using-teams-client-sdk.md) para establecer la comunicación entre la aplicación y Teams. |\n| • `tabs/src/components/Tab.jsx` | Código para implementar la interfaz de usuario de la aplicación. |\n| • `tabs/src/components/TabConfig.jsx` | Código para implementar la interfaz de usuario que configura la aplicación. |\n| `templates/appPackage` | Archivos de plantilla de manifiesto de aplicación y los iconos de la aplicación: color.png y outline.png. |\n| • `templates/appPackage/manifest.local.template.json` | Manifiesto de la aplicación para ejecutar la aplicación en el entorno local.  |\n| • `templates/appPackage/manifest.remote.template.json` | Manifiesto de la aplicación para ejecutar la aplicación en un entorno remoto, como un sitio de Azure.|\n|  `templates/azure` | Archivos de plantilla BICEP. |\n\nAl agregar la funcionalidad de nube, Teams Toolkit agrega las carpetas necesarias al proyecto. La `api` carpeta contiene el código en todas las funciones de Azure que escriba.\n"
- title: Crear y ejecutar la primera aplicación de pestaña
  durationInMinutes: 1
  content: "\nDespués de configurar el área de trabajo del proyecto Teams Toolkit, cree el proyecto de pestaña. Tendrás que iniciar sesión en tu cuenta Microsoft 365 usuario.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Inicie sesión en su Microsoft 365 cuenta\n\nUse su Microsoft 365 para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que configure durante el registro será Microsoft 365 cuenta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.\n1. Seleccione **Iniciar sesión en M365**.\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n\n1. Inicie sesión en su Microsoft 365 con sus credenciales.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n1. Vuelva a Teams Toolkit dentro de Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra el nombre Microsoft 365 cuenta. Teams Toolkit muestra **La instalación local habilitada** si la instalación local está habilitada para la cuenta Microsoft 365 local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de pantalla que muestra dónde iniciar sesión en Microsoft 365 y Azure.\" border=\"false\":::\n\n    Ahora ya estás listo para crear la aplicación y ejecutarla en el entorno local.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Ahora que el entorno de desarrollo está configurado, puedes crear, crear e implementar la primera aplicación Teams desarrollo.\n\n---\n\n## <a name=\"build-and-run-your-app-locally-in-visual-studio-code\"></a>Compilar y ejecutar la aplicación de forma local en Visual Studio Code\n\nPara crear y ejecutar la aplicación localmente:\n\n1. En Visual Studio Code, seleccione **F5** para ejecutar la aplicación en modo de depuración.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Vea lo que ocurre al ejecutar la aplicación localmente en el depurador.</summary>\n\n   Al presionar la tecla **F5**, Teams Toolkit:\n\n   1. Comprueba todos los siguientes requisitos previos:\n      * Se Node.js versión compatible.\n      * Microsoft 365 cuenta ha iniciado sesión y la instalación local está habilitada. \n      * El certificado de desarrollo para localhost está instalado.           \n      * Se instalan paquetes NPM para la aplicación tab.\n      * El puerto requerido por la aplicación de pestaña está disponible.\n\n      > [!NOTE]\n      > Si Teams Toolkit no comprueba ninguno de los requisitos previos, se le pedirá que complete lo mismo.\n\n   2. Registra una aplicación Azure AD y configura la aplicación.\n   3. Registra una aplicación Teams en Teams Developer Portal y configura la aplicación.\n   4. Inicia la aplicación de pestaña.\n   5. Inicia Teams en un explorador web con un comando para indicar a Teams que la aplicación Teams local.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/f5run.png\" alt-text=\"Captura de pantalla que muestra cuándo se presiona la tecla F5.\":::\n\n    > [!NOTE]\n    > Cuando ejecutas la aplicación por primera vez, se descargan todas las dependencias y se compila la aplicación. Una ventana del explorador se abre cuando se completa la compilación. Este proceso puede tardar entre 3 y 5 minutos en completarse.\n\n    El kit de herramientas le pide que instale un certificado local, si es necesario. Este certificado permite a Teams cargar la aplicación desde `https://localhost`.\n\n1. Seleccione **Sí** si aparece el siguiente cuadro de diálogo:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/certificate-new.png\" alt-text=\"Captura de pantalla que muestra el mensaje para instalar un certificado SSL para Teams cargar la aplicación desde localhost.\":::\n\n    O seleccione **Continuar**, según el sistema operativo:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/ssl-prompt-mac.png\" alt-text=\"Captura de pantalla que muestra el mensaje para instalar un certificado SSL para habilitar Teams cargar la aplicación desde localhost en Mac.\":::\n\n    Teams cliente web se abre en una ventana del explorador.\n\n1. Inicie sesión con su Microsoft 365, si se le solicita.\n\n1. Selecciona **Agregar** cuando se te pida que la aplicación se Teams en el equipo local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/add-tab-app-local-debug.png\" alt-text=\"Agregar la aplicación a Teams\":::\n\n1. Enhorabuena, la primera aplicación se está ejecutando en Teams!\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-local-debug.png\" alt-text=\"Captura de pantalla de la aplicación completada\":::\n\n1. Muévete por la página para ver los detalles del usuario.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-local-authorize.png\" alt-text=\"Captura de pantalla de la sección información del usuario en la pestaña\":::\n    \n1. Selecciona **Autorizar** para permitir que la aplicación recupere los detalles del usuario con Microsoft Graph.\n\n    La aplicación solicita permiso para conceder acceso para mostrar los detalles del usuario.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-graph-permission.png\" alt-text=\"Captura de pantalla de autorización de la aplicación para obtener acceso a los detalles del usuario\":::\n\n1. Selecciona **Aceptar para** permitir que la aplicación acceda a los detalles del usuario.\n\n    La fotografía y los detalles aparecen en las pestañas personales.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/tab-app-user-info.png\" alt-text=\"Captura de pantalla de la información del usuario en la pestaña\":::\n\n    Puede realizar actividades de depuración normales, como establecer puntos de interrupción, como si fuera cualquier otra aplicación web. La aplicación es compatible con \"hot reloading\". Si cambia cualquier archivo dentro del proyecto, la página se volverá a cargar.\n\n  <!-- markdownlint-disable MD033 -->\n\n  <details>\n  <summary>Obtén información sobre cómo solucionar problemas si la aplicación no se ejecuta localmente.</summary>\n\n  Para ejecutar correctamente la aplicación en Teams, asegúrate de que has habilitado la instalación local en tu cuenta Teams usuario. Puede obtener más información sobre la instalación local en la sección Requisitos previos.\n\n  </details>\n\n  Sabes cómo usar Toolkit para configurar una aplicación de pestaña y ejecutarla localmente. A continuación, vamos a aprender a crear un bot de chat conversacional con Toolkit!\n"
- title: Crear área de trabajo de proyecto para la aplicación bot
  durationInMinutes: 1
  content: "\nHas creado la aplicación de pestaña. Ahora vamos a crear la primera aplicación bot.\n\nLa funcionalidad bot de una aplicación Teams crea un bot de chat o un bot conversacional. Se usa para ejecutar tareas sencillas y automatizadas, como proporcionar servicio al cliente. Un bot habla con un servicio web y le ayuda a usar sus ofertas. Puede obtener la previsión del tiempo, realizar reservas o cualquier otro servicio ofrecido con un bot de conversación.\n\n:::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-bot/your-helloworld-app-bot.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características. Bot está resaltado.\" border=\"false\":::\n\nComo ya has preparado para crear estas aplicaciones, puedes configurar un nuevo proyecto Teams para crear la aplicación de bot.\n\nEn este tutorial, aprenderás:\n\n1. [Cómo configurar un nuevo proyecto bot con Teams Toolkit.](#create-your-bot-project-workspace)\n1. [Acerca de la estructura de directorios del proyecto de la aplicación.](#take-a-tour-of-the-bot-app-source-code)\n\n> [!IMPORTANT]\n> Actualmente, los bots están disponibles en Government Community Cloud (GCC) pero no están disponibles en GCC-High departamento de defensa (DOD).\n\n## <a name=\"create-your-bot-project-workspace\"></a>Crear el área de trabajo del proyecto de bot\n\nSi los requisitos previos están en su lugar, empecemos.\n\n> [!NOTE]\n> La Visual Studio Code de usuario que se muestra es de Mac. Puede ser diferente según el sistema operativo, la Teams Toolkit versión y el entorno.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vscode)\n\n1. Abrir Visual Studio Code.\n1. Seleccione icono del Kit de herramientas de Teams :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral de Visual Studio Code.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\" border=\"false\":::\n\n1. Selecciona **Crear una nueva Teams para** crear una aplicación mediante el Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Inicio del Asistente para crear un nuevo proyecto\" border=\"false\":::\n\n1. Seleccione **Bot**, anule la selección **de Tab** y seleccione **Aceptar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-capabilities-bot.png\" alt-text=\"Captura de pantalla que muestra cómo agregar funcionalidades a la nueva aplicación.\" border=\"false\":::\n\n1. Seleccione **JavaScript en** la sección **Lenguaje de** programación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/select-language-bot.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\" border=\"false\":::\n\n1. Escriba un nombre adecuado para la aplicación, como `hellobot`. Asegúrate de que el nombre de la aplicación sea alfanumérico. Seleccione **Entrar** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/enter-name-bot.png\" alt-text=\"Captura de pantalla que muestra dónde escribir el nombre de la aplicación.\" border=\"false\":::\n\n    La Teams con una funcionalidad Bot se crea en unos segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-created-bot.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\" border=\"false\":::\n\n    Después de crear la aplicación, el Teams Toolkit muestra un mensaje para indicar la ubicación donde se crea el área de trabajo del proyecto. Esta carpeta es la ubicación predeterminada especificada en Visual Studio Code configuración.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Mensaje de ubicación\":::\n\n    El mensaje ofrece dos opciones:\n    \n    - **Cambiar ubicación**\n    - **Depuración local**\n    \n    Para este tutorial, no es necesario usar estas opciones.\n\n    > [!NOTE]\n    > Si decide cambiar la ubicación del área de trabajo, solo se reflejará para los proyectos que cree después de volver a cargar Visual Studio Code. No se realiza ningún cambio en la ubicación de los proyectos existentes.\n\n<details>\n<summary>Un resumen rápido de la creación de una Teams aplicación.</summary>\nVea este breve resumen para crear una Teams aplicación.\n\n![Crear una Teams aplicación](~/assets/videos/javascript-bot-app.gif)\n</details>\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nUse la CLI de `teamsfx` para crear su primer proyecto:  Comience en la carpeta en la que quiera crear la carpeta del proyecto.\n\n``` bash\nteamsfx new\n```\n\nPuedes usar la CLI para crear una nueva Teams aplicación. La CLI le lleva a través de una serie de preguntas. Cada pregunta incluye una instrucción para responderla.\n\nPor ejemplo, use las teclas de flecha para seleccionar una opción. Después de hacer la elección, seleccione **Entrar** para confirmarla.\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n1. Seleccione **Bot** y anule la selección de **Tab**.\n1. Seleccione **JavaScript** como lenguaje de programación.\n1. Seleccione **Entrar** para seleccionar la carpeta de área de trabajo predeterminada.\n1. Escriba un nombre adecuado para la aplicación, como `HelloBot`.  El nombre de la aplicación solo puede contener caracteres alfanuméricos.\n\nDespués de responder a todas las preguntas, se crea el proyecto.\n\n---\n\n## <a name=\"take-a-tour-of-the-bot-app-source-code\"></a>Realizar un recorrido por el código fuente de la aplicación bot\n\nUna vez terminado el scaffolding, vea los directorios y archivos del proyecto en el área Explorador de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/hw-folder-structure-bot.png\" alt-text=\"Project archivos scaffolded para bot en Visual Studio Code.\" border=\"false\":::\n\n| Nombre de la carpeta | Contenido |\n| --- | --- |\n| `.fx/configs` | Archivos de configuración que el usuario puede personalizar para la Teams aplicación. |\n| `.fx/configs/config.<envName>.json` | Archivo de configuración para todos los entornos. |\n| `.fx/configs/azure.parameters.<envName>.json` | Archivo de parámetros para la provisión de BICEP de Azure para todos los entornos. |\n| `.fx/configs/projectSettings.json` | Configuración global del proyecto que se aplica a todos los entornos. |\n| `.fx/configs/localSettings.json` | Archivo de configuración para la depuración local. |\n| `.fx/states` | Aprovisionar el resultado generado por el Toolkit.  El kit de herramientas crea esta carpeta después de aprovisionar recursos para la aplicación. |\n| `.fx/states/state.<envName>.json` | Aprovisionar archivo de salida para todos los entornos. |\n| `.fx/states/<env>.userdata` | Datos de usuario confidenciales para el resultado de aprovisionamiento para cada entorno. |\n| `bot` |  Código para la funcionalidad bot necesaria en tiempo de ejecución. |\n| `bot/teamsBot.js` | Punto de entrada principal para la aplicación bot. |\n| `templates/appPackage` | Archivos de plantilla de manifiesto de aplicación y los iconos de la aplicación, color.png y outline.png. |\n| `templates/appPackage/manifest.local.template.json` | Manifiesto de la aplicación para ejecutar la aplicación en el entorno local  |\n| `templates/appPackage/manifest.remote.template.json` | Manifiesto de la aplicación para ejecutar la aplicación en un entorno remoto, como el sitio de Azure |\n| `templates/azure` | Archivos de plantilla BICEP |\n\n> [!Tip]\n> Familiarícese con los bots fuera de Teams antes de integrar su primer bot en Teams.\n"
- title: Crear y ejecutar la primera aplicación bot
  durationInMinutes: 1
  content: "\nDespués de configurar el área de trabajo del proyecto Teams Toolkit, cree el proyecto de bot. Asegúrese de que ha iniciado sesión en su cuenta Microsoft 365 usuario.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Inicie sesión en su Microsoft 365 cuenta\n\nUse esta cuenta para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que configure durante el registro será Microsoft 365 cuenta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en M365**.\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n\n1. Inicie sesión en su Microsoft 365 con sus credenciales.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n1. Vuelva a Teams Toolkit dentro de Visual Studio Code.\n\n    Use esta cuenta para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que configure durante el registro será Microsoft 365 cuenta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de pantalla que muestra dónde iniciar sesión en Microsoft 365 y Azure.\" border=\"false\":::\n\n    Ahora ya estás listo para crear la aplicación y ejecutarla localmente.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Ahora que el entorno de desarrollo está configurado, puedes crear, crear e implementar la primera aplicación Teams desarrollo.\n\n---\n\n## <a name=\"build-and-run-your-first-bot-app-locally\"></a>Compilar y ejecutar la primera aplicación de bot localmente\n\nPara crear y ejecutar la aplicación en el entorno local:\n\n1. Selecciona **F5** en Visual Studio Code para ejecutar la aplicación en modo de depuración.\n\n    <!-- markdownlint-disable MD033 -->\n\n    <details>\n    <summary>Vea lo que ocurre al ejecutar la aplicación localmente en el depurador.</summary>\n\n    Al presionar la tecla **F5**, Teams Toolkit:\n\n   1. Comprueba todos los siguientes requisitos previos:\n      * Se Node.js versión compatible.\n      * Microsoft 365 cuenta ha iniciado sesión y la instalación local está habilitada. \n      * Ngrok está instalado.           \n      * Los paquetes NPM para la aplicación bot están instalados.\n      * El puerto requerido por la aplicación bot está disponible.\n\n      > [!NOTE]\n      > Si Teams Toolkit no comprueba ninguno de los requisitos previos, se le pedirá que complete lo mismo.\n\n   2. Inicia Ngrok para crear un túnel HTTP.\n   3. Registra una aplicación Azure AD y configura la aplicación.\n   4. Registra un bot en Bot Framework y configura el bot.\n   5. Registra una aplicación Teams en Teams Developer Portal y configura la aplicación.\n   6. Inicia la aplicación bot.\n   7. Inicia Teams en un explorador web con un comando para indicar a Teams que la aplicación Teams local.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/f5-build-and-run.png\" alt-text=\"Captura de pantalla que muestra cuándo se presiona la tecla F5 para la depuración.\":::\n    \n    >[!NOTE]\n    > Cuando ejecutas la aplicación por primera vez, se descargan todas las dependencias y se compila la aplicación. Cuando se complete la compilación, se abrirá automáticamente una ventana del explorador. Este proceso puede tardar entre 3 y 5 minutos en completarse.\n\n    El explorador web comienza a ejecutar la aplicación.\n\n1. Inicie sesión con su Microsoft 365, si se le solicita.\n\n1. Selecciona **Agregar** cuando se te pida que la aplicación se Teams en el equipo local.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/add-bot-app-local-debug.png\" alt-text=\"La captura de pantalla que muestra el bot se está agregando Teams cliente.\":::\n\n    Ahora el bot se ejecuta correctamente en Teams! Después de cargar la aplicación, se abre una sesión de chat con el bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/app-added-bot-local-debug.png\" alt-text=\"Captura de pantalla que muestra que el bot se ejecuta Teams cliente.\":::\n\n    Puede escribir para `welcome` mostrar una tarjeta de introducción y escribir `learn` para ir a la documentación de comandos de bot y tarjeta adaptable.\n\n     :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/bot-app-learn-local-debug.png\" alt-text=\"Captura de pantalla que muestra la tarjeta de aprendizaje en el bot Teams cliente.\":::       \n\n    Puede realizar actividades de depuración normales, como establecer puntos de interrupción, como con cualquier otra aplicación web. Abra el archivo `bot/teamsBot.js` y busque el método `onMessage()`. Establecer un punto de interrupción en cualquier caso. A continuación, escriba texto.\n\n  <!-- markdownlint-disable MD033 -->\n  <details>\n  <summary>Obtén información sobre cómo solucionar problemas si la aplicación no se ejecuta localmente.</summary>\n\n  Para ejecutar correctamente la aplicación en Teams, asegúrate de que has habilitado la instalación local en tu cuenta Teams usuario. Puede obtener más información sobre la instalación local en la sección Requisitos previos.\n\n  > [!IMPORTANT]\n  > Actualmente, las aplicaciones de instalación local están disponibles en Government Community Cloud (GCC), GCC-High y DOD.\n\n  > [!TIP]\n  > Comprueba si hay problemas antes de realizar la instalación local de la aplicación mediante la [herramienta de validación de la aplicación](https://dev.teams.microsoft.com/appvalidation.html). Esta herramienta se incluye en el kit de herramientas. Se corrigen los errores para la instalación local de la aplicación.\n  </details> \n"
- title: Crear área de trabajo de proyecto para la aplicación de extensión de mensajería
  durationInMinutes: 1
  content: "\nHas creado la aplicación bot. Ahora, vamos a crear la primera aplicación de extensión de mensajería.\n\nLa funcionalidad de extensión de mensajería le permite interactuar con un servicio web. Use el área de redacción, el cuadro de comandos o una mensajería en Teams cliente para buscar e iniciar acciones en un sistema externo.\n\n  :::image type=\"content\" source=\"~/assets/images/teams-toolkit-v2/first-msgext/your-helloworld-app-msgext.png\" alt-text=\"El diagrama que muestra esta aplicación tiene tres características. se resalta la extensión de mensajería.\" border=\"false\":::\n\nHay dos tipos de extensiones de mensajería **Teams**:\n\n- [Comandos de búsqueda](../msteams-platform/messaging-extensions/how-to/search-commands/define-search-command.md): puede buscar en sistemas externos. A continuación, puede insertar sus resultados en un mensaje en forma de tarjeta.\n- [Comandos de acción](../msteams-platform/messaging-extensions/how-to/action-commands/define-action-command.md): puede presentar a los usuarios un elemento emergente modal para recopilar o mostrar información. A continuación, puede procesar su interacción y enviar información de nuevo a Teams.\n\nVamos a crear una aplicación de extensión de mensajería con un *comando de búsqueda*. Úselo para buscar datos externos e insertar los resultados en un mensaje dentro Teams cliente.\n\nComo ya has preparado para crear estas aplicaciones, puedes configurar un nuevo proyecto Teams para crear la aplicación de extensión de mensajería.\n\n> [!NOTE]\n> Las extensiones de mensajería dependen de los bots para proporcionar un diálogo entre el usuario y el código.\n\n\nEn este tutorial, aprenderás:\n\n1. [Cómo configurar un nuevo proyecto de extensión de mensajería con Teams Toolkit.](#create-your-messaging-extension-project-workspace)\n1. [Acerca de la estructura de directorios del proyecto de la aplicación.](#take-a-tour-of-the-messaging-extension-app-source-code)\n\n## <a name=\"create-your-messaging-extension-project-workspace\"></a>Crear el área de trabajo del proyecto de extensión de mensajería\n\nSi los requisitos previos están en su lugar, empecemos.\n\n> [!NOTE]\n> La Visual Studio Code de usuario que se muestra es de Mac. Puede variar según el sistema operativo, la Toolkit versión y el entorno.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vsc)\n\n1. Abrir Visual Studio Code.\n1. Seleccione icono del Kit de herramientas de Teams :::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral de Visual Studio Code.\n\n1. Seleccione **Crear nuevo Project** en el lado izquierdo de la Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/create-project.png\" alt-text=\"Ubicación del vínculo Crear nuevo proyecto en la barra lateral del Kit de herramientas de Teams.\" border=\"false\":::\n\n1. Selecciona **Crear nuevo Project** para crear una aplicación mediante el Teams Toolkit.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-bot/create-new-app.png\" alt-text=\"Inicio del Asistente para crear un nuevo proyecto\" border=\"false\":::\n\n1. Seleccione **Extensión de mensajería**, anule la selección **de pestaña** y seleccione **Aceptar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-capabilities-mex.png\" alt-text=\"Captura de pantalla que muestra cómo agregar funcionalidades a la nueva aplicación.\" border=\"false\":::\n\n1. Seleccione **JavaScript** como lenguaje de programación.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/select-language-mex.png\" alt-text=\"Captura de pantalla que muestra cómo seleccionar el lenguaje de programación.\" border=\"false\":::\n\n1. Escribe un nombre adecuado para la aplicación. Asegúrate de que el nombre de la aplicación sea alfanumérico. Seleccione **Entrar** para continuar.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/enter-name-mex.png\" alt-text=\"Captura de pantalla que muestra cómo escribir el nombre de la aplicación.\" border=\"false\":::\n\n    Teams Toolkit la aplicación en unos segundos.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-created-mex.png\" alt-text=\"Captura de pantalla que muestra la aplicación creada.\" border=\"false\":::\n\n    Después de crear la aplicación, el Teams Toolkit muestra un mensaje para indicar la ubicación donde se crea el área de trabajo del proyecto. Esta es la ubicación predeterminada especificada en la Visual Studio Code configuración.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/location-change.png\" alt-text=\"Mensaje de ubicación\":::\n\n    El mensaje ofrece dos opciones:\n    \n    - **Cambiar ubicación**\n    - **Depuración local**\n    \n    Para este tutorial, no es necesario usar estas opciones.\n\n    > [!NOTE]\n    > Si decide cambiar la ubicación del área de trabajo, solo se reflejará para los proyectos que cree después de volver a cargar Visual Studio Code. No se realiza ningún cambio en la ubicación de los proyectos existentes.\n\n  <details>\n  <summary>Un resumen rápido de la creación de una Teams aplicación.</summary>\n  Vea este breve resumen para crear una Teams aplicación.\n\n  ![Crear una Teams aplicación](~/assets/videos/javascript-msg-ext-app.gif)\n  </details>\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cli)\n\nUse la CLI de `teamsfx` para crear su primer proyecto: Comience en la carpeta en la que quiera crear la carpeta del proyecto.\n\n``` bash\nteamsfx new\n```\n\nPuedes usar la CLI para crear una nueva Teams aplicación. La CLI le lleva a través de una serie de preguntas. Cada pregunta incluye una instrucción para responderla.\n\nPor ejemplo, use las teclas de flecha para seleccionar una opción. Después de hacer la elección, seleccione **Entrar** para confirmarla.\n\n\n1. Seleccione **Crear una nueva aplicación de Teams**.\n1. Seleccione **Extensión de mensaje y** anule la selección de **Tab**.\n1. Seleccione **JavaScript** como lenguaje de programación.\n1. Seleccione **Entrar** para seleccionar la carpeta de área de trabajo predeterminada.\n1. Escriba un nombre adecuado para la aplicación, como `HelloMsgExtn`.  El nombre de la aplicación solo puede contener caracteres alfanuméricos.\n\n  Una vez contestadas todas las preguntas, se crea el proyecto.\n\n---\n\n## <a name=\"take-a-tour-of-the-messaging-extension-app-source-code\"></a>Realizar un recorrido por el código fuente de la aplicación de extensión de mensajería\n\nUna extensión de mensajería usa Bot Framework. Se usa para interactuar con el servicio a través de una conversación. Una vez terminado el scaffolding, vea los directorios y archivos del proyecto en el área Explorador de Visual Studio Code.\n\n:::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/hw-folder-structure-mex.png\" alt-text=\"Diseño de archivo de un proyecto de bot\" border=\"false\":::\n\n| Nombre de la carpeta | Contenido |\n| --- | --- |\n| `.fx/configs` | Archivos de configuración que el usuario puede personalizar para la Teams aplicación. |\n| `.fx/configs/config.<envName>.json` | Archivo de configuración para todos los entornos. |\n| `.fx/configs/azure.parameters.<envName>.json` | Archivo de parámetros para la provisión de BICEP de Azure para todos los entornos. |\n| `.fx/configs/projectSettings.json` | Configuración global del proyecto que se aplica a todos los entornos. |\n| `.fx/configs/localSettings.json` | Archivo de configuración para la depuración local. |\n| `.fx/states` | Aprovisionar el resultado generado por el Toolkit.  El kit de herramientas crea esta carpeta después de aprovisionar recursos para la aplicación. |\n| `.fx/states/state.<envName>.json` | Aprovisionar archivo de salida para todos los entornos. |\n| `.fx/states/<env>.userdata` | Datos de usuario confidenciales para el resultado de aprovisionamiento para cada entorno. |\n| `bot` |  Código para el Bot necesario en tiempo de ejecución. |\n| `bot/messageExtensionBot.js` | Punto de entrada principal de la aplicación de extensión de mensajería. |\n| `templates/appPackage` | Archivos de plantilla de manifiesto de aplicación y los iconos de la aplicación, color.png y outline.png. |\n| `templates/appPackage/manifest.local.template.json` | Manifiesto de la aplicación para ejecutar la aplicación en el entorno local  |\n| `templates/appPackage/manifest.remote.template.json` | Manifiesto de la aplicación para ejecutar la aplicación en un entorno remoto, como el sitio de Azure |\n| `templates/azure` | Archivos de plantilla BICEP |\n\n> [!Tip]\n> Familiarícese con los bots y la extensión de mensajería fuera de Teams antes de integrar la aplicación en Teams.\n"
- title: Crear y ejecutar la primera aplicación de extensión de mensajería
  durationInMinutes: 1
  content: "\nDespués de configurar el área de trabajo del proyecto Teams Toolkit, cree el proyecto. Tendrás que iniciar sesión en tu cuenta Microsoft 365 usuario.\n\n## <a name=\"sign-in-to-your-microsoft-365-account\"></a>Inicie sesión en su Microsoft 365 cuenta\n\nUse esta cuenta para iniciar sesión en Teams. Si usa un inquilino de un Microsoft 365 programa para desarrolladores, la cuenta de administrador que configure durante el registro será Microsoft 365 cuenta.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/vcode)\n\n1. Abrir Visual Studio Code.\n1. Selecciona el Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en M365**.\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n\n1. Inicie sesión en su Microsoft 365 cuenta.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n1. Vuelva a Teams Toolkit dentro de Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra el nombre Microsoft 365 cuenta. El Teams Toolkit muestra **La instalación local** habilitada si la instalación local está habilitada para la Microsoft 365 cuenta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-tab/m365-sideloading-enabled.png\" alt-text=\"Captura de pantalla que muestra dónde iniciar sesión en Microsoft 365 y Azure.\" border=\"false\":::\n\n    Ahora ya estás listo para crear la aplicación y ejecutarla localmente.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Ahora que el entorno de desarrollo está configurado, puedes crear, crear e implementar la primera aplicación Teams desarrollo.\n\n---\n\n## <a name=\"build-and-run-your-app-in-the-local-environment\"></a>Compilar y ejecutar la aplicación en el entorno local\n\nUna extensión de mensajería le permite interactuar con un servicio web. Aprovecha la característica de mensajería y la comunicación segura de un bot. La aplicación de extensión de mensajería se agrega a un servicio web registrado como bot. \n\n### <a name=\"build-and-run-your-app-locally\"></a>Compilar y ejecutar la aplicación localmente\n\n1. Seleccione **F5** en Visual Studio Code para ejecutar la aplicación en modo de depuración.\n    <!-- markdownlint-disable MD033 -->\n    <details>\n    <summary>Vea lo que ocurre al ejecutar la aplicación localmente en el depurador.</summary>\n\n    Al seleccionar **F5**, Teams Toolkit:\n\n    1. Comprueba todos los siguientes requisitos previos:\n      * Se Node.js versión compatible.\n      * Microsoft 365 cuenta ha iniciado sesión y la instalación local está habilitada. \n      * Ngrok está instalado.           \n      * Se instalan paquetes NPM para la extensión de mensajería.\n      * El puerto requerido por la aplicación de extensión de mensajería está disponible.\n\n      > [!NOTE]\n      > Si Teams Toolkit no comprueba ninguno de los requisitos previos, se le pedirá que complete lo mismo.\n      \n    2. Inicia Ngrok para crear un túnel HTTP.\n    3. Registra una aplicación Azure AD y configura la aplicación.\n    4. Registra un bot en Bot Framework y configura el bot.\n    5. Registra una aplicación Teams en Teams Developer Portal y configura la aplicación.\n    6. Inicia la aplicación de extensión de mensajería hospedada localmente.\n    7. Inicia Teams en un explorador web con un comando para indicar a Teams que la aplicación Teams local.\n\n    </details>\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/f5run-mex.png\" alt-text=\"Captura de pantalla que muestra cuándo se presiona la tecla F5 para depurar.\":::\n\n    > [!NOTE]\n    > Cuando ejecutas la aplicación por primera vez, se descargan todas las dependencias y se compila la aplicación. Una ventana del explorador se abre cuando se completa la compilación. Este proceso puede tardar entre 3 y 5 minutos en completarse.\n\n    Teams se abre en un explorador web.\n    \n1. Inicie sesión con su Microsoft 365, si se le solicita.\n1. Selecciona **Agregar** para agregar la aplicación a tu cuenta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/add-mex-app-local-debug.png\" alt-text=\"La captura de pantalla muestra un mensaje para agregar la aplicación\" border=\"false\":::\n\n    El kit de herramientas muestra un mensaje para indicar que la aplicación se ha agregado a Teams.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-added-local-debug.png\" alt-text=\"La captura de pantalla muestra un mensaje para probar la aplicación ahora o posterior\" border=\"true\":::\n\n    - Si **seleccionas Obtenerla**, puedes probar la aplicación más adelante en la lista de aplicaciones de instalación local.\n    - Si selecciona **Probar**, Teams cargará la aplicación.\n\n1. Seleccione **Probar**.\n\n    La aplicación Extensión de mensajería se carga en una aplicación de bot de chat.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/app-added-mex-local-debug.png\" alt-text=\"Captura de pantalla que muestra la aplicación de instalación local en Teams\" border=\"false\":::\n\n    Como las aplicaciones de extensión de mensajería dependen de bots para habilitar la comunicación entre el usuario y el servicio web, la aplicación se carga en una característica de chat de un bot.\n\n    - Si has creado una aplicación bot antes de crear la aplicación de extensión de mensajería, puedes ver que se carga en la misma aplicación bot que creaste. Los mensajes de chat anteriores están visibles.\n    - Si creaste primero una extensión de mensajería, la aplicación se cargará en cualquier chat que esté abierto en Teams.\n\n### <a name=\"test-your-app\"></a>Probar la aplicación\n\nLa primera vez que se carga la aplicación, la aplicación de extensión de mensajería está abierta para que la pruebes. Esta aplicación de ejemplo te permite buscar paquetes npm de código abierto desde el Registro de software.\n\n#### <a name=\"to-run-a-search-query\"></a>Para ejecutar una consulta de búsqueda\n\n1. Vamos a escribir una cadena de búsqueda en el cuadro de búsqueda, como \"cli\". Se obtiene una lista de los elementos que coinciden:\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2//first-msgext/mex-search-string.png\" alt-text=\"Captura de pantalla que muestra cómo usar la aplicación para la búsqueda\" border=\"true\":::\n\n1. Seleccione uno de los resultados de la búsqueda. Se mostrará en el área de redacción para que pueda enviar el resultado al canal.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-result.png\" alt-text=\"Captura de pantalla que muestra el resultado de la búsqueda\" border=\"false\":::\n\n1. Seleccione las **instrucciones de** envío.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-search-sent.png\" alt-text=\"Captura de pantalla que muestra el resultado de la búsqueda enviado en el chat\" border=\"false\":::\n\n    Ahora, has aprendido a crear y ejecutar una aplicación de extensión de mensajería básica.         \n\n## <a name=\"optional-scenarios\"></a>Escenarios opcionales\n\nHas probado la característica de búsqueda de una aplicación de extensión de mensajería básica. Ahora puedes probar otras funcionalidades de esta aplicación. Estos son escenarios opcionales en esta aplicación.\n<br>\n<br>\n<details>\n<summary>Para crear una tarjeta</summary>\n\n1. Seleccione **Crear tarjeta**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/app-added-mex-local-debug.png\" alt-text=\"Captura de pantalla que muestra cómo crear una tarjeta\" border=\"false\":::\n\n1. Escriba los detalles de la tarjeta como se muestra y seleccione **Enviar**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-details.png\" alt-text=\"Captura de pantalla que muestra cómo agregar detalles de una tarjeta\" border=\"true\":::\n\n    Los detalles de la tarjeta aparecen en el área de redacción.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-added.png\" alt-text=\"Captura de pantalla que muestra cómo agregar detalles de una tarjeta\" border=\"true\":::\n\n1. Seleccione el **icono Enviar** del área de redacción.\n\n    La aplicación envía la tarjeta en el chat del bot.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mex-card-sent.png\" alt-text=\"Captura de pantalla que muestra la tarjeta enviada\" border=\"false\":::\n</details>\n<br>\n<details>\n<summary>Para abrir la aplicación desde el área de redacción</summary>\n\nElige una de las siguientes formas de abrir la aplicación.\n\n**Uso `@mention`de :**\n\n1. Escribe `@your-app-name` en el área de comandos de la aplicación.\n    \n    La aplicación abre el cuadro de búsqueda y puedes usarlo para ejecutar una consulta.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/mention-mex-app.png\" alt-text=\"Captura de pantalla que muestra cómo @mention la aplicación de extensión de mensajería\" border=\"false\":::\n\n1. Escriba una cadena de búsqueda y seleccione una del resultado de la búsqueda.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-box-search.png\" alt-text=\"Captura de pantalla que muestra cómo ejecutar una búsqueda con la aplicación de extensión de mensajería\" border=\"false\":::\n\n    Se muestra en el área de comandos como una tarjeta.\n\n1. Copie la tarjeta para pegarla en el área de redacción.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card.png\" alt-text=\"Captura de pantalla que muestra el resultado de la búsqueda en una tarjeta\" border=\"false\":::\n    \n1. Envíe la tarjeta mediante el área de redacción.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/command-search-card-sent.png\" alt-text=\"Captura de pantalla que muestra el resultado de la búsqueda en un chat\" border=\"false\":::\n\n**Con el icono de tres puntos:**\n\n1. Inicie la extensión de mensajería desde tres puntos en la parte inferior del área de redacción.\n1. Selecciona la aplicación de extensión de mensajería.       \n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/three-dot-mex.png\" alt-text=\"Captura de pantalla que muestra cómo abrir la aplicación de extensión de mensajería de ejemplo\" border=\"false\":::\n\n    La aplicación de extensión de mensajería se carga con las opciones para ejecutar una búsqueda y crear tarjetas adaptables.\n</details>\n<br>\n<details>\n<summary>Ejecutar la aplicación desde aplicaciones de instalación local</summary>\n\nPuedes abrir una aplicación de Teams de la lista de aplicaciones de instalación local. \n\n1. Selecciona el **icono De** la Tienda en la barra Teams barra lateral.\n1. Selecciona Administrar **aplicaciones**.\n\n    :::image type=\"content\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/first-msgext/sideloaded-apps.png\" alt-text=\"Captura de pantalla que muestra aplicaciones de instalación local\" border=\"false\":::\n\n1. Selecciona el icono de tres puntos de la aplicación y, a continuación, selecciona **Ver detalles**. También puedes copiar el vínculo a la aplicación y usarlo para abrir la aplicación.\n1. Selecciona **Abrir** para cargar la aplicación y, a continuación, **selecciona Probar**. \n    \n    La aplicación se carga en Teams.\n</details>\n<br>\n<br>\n<!-- markdownlint-disable MD033 -->\n<details>\n<summary>Obtén información sobre cómo solucionar problemas si la aplicación no se ejecuta localmente.</summary>\n\nPara ejecutar la aplicación en Teams, debes tener una cuenta Microsoft 365 desarrollo que permita la instalación local de la aplicación. Puede obtener más información sobre la instalación local en la sección Requisitos previos.\n</details>\n"
- title: Implementar la primera Teams aplicación
  durationInMinutes: 1
  content: "\nHas aprendido a crear, crear y ejecutar una aplicación Teams con las funcionalidades Tab, Bot y Messaging Extension. El paso final es implementar la aplicación en Azure.\n\nVamos a implementar la primera aplicación con la funcionalidad Tab en Azure con Teams Toolkit.\n\n## <a name=\"sign-in-to-your-azure-account\"></a>Iniciar sesión en su cuenta de Azure\n\nUsa esta cuenta para acceder al portal de Microsoft Azure y para aprovisionar nuevos recursos en la nube que admitan la aplicación.\n\n# <a name=\"visual-studio-code\"></a>[Visual Studio Code](#tab/viscode)\n\n1. Abrir Visual Studio Code.\n1. Abre la carpeta del proyecto en la que creaste la aplicación de pestaña.\n1. Selecciona el Teams Toolkit:::image type=\"icon\" source=\"../msteams-platform/assets/images/teams-toolkit-v2/teams-toolkit-sidebar-icon.png\"::: en la barra lateral.  \n1. Seleccione **Iniciar sesión en Azure**.\n\n    > [!TIP]\n    > Si tiene instalada la extensión cuenta de Azure y usa la misma cuenta, puede omitir este paso. Usa la misma cuenta que usas en otras extensiones.\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta.\n1. Inicie sesión en su cuenta de Azure con sus credenciales.\n1. Cierre el explorador cuando se le pida y vuelva a Visual Studio Code.\n\n    La **sección CUENTAS** de la barra lateral muestra las dos cuentas por separado. También enumera el número de suscripciones de Azure que se pueden usar disponibles. Asegúrese de que tiene al menos una suscripción de Azure utilizable disponible. Si no es así, cerrar sesión y usar una cuenta diferente.\n\n    Ahora ya estás listo para implementar la aplicación en Azure.\n\n    Enhorabuena, has creado tres tipos de Teams aplicaciones! \n    Ahora vamos a continuar y aprendamos a implementar una de las aplicaciones en Azure mediante el Teams Toolkit.\n\n# <a name=\"command-line\"></a>[Línea de comandos](#tab/cline)\n\n1. Inicie sesión en Microsoft 365 con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login m365\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n2. Inicie sesión en Azure con la CLI de TeamsFx:\n\n    ``` bash\n    teamsfx account login azure\n    ```\n\n    Se abre el explorador web predeterminado para permitir que inicie sesión en la cuenta. Inicie sesión en su cuenta de Azure con sus credenciales. Cierre el explorador cuando se le pida.\n\n    Los inicios de sesión de la cuenta se comparten Visual Studio Code la CLI de TeamsFx.\n\n    Enhorabuena, has creado tres tipos de Teams aplicaciones! \n    Ahora vamos a continuar y aprendamos a implementar una de las aplicaciones en Azure mediante el Teams Toolkit.\n\n---\n\n  [!INCLUDE [Provision and Deploy your app on Azure](~/includes/get-started/azure-provisioning-instructions.md)]\n\n  <!-- markdownlint-disable MD033 -->.\n  <details>\n  <summary>Vea lo que ocurre al implementar la aplicación en Azure</summary>\n\n  Antes de la implementación, la aplicación se ejecuta de forma local:\n\n  * El back-end se ejecuta con **Azure Functions Core Tools**.\n  * El punto de conexión HTTP de la aplicación, donde Microsoft Teams carga la aplicación, se ejecuta de forma local.\n\n  La implementación es un proceso de dos pasos. Aprovisione los recursos en una suscripción de Azure activa y, a continuación, implemente o cargue el código back-end y front-end de la aplicación en Azure.\n\n  * El back-end, si está configurado, usa varios servicios de Azure, incluidos Azure App Service y Azure Storage.\n  * La aplicación front-end se implementará en una cuenta de Azure Storage configurada para hospedaje web estático.\n\n  </details>\n"
- title: ¡Enhorabuena!
  durationInMinutes: 1
  content: "\nLo has hecho.\n\nHas creado tres aplicaciones, cada una con una funcionalidad diferente: una aplicación de pestaña, una aplicación de bot y una aplicación de extensión de mensajería.\n\nAhora que has aprendido a crear aplicaciones básicas, puedes pasar a crear aplicaciones más complejas. Para empezar, intenta agregar funcionalidades a tus aplicaciones existentes.\n\nPara agregar funcionalidades a la aplicación existente:\n\n1. Selecciona **Agregar funcionalidad en** la **sección Desarrollo** de la barra Teams Toolkit barra lateral.\n\n1. Selecciona la funcionalidad que quieres agregar a la aplicación.\n\nY eso es todo. Teams Toolkit agrega el scaffolding para la nueva funcionalidad a la estructura de directorios de la aplicación. Sigue los procedimientos para compilar e implementar la aplicación y la aplicación tendrá varias funcionalidades. \n\nHas completado el tutorial para crear aplicaciones con JavaScript."
